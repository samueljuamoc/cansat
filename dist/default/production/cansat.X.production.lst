

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 07 12:53:51 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.40
   102                           ; Generated 17/11/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F4550 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataBANK0
   138  005978                     __pidataBANK0:
   139                           	callstack 0
   140                           
   141                           ;initializer for _backlight_val
   142  005978  08                 	db	8
   143                           
   144                           	psect	idataBANK1
   145  0058BC                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for stoa@F1169
   149  0058BC  28                 	db	40
   150  0058BD  6E                 	db	110
   151  0058BE  75                 	db	117
   152  0058BF  6C                 	db	108
   153  0058C0  6C                 	db	108
   154  0058C1  29                 	db	41
   155  0058C2  00                 	db	0
   156                           
   157                           ;initializer for _ptr_h
   158  0058C3  B2                 	db	low _humidity
   159  0058C4  01                 	db	high _humidity
   160                           
   161                           ;initializer for _humidity
   162  0058C5  48                 	db	72
   163  0058C6  75                 	db	117
   164  0058C7  6D                 	db	109
   165  0058C8  65                 	db	101
   166  0058C9  64                 	db	100
   167  0058CA  61                 	db	97
   168  0058CB  64                 	db	100
   169  0058CC  20                 	db	32
   170  0058CD  28                 	db	40
   171  0058CE  48                 	db	72
   172  0058CF  52                 	db	82
   173  0058D0  25                 	db	37
   174  0058D1  29                 	db	41
   175  0058D2  3A                 	db	58
   176  0058D3  20                 	db	32
   177  0058D4  20                 	db	32
   178  0058D5  30                 	db	48
   179  0058D6  30                 	db	48
   180  0058D7  00                 	db	0
   181                           
   182                           	psect	mediumconst
   183  007CE4                     __pmediumconst:
   184                           	callstack 0
   185  007CE4  00                 	db	0
   186  007CE5                     _gps_gga:
   187                           	callstack 0
   188  007CE5  47                 	db	71
   189  007CE6  50                 	db	80
   190  007CE7  47                 	db	71
   191  007CE8  47                 	db	71
   192  007CE9  41                 	db	65
   193  007CEA  00                 	db	0
   194  007CEB                     __end_of_gps_gga:
   195                           	callstack 0
   196  007CEB                     _gps_rmc:
   197                           	callstack 0
   198  007CEB  47                 	db	71
   199  007CEC  50                 	db	80
   200  007CED  52                 	db	82
   201  007CEE  4D                 	db	77
   202  007CEF  43                 	db	67
   203  007CF0  00                 	db	0
   204  007CF1                     __end_of_gps_rmc:
   205                           	callstack 0
   206  0000                     _INTCON2bits	set	4081
   207  0000                     _INTCONbits	set	4082
   208  0000                     _TMR1L	set	4046
   209  0000                     _TMR1H	set	4047
   210  0000                     _RCREG	set	4014
   211  0000                     _TXREG	set	4013
   212  0000                     _PORTAbits	set	3968
   213  0000                     _SSPCON2bits	set	4037
   214  0000                     _CREN	set	32092
   215  0000                     _OERR	set	32089
   216  0000                     _PORTA	set	3968
   217  0000                     _TRISBbits	set	3987
   218  0000                     _TRISCbits	set	3988
   219  0000                     _PIR1bits	set	3998
   220  0000                     _RCSTAbits	set	4011
   221  0000                     _TXSTAbits	set	4012
   222  0000                     _SPBRG	set	4015
   223  0000                     _ADCON1bits	set	4033
   224  0000                     _SSPCON2	set	4037
   225  0000                     _SSPCON1bits	set	4038
   226  0000                     _SSPSTATbits	set	4039
   227  0000                     _T1CONbits	set	4045
   228  0000                     _SSPBUF	set	4041
   229  0000                     _SSPADD	set	4040
   230  0000                     _TRISAbits	set	3986
   231  0000                     _RCONbits	set	4048
   232  0000                     _INTCON3bits	set	4080
   233  007CF1                     STR_17:
   234                           
   235                           ; BSR set to: 0
   236  007CF1  4C                 	db	76	;'L'
   237  007CF2  6F                 	db	111	;'o'
   238  007CF3  6E                 	db	110	;'n'
   239  007CF4  67                 	db	103	;'g'
   240  007CF5  69                 	db	105	;'i'
   241  007CF6  74                 	db	116	;'t'
   242  007CF7  75                 	db	117	;'u'
   243  007CF8  64                 	db	100	;'d'
   244  007CF9  65                 	db	101	;'e'
   245  007CFA  3A                 	db	58	;':'
   246  007CFB  20                 	db	32
   247  007CFC  25                 	db	37
   248  007CFD  63                 	db	99	;'c'
   249  007CFE  25                 	db	37
   250  007CFF  63                 	db	99	;'c'
   251  007D00  25                 	db	37
   252  007D01  63                 	db	99	;'c'
   253  007D02  B0                 	db	-80
   254  007D03  25                 	db	37
   255  007D04  63                 	db	99	;'c'
   256  007D05  25                 	db	37
   257  007D06  63                 	db	99	;'c'
   258  007D07  2E                 	db	46
   259  007D08  25                 	db	37
   260  007D09  63                 	db	99	;'c'
   261  007D0A  25                 	db	37
   262  007D0B  63                 	db	99	;'c'
   263  007D0C  25                 	db	37
   264  007D0D  63                 	db	99	;'c'
   265  007D0E  27                 	db	39
   266  007D0F  20                 	db	32
   267  007D10  25                 	db	37
   268  007D11  63                 	db	99	;'c'
   269  007D12  0D                 	db	13
   270  007D13  0A                 	db	10
   271  007D14  00                 	db	0
   272  007D15                     STR_16:
   273                           
   274                           ; BSR set to: 0
   275  007D15  4C                 	db	76	;'L'
   276  007D16  61                 	db	97	;'a'
   277  007D17  74                 	db	116	;'t'
   278  007D18  69                 	db	105	;'i'
   279  007D19  74                 	db	116	;'t'
   280  007D1A  75                 	db	117	;'u'
   281  007D1B  64                 	db	100	;'d'
   282  007D1C  65                 	db	101	;'e'
   283  007D1D  3A                 	db	58	;':'
   284  007D1E  20                 	db	32
   285  007D1F  20                 	db	32
   286  007D20  25                 	db	37
   287  007D21  63                 	db	99	;'c'
   288  007D22  25                 	db	37
   289  007D23  63                 	db	99	;'c'
   290  007D24  B0                 	db	-80
   291  007D25  25                 	db	37
   292  007D26  63                 	db	99	;'c'
   293  007D27  25                 	db	37
   294  007D28  63                 	db	99	;'c'
   295  007D29  2E                 	db	46
   296  007D2A  25                 	db	37
   297  007D2B  63                 	db	99	;'c'
   298  007D2C  25                 	db	37
   299  007D2D  63                 	db	99	;'c'
   300  007D2E  25                 	db	37
   301  007D2F  63                 	db	99	;'c'
   302  007D30  27                 	db	39
   303  007D31  20                 	db	32
   304  007D32  25                 	db	37
   305  007D33  63                 	db	99	;'c'
   306  007D34  0D                 	db	13
   307  007D35  0A                 	db	10
   308  007D36  00                 	db	0
   309  007D37                     STR_43:
   310                           
   311                           ; BSR set to: 0
   312  007D37  4E                 	db	78	;'N'
   313  007D38  6F                 	db	111	;'o'
   314  007D39  20                 	db	32
   315  007D3A  72                 	db	114	;'r'
   316  007D3B  65                 	db	101	;'e'
   317  007D3C  73                 	db	115	;'s'
   318  007D3D  70                 	db	112	;'p'
   319  007D3E  6F                 	db	111	;'o'
   320  007D3F  6E                 	db	110	;'n'
   321  007D40  73                 	db	115	;'s'
   322  007D41  65                 	db	101	;'e'
   323  007D42  20                 	db	32
   324  007D43  66                 	db	102	;'f'
   325  007D44  72                 	db	114	;'r'
   326  007D45  6F                 	db	111	;'o'
   327  007D46  6D                 	db	109	;'m'
   328  007D47  20                 	db	32
   329  007D48  74                 	db	116	;'t'
   330  007D49  68                 	db	104	;'h'
   331  007D4A  65                 	db	101	;'e'
   332  007D4B  20                 	db	32
   333  007D4C  73                 	db	115	;'s'
   334  007D4D  65                 	db	101	;'e'
   335  007D4E  6E                 	db	110	;'n'
   336  007D4F  73                 	db	115	;'s'
   337  007D50  6F                 	db	111	;'o'
   338  007D51  72                 	db	114	;'r'
   339  007D52  0D                 	db	13
   340  007D53  0A                 	db	10
   341  007D54  00                 	db	0
   342  007D55                     STR_15:
   343                           
   344                           ; BSR set to: 0
   345  007D55  44                 	db	68	;'D'
   346  007D56  61                 	db	97	;'a'
   347  007D57  74                 	db	116	;'t'
   348  007D58  65                 	db	101	;'e'
   349  007D59  3A                 	db	58	;':'
   350  007D5A  20                 	db	32
   351  007D5B  20                 	db	32
   352  007D5C  20                 	db	32
   353  007D5D  20                 	db	32
   354  007D5E  20                 	db	32
   355  007D5F  20                 	db	32
   356  007D60  25                 	db	37
   357  007D61  63                 	db	99	;'c'
   358  007D62  25                 	db	37
   359  007D63  63                 	db	99	;'c'
   360  007D64  2F                 	db	47
   361  007D65  25                 	db	37
   362  007D66  63                 	db	99	;'c'
   363  007D67  25                 	db	37
   364  007D68  63                 	db	99	;'c'
   365  007D69  2F                 	db	47
   366  007D6A  25                 	db	37
   367  007D6B  63                 	db	99	;'c'
   368  007D6C  25                 	db	37
   369  007D6D  63                 	db	99	;'c'
   370  007D6E  0D                 	db	13
   371  007D6F  0A                 	db	10
   372  007D70  00                 	db	0
   373  007D71                     STR_14:
   374                           
   375                           ; BSR set to: 0
   376  007D71  54                 	db	84	;'T'
   377  007D72  69                 	db	105	;'i'
   378  007D73  6D                 	db	109	;'m'
   379  007D74  65                 	db	101	;'e'
   380  007D75  28                 	db	40
   381  007D76  55                 	db	85	;'U'
   382  007D77  54                 	db	84	;'T'
   383  007D78  43                 	db	67	;'C'
   384  007D79  29                 	db	41
   385  007D7A  3A                 	db	58	;':'
   386  007D7B  20                 	db	32
   387  007D7C  25                 	db	37
   388  007D7D  63                 	db	99	;'c'
   389  007D7E  25                 	db	37
   390  007D7F  63                 	db	99	;'c'
   391  007D80  3A                 	db	58	;':'
   392  007D81  25                 	db	37
   393  007D82  63                 	db	99	;'c'
   394  007D83  25                 	db	37
   395  007D84  63                 	db	99	;'c'
   396  007D85  3A                 	db	58	;':'
   397  007D86  25                 	db	37
   398  007D87  63                 	db	99	;'c'
   399  007D88  25                 	db	37
   400  007D89  63                 	db	99	;'c'
   401  007D8A  0D                 	db	13
   402  007D8B  0A                 	db	10
   403  007D8C  00                 	db	0
   404  007D8D                     STR_29:
   405                           
   406                           ; BSR set to: 0
   407  007D8D  25                 	db	37
   408  007D8E  63                 	db	99	;'c'
   409  007D8F  25                 	db	37
   410  007D90  63                 	db	99	;'c'
   411  007D91  25                 	db	37
   412  007D92  63                 	db	99	;'c'
   413  007D93  B0                 	db	-80
   414  007D94  25                 	db	37
   415  007D95  63                 	db	99	;'c'
   416  007D96  25                 	db	37
   417  007D97  63                 	db	99	;'c'
   418  007D98  2E                 	db	46
   419  007D99  25                 	db	37
   420  007D9A  63                 	db	99	;'c'
   421  007D9B  25                 	db	37
   422  007D9C  63                 	db	99	;'c'
   423  007D9D  25                 	db	37
   424  007D9E  63                 	db	99	;'c'
   425  007D9F  27                 	db	39
   426  007DA0  20                 	db	32
   427  007DA1  25                 	db	37
   428  007DA2  63                 	db	99	;'c'
   429  007DA3  20                 	db	32
   430  007DA4  20                 	db	32
   431  007DA5  20                 	db	32
   432  007DA6  00                 	db	0
   433  007DA7                     STR_27:
   434                           
   435                           ; BSR set to: 0
   436  007DA7  25                 	db	37
   437  007DA8  63                 	db	99	;'c'
   438  007DA9  25                 	db	37
   439  007DAA  63                 	db	99	;'c'
   440  007DAB  B0                 	db	-80
   441  007DAC  25                 	db	37
   442  007DAD  63                 	db	99	;'c'
   443  007DAE  25                 	db	37
   444  007DAF  63                 	db	99	;'c'
   445  007DB0  2E                 	db	46
   446  007DB1  25                 	db	37
   447  007DB2  63                 	db	99	;'c'
   448  007DB3  25                 	db	37
   449  007DB4  63                 	db	99	;'c'
   450  007DB5  25                 	db	37
   451  007DB6  63                 	db	99	;'c'
   452  007DB7  27                 	db	39
   453  007DB8  20                 	db	32
   454  007DB9  25                 	db	37
   455  007DBA  63                 	db	99	;'c'
   456  007DBB  20                 	db	32
   457  007DBC  20                 	db	32
   458  007DBD  20                 	db	32
   459  007DBE  20                 	db	32
   460  007DBF  00                 	db	0
   461  007DC0                     STR_25:
   462                           
   463                           ; BSR set to: 0
   464  007DC0  25                 	db	37
   465  007DC1  63                 	db	99	;'c'
   466  007DC2  25                 	db	37
   467  007DC3  63                 	db	99	;'c'
   468  007DC4  2F                 	db	47
   469  007DC5  25                 	db	37
   470  007DC6  63                 	db	99	;'c'
   471  007DC7  25                 	db	37
   472  007DC8  63                 	db	99	;'c'
   473  007DC9  2F                 	db	47
   474  007DCA  25                 	db	37
   475  007DCB  63                 	db	99	;'c'
   476  007DCC  25                 	db	37
   477  007DCD  63                 	db	99	;'c'
   478  007DCE  20                 	db	32
   479  007DCF  20                 	db	32
   480  007DD0  20                 	db	32
   481  007DD1  20                 	db	32
   482  007DD2  20                 	db	32
   483  007DD3  20                 	db	32
   484  007DD4  20                 	db	32
   485  007DD5  20                 	db	32
   486  007DD6  00                 	db	0
   487  007DD7                     STR_23:
   488                           
   489                           ; BSR set to: 0
   490  007DD7  25                 	db	37
   491  007DD8  63                 	db	99	;'c'
   492  007DD9  25                 	db	37
   493  007DDA  63                 	db	99	;'c'
   494  007DDB  3A                 	db	58	;':'
   495  007DDC  25                 	db	37
   496  007DDD  63                 	db	99	;'c'
   497  007DDE  25                 	db	37
   498  007DDF  63                 	db	99	;'c'
   499  007DE0  3A                 	db	58	;':'
   500  007DE1  25                 	db	37
   501  007DE2  63                 	db	99	;'c'
   502  007DE3  25                 	db	37
   503  007DE4  63                 	db	99	;'c'
   504  007DE5  20                 	db	32
   505  007DE6  20                 	db	32
   506  007DE7  20                 	db	32
   507  007DE8  20                 	db	32
   508  007DE9  20                 	db	32
   509  007DEA  20                 	db	32
   510  007DEB  20                 	db	32
   511  007DEC  20                 	db	32
   512  007DED  00                 	db	0
   513  007DEE                     STR_21:
   514                           
   515                           ; BSR set to: 0
   516  007DEE  53                 	db	83	;'S'
   517  007DEF  61                 	db	97	;'a'
   518  007DF0  74                 	db	116	;'t'
   519  007DF1  65                 	db	101	;'e'
   520  007DF2  6C                 	db	108	;'l'
   521  007DF3  6C                 	db	108	;'l'
   522  007DF4  69                 	db	105	;'i'
   523  007DF5  74                 	db	116	;'t'
   524  007DF6  65                 	db	101	;'e'
   525  007DF7  73                 	db	115	;'s'
   526  007DF8  3A                 	db	58	;':'
   527  007DF9  25                 	db	37
   528  007DFA  73                 	db	115	;'s'
   529  007DFB  20                 	db	32
   530  007DFC  75                 	db	117	;'u'
   531  007DFD  6E                 	db	110	;'n'
   532  007DFE  69                 	db	105	;'i'
   533  007DFF  74                 	db	116	;'t'
   534  007E00  73                 	db	115	;'s'
   535  007E01  0D                 	db	13
   536  007E02  0A                 	db	10
   537  007E03  00                 	db	0
   538  007E04                     STR_5:
   539                           
   540                           ; BSR set to: 0
   541  007E04  20                 	db	32
   542  007E05  20                 	db	32
   543  007E06  42                 	db	66	;'B'
   544  007E07  59                 	db	89	;'Y'
   545  007E08  20                 	db	32
   546  007E09  53                 	db	83	;'S'
   547  007E0A  41                 	db	65	;'A'
   548  007E0B  4D                 	db	77	;'M'
   549  007E0C  55                 	db	85	;'U'
   550  007E0D  45                 	db	69	;'E'
   551  007E0E  4C                 	db	76	;'L'
   552  007E0F  20                 	db	32
   553  007E10  4A                 	db	74	;'J'
   554  007E11  4D                 	db	77	;'M'
   555  007E12  20                 	db	32
   556  007E13  20                 	db	32
   557  007E14  0D                 	db	13
   558  007E15  0A                 	db	10
   559  007E16  0D                 	db	13
   560  007E17  0A                 	db	10
   561  007E18  00                 	db	0
   562  007E19                     STR_18:
   563                           
   564                           ; BSR set to: 0
   565  007E19  41                 	db	65	;'A'
   566  007E1A  6C                 	db	108	;'l'
   567  007E1B  74                 	db	116	;'t'
   568  007E1C  69                 	db	105	;'i'
   569  007E1D  74                 	db	116	;'t'
   570  007E1E  75                 	db	117	;'u'
   571  007E1F  64                 	db	100	;'d'
   572  007E20  65                 	db	101	;'e'
   573  007E21  3A                 	db	58	;':'
   574  007E22  20                 	db	32
   575  007E23  20                 	db	32
   576  007E24  25                 	db	37
   577  007E25  73                 	db	115	;'s'
   578  007E26  20                 	db	32
   579  007E27  6D                 	db	109	;'m'
   580  007E28  73                 	db	115	;'s'
   581  007E29  6E                 	db	110	;'n'
   582  007E2A  6D                 	db	109	;'m'
   583  007E2B  0D                 	db	13
   584  007E2C  0A                 	db	10
   585  007E2D  00                 	db	0
   586  007E2E                     STR_4:
   587                           
   588                           ; BSR set to: 0
   589  007E2E  20                 	db	32
   590  007E2F  20                 	db	32
   591  007E30  20                 	db	32
   592  007E31  20                 	db	32
   593  007E32  20                 	db	32
   594  007E33  43                 	db	67	;'C'
   595  007E34  41                 	db	65	;'A'
   596  007E35  4E                 	db	78	;'N'
   597  007E36  53                 	db	83	;'S'
   598  007E37  41                 	db	65	;'A'
   599  007E38  54                 	db	84	;'T'
   600  007E39  20                 	db	32
   601  007E3A  20                 	db	32
   602  007E3B  20                 	db	32
   603  007E3C  20                 	db	32
   604  007E3D  20                 	db	32
   605  007E3E  0D                 	db	13
   606  007E3F  0A                 	db	10
   607  007E40  00                 	db	0
   608  007E41                     STR_19:
   609                           
   610                           ; BSR set to: 0
   611  007E41  53                 	db	83	;'S'
   612  007E42  70                 	db	112	;'p'
   613  007E43  65                 	db	101	;'e'
   614  007E44  65                 	db	101	;'e'
   615  007E45  64                 	db	100	;'d'
   616  007E46  3A                 	db	58	;':'
   617  007E47  20                 	db	32
   618  007E48  20                 	db	32
   619  007E49  20                 	db	32
   620  007E4A  20                 	db	32
   621  007E4B  20                 	db	32
   622  007E4C  25                 	db	37
   623  007E4D  73                 	db	115	;'s'
   624  007E4E  20                 	db	32
   625  007E4F  6B                 	db	107	;'k'
   626  007E50  6E                 	db	110	;'n'
   627  007E51  0D                 	db	13
   628  007E52  0A                 	db	10
   629  007E53  00                 	db	0
   630  007E54                     STR_42:
   631                           
   632                           ; BSR set to: 0
   633  007E54  43                 	db	67	;'C'
   634  007E55  68                 	db	104	;'h'
   635  007E56  65                 	db	101	;'e'
   636  007E57  63                 	db	99	;'c'
   637  007E58  6B                 	db	107	;'k'
   638  007E59  73                 	db	115	;'s'
   639  007E5A  75                 	db	117	;'u'
   640  007E5B  6D                 	db	109	;'m'
   641  007E5C  20                 	db	32
   642  007E5D  45                 	db	69	;'E'
   643  007E5E  72                 	db	114	;'r'
   644  007E5F  72                 	db	114	;'r'
   645  007E60  6F                 	db	111	;'o'
   646  007E61  72                 	db	114	;'r'
   647  007E62  21                 	db	33
   648  007E63  0D                 	db	13
   649  007E64  0A                 	db	10
   650  007E65  00                 	db	0
   651  007E66                     STR_20:
   652                           
   653                           ; BSR set to: 0
   654  007E66  43                 	db	67	;'C'
   655  007E67  6F                 	db	111	;'o'
   656  007E68  75                 	db	117	;'u'
   657  007E69  72                 	db	114	;'r'
   658  007E6A  73                 	db	115	;'s'
   659  007E6B  65                 	db	101	;'e'
   660  007E6C  3A                 	db	58	;':'
   661  007E6D  20                 	db	32
   662  007E6E  20                 	db	32
   663  007E6F  20                 	db	32
   664  007E70  20                 	db	32
   665  007E71  25                 	db	37
   666  007E72  73                 	db	115	;'s'
   667  007E73  20                 	db	32
   668  007E74  B0                 	db	-80
   669  007E75  0D                 	db	13
   670  007E76  0A                 	db	10
   671  007E77  00                 	db	0
   672  007E78                     STR_38:
   673                           
   674                           ; BSR set to: 0
   675  007E78  20                 	db	32
   676  007E79  20                 	db	32
   677  007E7A  20                 	db	32
   678  007E7B  20                 	db	32
   679  007E7C  20                 	db	32
   680  007E7D  20                 	db	32
   681  007E7E  20                 	db	32
   682  007E7F  20                 	db	32
   683  007E80  20                 	db	32
   684  007E81  20                 	db	32
   685  007E82  20                 	db	32
   686  007E83  20                 	db	32
   687  007E84  20                 	db	32
   688  007E85  20                 	db	32
   689  007E86  20                 	db	32
   690  007E87  20                 	db	32
   691  007E88  00                 	db	0
   692  007E89                     STR_24:
   693                           
   694                           ; BSR set to: 0
   695  007E89  44                 	db	68	;'D'
   696  007E8A  61                 	db	97	;'a'
   697  007E8B  74                 	db	116	;'t'
   698  007E8C  65                 	db	101	;'e'
   699  007E8D  3A                 	db	58	;':'
   700  007E8E  20                 	db	32
   701  007E8F  20                 	db	32
   702  007E90  20                 	db	32
   703  007E91  20                 	db	32
   704  007E92  20                 	db	32
   705  007E93  20                 	db	32
   706  007E94  20                 	db	32
   707  007E95  20                 	db	32
   708  007E96  20                 	db	32
   709  007E97  20                 	db	32
   710  007E98  20                 	db	32
   711  007E99  00                 	db	0
   712  007E9A                     STR_32:
   713                           
   714                           ; BSR set to: 0
   715  007E9A  53                 	db	83	;'S'
   716  007E9B  70                 	db	112	;'p'
   717  007E9C  65                 	db	101	;'e'
   718  007E9D  65                 	db	101	;'e'
   719  007E9E  64                 	db	100	;'d'
   720  007E9F  3A                 	db	58	;':'
   721  007EA0  20                 	db	32
   722  007EA1  20                 	db	32
   723  007EA2  20                 	db	32
   724  007EA3  20                 	db	32
   725  007EA4  20                 	db	32
   726  007EA5  20                 	db	32
   727  007EA6  20                 	db	32
   728  007EA7  20                 	db	32
   729  007EA8  20                 	db	32
   730  007EA9  20                 	db	32
   731  007EAA  00                 	db	0
   732  007EAB                     STR_26:
   733                           
   734                           ; BSR set to: 0
   735  007EAB  4C                 	db	76	;'L'
   736  007EAC  61                 	db	97	;'a'
   737  007EAD  74                 	db	116	;'t'
   738  007EAE  69                 	db	105	;'i'
   739  007EAF  74                 	db	116	;'t'
   740  007EB0  75                 	db	117	;'u'
   741  007EB1  64                 	db	100	;'d'
   742  007EB2  65                 	db	101	;'e'
   743  007EB3  3A                 	db	58	;':'
   744  007EB4  20                 	db	32
   745  007EB5  20                 	db	32
   746  007EB6  20                 	db	32
   747  007EB7  20                 	db	32
   748  007EB8  20                 	db	32
   749  007EB9  20                 	db	32
   750  007EBA  20                 	db	32
   751  007EBB  00                 	db	0
   752  007EBC                     STR_30:
   753                           
   754                           ; BSR set to: 0
   755  007EBC  41                 	db	65	;'A'
   756  007EBD  6C                 	db	108	;'l'
   757  007EBE  74                 	db	116	;'t'
   758  007EBF  69                 	db	105	;'i'
   759  007EC0  74                 	db	116	;'t'
   760  007EC1  75                 	db	117	;'u'
   761  007EC2  64                 	db	100	;'d'
   762  007EC3  65                 	db	101	;'e'
   763  007EC4  3A                 	db	58	;':'
   764  007EC5  20                 	db	32
   765  007EC6  20                 	db	32
   766  007EC7  20                 	db	32
   767  007EC8  20                 	db	32
   768  007EC9  20                 	db	32
   769  007ECA  20                 	db	32
   770  007ECB  20                 	db	32
   771  007ECC  00                 	db	0
   772  007ECD                     STR_22:
   773                           
   774                           ; BSR set to: 0
   775  007ECD  54                 	db	84	;'T'
   776  007ECE  69                 	db	105	;'i'
   777  007ECF  6D                 	db	109	;'m'
   778  007ED0  65                 	db	101	;'e'
   779  007ED1  28                 	db	40
   780  007ED2  55                 	db	85	;'U'
   781  007ED3  54                 	db	84	;'T'
   782  007ED4  43                 	db	67	;'C'
   783  007ED5  29                 	db	41
   784  007ED6  3A                 	db	58	;':'
   785  007ED7  20                 	db	32
   786  007ED8  20                 	db	32
   787  007ED9  20                 	db	32
   788  007EDA  20                 	db	32
   789  007EDB  20                 	db	32
   790  007EDC  20                 	db	32
   791  007EDD  00                 	db	0
   792  007EDE                     STR_28:
   793                           
   794                           ; BSR set to: 0
   795  007EDE  4C                 	db	76	;'L'
   796  007EDF  6F                 	db	111	;'o'
   797  007EE0  6E                 	db	110	;'n'
   798  007EE1  67                 	db	103	;'g'
   799  007EE2  69                 	db	105	;'i'
   800  007EE3  74                 	db	116	;'t'
   801  007EE4  75                 	db	117	;'u'
   802  007EE5  64                 	db	100	;'d'
   803  007EE6  65                 	db	101	;'e'
   804  007EE7  3A                 	db	58	;':'
   805  007EE8  20                 	db	32
   806  007EE9  20                 	db	32
   807  007EEA  20                 	db	32
   808  007EEB  20                 	db	32
   809  007EEC  20                 	db	32
   810  007EED  20                 	db	32
   811  007EEE  00                 	db	0
   812  007EEF                     STR_36:
   813                           
   814                           ; BSR set to: 0
   815  007EEF  53                 	db	83	;'S'
   816  007EF0  61                 	db	97	;'a'
   817  007EF1  74                 	db	116	;'t'
   818  007EF2  65                 	db	101	;'e'
   819  007EF3  6C                 	db	108	;'l'
   820  007EF4  6C                 	db	108	;'l'
   821  007EF5  69                 	db	105	;'i'
   822  007EF6  74                 	db	116	;'t'
   823  007EF7  65                 	db	101	;'e'
   824  007EF8  73                 	db	115	;'s'
   825  007EF9  3A                 	db	58	;':'
   826  007EFA  20                 	db	32
   827  007EFB  20                 	db	32
   828  007EFC  20                 	db	32
   829  007EFD  20                 	db	32
   830  007EFE  20                 	db	32
   831  007EFF  00                 	db	0
   832  007F00                     STR_2:
   833                           
   834                           ; BSR set to: 0
   835  007F00  20                 	db	32
   836  007F01  20                 	db	32
   837  007F02  20                 	db	32
   838  007F03  20                 	db	32
   839  007F04  20                 	db	32
   840  007F05  43                 	db	67	;'C'
   841  007F06  41                 	db	65	;'A'
   842  007F07  4E                 	db	78	;'N'
   843  007F08  53                 	db	83	;'S'
   844  007F09  41                 	db	65	;'A'
   845  007F0A  54                 	db	84	;'T'
   846  007F0B  20                 	db	32
   847  007F0C  20                 	db	32
   848  007F0D  20                 	db	32
   849  007F0E  20                 	db	32
   850  007F0F  20                 	db	32
   851  007F10  00                 	db	0
   852  007F11                     STR_6:
   853                           
   854                           ; BSR set to: 0
   855  007F11  56                 	db	86	;'V'
   856  007F12  6F                 	db	111	;'o'
   857  007F13  6C                 	db	108	;'l'
   858  007F14  74                 	db	116	;'t'
   859  007F15  61                 	db	97	;'a'
   860  007F16  6A                 	db	106	;'j'
   861  007F17  65                 	db	101	;'e'
   862  007F18  20                 	db	32
   863  007F19  28                 	db	40
   864  007F1A  56                 	db	86	;'V'
   865  007F1B  29                 	db	41
   866  007F1C  3A                 	db	58	;':'
   867  007F1D  20                 	db	32
   868  007F1E  20                 	db	32
   869  007F1F  20                 	db	32
   870  007F20  20                 	db	32
   871  007F21  00                 	db	0
   872  007F22                     STR_8:
   873                           
   874                           ; BSR set to: 0
   875  007F22  50                 	db	80	;'P'
   876  007F23  6F                 	db	111	;'o'
   877  007F24  74                 	db	116	;'t'
   878  007F25  65                 	db	101	;'e'
   879  007F26  6E                 	db	110	;'n'
   880  007F27  63                 	db	99	;'c'
   881  007F28  69                 	db	105	;'i'
   882  007F29  61                 	db	97	;'a'
   883  007F2A  20                 	db	32
   884  007F2B  28                 	db	40
   885  007F2C  6D                 	db	109	;'m'
   886  007F2D  57                 	db	87	;'W'
   887  007F2E  29                 	db	41
   888  007F2F  3A                 	db	58	;':'
   889  007F30  20                 	db	32
   890  007F31  20                 	db	32
   891  007F32  00                 	db	0
   892  007F33                     STR_3:
   893                           
   894                           ; BSR set to: 0
   895  007F33  20                 	db	32
   896  007F34  20                 	db	32
   897  007F35  42                 	db	66	;'B'
   898  007F36  59                 	db	89	;'Y'
   899  007F37  20                 	db	32
   900  007F38  53                 	db	83	;'S'
   901  007F39  41                 	db	65	;'A'
   902  007F3A  4D                 	db	77	;'M'
   903  007F3B  55                 	db	85	;'U'
   904  007F3C  45                 	db	69	;'E'
   905  007F3D  4C                 	db	76	;'L'
   906  007F3E  20                 	db	32
   907  007F3F  4A                 	db	74	;'J'
   908  007F40  4D                 	db	77	;'M'
   909  007F41  20                 	db	32
   910  007F42  20                 	db	32
   911  007F43  00                 	db	0
   912  007F44                     STR_7:
   913                           
   914                           ; BSR set to: 0
   915  007F44  43                 	db	67	;'C'
   916  007F45  6F                 	db	111	;'o'
   917  007F46  72                 	db	114	;'r'
   918  007F47  72                 	db	114	;'r'
   919  007F48  69                 	db	105	;'i'
   920  007F49  65                 	db	101	;'e'
   921  007F4A  6E                 	db	110	;'n'
   922  007F4B  74                 	db	116	;'t'
   923  007F4C  65                 	db	101	;'e'
   924  007F4D  20                 	db	32
   925  007F4E  28                 	db	40
   926  007F4F  6D                 	db	109	;'m'
   927  007F50  41                 	db	65	;'A'
   928  007F51  29                 	db	41
   929  007F52  3A                 	db	58	;':'
   930  007F53  20                 	db	32
   931  007F54  00                 	db	0
   932  007F55                     STR_9:
   933                           
   934                           ; BSR set to: 0
   935  007F55  54                 	db	84	;'T'
   936  007F56  65                 	db	101	;'e'
   937  007F57  6D                 	db	109	;'m'
   938  007F58  70                 	db	112	;'p'
   939  007F59  65                 	db	101	;'e'
   940  007F5A  72                 	db	114	;'r'
   941  007F5B  61                 	db	97	;'a'
   942  007F5C  74                 	db	116	;'t'
   943  007F5D  75                 	db	117	;'u'
   944  007F5E  72                 	db	114	;'r'
   945  007F5F  61                 	db	97	;'a'
   946  007F60  20                 	db	32
   947  007F61  28                 	db	40
   948  007F62  43                 	db	67	;'C'
   949  007F63  29                 	db	41
   950  007F64  3A                 	db	58	;':'
   951  007F65  00                 	db	0
   952  007F66                     STR_10:
   953                           
   954                           ; BSR set to: 0
   955  007F66  50                 	db	80	;'P'
   956  007F67  72                 	db	114	;'r'
   957  007F68  65                 	db	101	;'e'
   958  007F69  73                 	db	115	;'s'
   959  007F6A  69                 	db	105	;'i'
   960  007F6B  6F                 	db	111	;'o'
   961  007F6C  6E                 	db	110	;'n'
   962  007F6D  41                 	db	65	;'A'
   963  007F6E  74                 	db	116	;'t'
   964  007F6F  6D                 	db	109	;'m'
   965  007F70  28                 	db	40
   966  007F71  68                 	db	104	;'h'
   967  007F72  50                 	db	80	;'P'
   968  007F73  61                 	db	97	;'a'
   969  007F74  29                 	db	41
   970  007F75  3A                 	db	58	;':'
   971  007F76  00                 	db	0
   972  007F77                     STR_1:
   973                           
   974                           ; BSR set to: 0
   975  007F77  43                 	db	67	;'C'
   976  007F78  6F                 	db	111	;'o'
   977  007F79  6E                 	db	110	;'n'
   978  007F7A  6E                 	db	110	;'n'
   979  007F7B  65                 	db	101	;'e'
   980  007F7C  63                 	db	99	;'c'
   981  007F7D  74                 	db	116	;'t'
   982  007F7E  69                 	db	105	;'i'
   983  007F7F  6F                 	db	111	;'o'
   984  007F80  6E                 	db	110	;'n'
   985  007F81  20                 	db	32
   986  007F82  65                 	db	101	;'e'
   987  007F83  72                 	db	114	;'r'
   988  007F84  72                 	db	114	;'r'
   989  007F85  6F                 	db	111	;'o'
   990  007F86  72                 	db	114	;'r'
   991  007F87  00                 	db	0
   992  007F88                     STR_37:
   993                           
   994                           ; BSR set to: 0
   995  007F88  25                 	db	37
   996  007F89  73                 	db	115	;'s'
   997  007F8A  20                 	db	32
   998  007F8B  75                 	db	117	;'u'
   999  007F8C  6E                 	db	110	;'n'
  1000  007F8D  69                 	db	105	;'i'
  1001  007F8E  74                 	db	116	;'t'
  1002  007F8F  73                 	db	115	;'s'
  1003  007F90  20                 	db	32
  1004  007F91  20                 	db	32
  1005  007F92  20                 	db	32
  1006  007F93  20                 	db	32
  1007  007F94  20                 	db	32
  1008  007F95  20                 	db	32
  1009  007F96  20                 	db	32
  1010  007F97  00                 	db	0
  1011  007F98                     STR_12:
  1012                           
  1013                           ; BSR set to: 0
  1014  007F98  25                 	db	37
  1015  007F99  2E                 	db	46
  1016  007F9A  34                 	db	52	;'4'
  1017  007F9B  66                 	db	102	;'f'
  1018  007F9C  20                 	db	32
  1019  007F9D  20                 	db	32
  1020  007F9E  20                 	db	32
  1021  007F9F  20                 	db	32
  1022  007FA0  20                 	db	32
  1023  007FA1  20                 	db	32
  1024  007FA2  20                 	db	32
  1025  007FA3  20                 	db	32
  1026  007FA4  20                 	db	32
  1027  007FA5  00                 	db	0
  1028  007FA6                     STR_41:
  1029                           
  1030                           ; BSR set to: 0
  1031  007FA6  54                 	db	84	;'T'
  1032  007FA7  69                 	db	105	;'i'
  1033  007FA8  6D                 	db	109	;'m'
  1034  007FA9  65                 	db	101	;'e'
  1035  007FAA  20                 	db	32
  1036  007FAB  6F                 	db	111	;'o'
  1037  007FAC  75                 	db	117	;'u'
  1038  007FAD  74                 	db	116	;'t'
  1039  007FAE  21                 	db	33
  1040  007FAF  0D                 	db	13
  1041  007FB0  0A                 	db	10
  1042  007FB1  00                 	db	0
  1043  007FB2                     STR_33:
  1044                           
  1045                           ; BSR set to: 0
  1046  007FB2  25                 	db	37
  1047  007FB3  73                 	db	115	;'s'
  1048  007FB4  20                 	db	32
  1049  007FB5  6B                 	db	107	;'k'
  1050  007FB6  6E                 	db	110	;'n'
  1051  007FB7  20                 	db	32
  1052  007FB8  20                 	db	32
  1053  007FB9  20                 	db	32
  1054  007FBA  20                 	db	32
  1055  007FBB  20                 	db	32
  1056  007FBC  20                 	db	32
  1057  007FBD  00                 	db	0
  1058  007FBE                     STR_35:
  1059                           
  1060                           ; BSR set to: 0
  1061  007FBE  25                 	db	37
  1062  007FBF  73                 	db	115	;'s'
  1063  007FC0  20                 	db	32
  1064  007FC1  64                 	db	100	;'d'
  1065  007FC2  65                 	db	101	;'e'
  1066  007FC3  67                 	db	103	;'g'
  1067  007FC4  72                 	db	114	;'r'
  1068  007FC5  65                 	db	101	;'e'
  1069  007FC6  65                 	db	101	;'e'
  1070  007FC7  73                 	db	115	;'s'
  1071  007FC8  20                 	db	32
  1072  007FC9  00                 	db	0
  1073  007FCA                     STR_11:
  1074                           
  1075                           ; BSR set to: 0
  1076  007FCA  25                 	db	37
  1077  007FCB  73                 	db	115	;'s'
  1078  007FCC  20                 	db	32
  1079  007FCD  20                 	db	32
  1080  007FCE  25                 	db	37
  1081  007FCF  2E                 	db	46
  1082  007FD0  34                 	db	52	;'4'
  1083  007FD1  66                 	db	102	;'f'
  1084  007FD2  0D                 	db	13
  1085  007FD3  0A                 	db	10
  1086  007FD4  00                 	db	0
  1087  007FD5                     STR_31:
  1088                           
  1089                           ; BSR set to: 0
  1090  007FD5  25                 	db	37
  1091  007FD6  73                 	db	115	;'s'
  1092  007FD7  20                 	db	32
  1093  007FD8  6D                 	db	109	;'m'
  1094  007FD9  73                 	db	115	;'s'
  1095  007FDA  6E                 	db	110	;'n'
  1096  007FDB  6D                 	db	109	;'m'
  1097  007FDC  20                 	db	32
  1098  007FDD  20                 	db	32
  1099  007FDE  00                 	db	0
  1100  007FDF                     STR_34:
  1101                           
  1102                           ; BSR set to: 0
  1103  007FDF  43                 	db	67	;'C'
  1104  007FE0  6F                 	db	111	;'o'
  1105  007FE1  75                 	db	117	;'u'
  1106  007FE2  72                 	db	114	;'r'
  1107  007FE3  73                 	db	115	;'s'
  1108  007FE4  65                 	db	101	;'e'
  1109  007FE5  3A                 	db	58	;':'
  1110  007FE6  00                 	db	0
  1111  007FE7                     STR_44:
  1112                           
  1113                           ; BSR set to: 0
  1114  007FE7  49                 	db	73	;'I'
  1115  007FE8  4E                 	db	78	;'N'
  1116  007FE9  46                 	db	70	;'F'
  1117  007FEA  00                 	db	0
  1118  007FEB                     STR_48:
  1119                           
  1120                           ; BSR set to: 0
  1121  007FEB  4E                 	db	78	;'N'
  1122  007FEC  41                 	db	65	;'A'
  1123  007FED  4E                 	db	78	;'N'
  1124  007FEE  00                 	db	0
  1125  007FEF                     STR_45:
  1126                           
  1127                           ; BSR set to: 0
  1128  007FEF  69                 	db	105	;'i'
  1129  007FF0  6E                 	db	110	;'n'
  1130  007FF1  66                 	db	102	;'f'
  1131  007FF2  00                 	db	0
  1132  007FF3                     STR_49:
  1133                           
  1134                           ; BSR set to: 0
  1135  007FF3  6E                 	db	110	;'n'
  1136  007FF4  61                 	db	97	;'a'
  1137  007FF5  6E                 	db	110	;'n'
  1138  007FF6  00                 	db	0
  1139  007FF7                     STR_57:
  1140                           
  1141                           ; BSR set to: 0
  1142  007FF7  6C                 	db	108	;'l'
  1143  007FF8  6C                 	db	108	;'l'
  1144  007FF9  73                 	db	115	;'s'
  1145  007FFA  00                 	db	0
  1146  007FFB                     STR_52:
  1147                           
  1148                           ; BSR set to: 0
  1149  007FFB  6C                 	db	108	;'l'
  1150  007FFC  66                 	db	102	;'f'
  1151  007FFD  00                 	db	0
  1152  007FFE  00                 	db	0	; dummy byte at the end
  1153  0000                     
  1154                           ; #config settings
  1155                           
  1156                           	psect	cinit
  1157  005088                     __pcinit:
  1158                           	callstack 0
  1159  005088                     start_initialization:
  1160                           	callstack 0
  1161  005088                     __initialization:
  1162                           	callstack 0
  1163                           
  1164                           ; Initialize objects allocated to BANK1 (28 bytes)
  1165                           ; load TBLPTR registers with __pidataBANK1
  1166  005088  0EBC               	movlw	low __pidataBANK1
  1167  00508A  6EF6               	movwf	tblptrl,c
  1168  00508C  0E58               	movlw	high __pidataBANK1
  1169  00508E  6EF7               	movwf	tblptrh,c
  1170  005090  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1171  005092  6EF8               	movwf	tblptru,c
  1172  005094  EE01  F0A9         	lfsr	0,__pdataBANK1
  1173  005098  EE10 F01C          	lfsr	1,28
  1174  00509C                     copy_data0:
  1175  00509C  0009               	tblrd		*+
  1176  00509E  CFF5 FFEE          	movff	tablat,postinc0
  1177  0050A2  50E5               	movf	postdec1,w,c
  1178  0050A4  50E1               	movf	fsr1l,w,c
  1179  0050A6  E1FA               	bnz	copy_data0
  1180                           
  1181                           ; Initialize objects allocated to BANK0 (1 bytes)
  1182                           ; load TBLPTR registers with __pidataBANK0
  1183  0050A8  0E78               	movlw	low __pidataBANK0
  1184  0050AA  6EF6               	movwf	tblptrl,c
  1185  0050AC  0E59               	movlw	high __pidataBANK0
  1186  0050AE  6EF7               	movwf	tblptrh,c
  1187  0050B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1188  0050B2  6EF8               	movwf	tblptru,c
  1189  0050B4  0009               	tblrd		*+	;fetch initializer
  1190  0050B6  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1191                           
  1192                           ; Clear objects allocated to BANK2 (80 bytes)
  1193  0050BA  EE02  F000         	lfsr	0,__pbssBANK2
  1194  0050BE  0E50               	movlw	80
  1195  0050C0                     clear_0:
  1196  0050C0  6AEE               	clrf	postinc0,c
  1197  0050C2  06E8               	decf	wreg,f,c
  1198  0050C4  E1FD               	bnz	clear_0
  1199                           
  1200                           ; Clear objects allocated to BANK1 (169 bytes)
  1201  0050C6  EE01  F000         	lfsr	0,__pbssBANK1
  1202  0050CA  0EA9               	movlw	169
  1203  0050CC                     clear_1:
  1204  0050CC  6AEE               	clrf	postinc0,c
  1205  0050CE  06E8               	decf	wreg,f,c
  1206  0050D0  E1FD               	bnz	clear_1
  1207                           
  1208                           ; Clear objects allocated to BITBANK0 (1 bytes)
  1209  0050D2  0100               	movlb	0
  1210  0050D4  6BFE               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  1211                           
  1212                           ; Clear objects allocated to BANK0 (63 bytes)
  1213  0050D6  EE00  F0BF         	lfsr	0,__pbssBANK0
  1214  0050DA  0E3F               	movlw	63
  1215  0050DC                     clear_2:
  1216  0050DC  6AEE               	clrf	postinc0,c
  1217  0050DE  06E8               	decf	wreg,f,c
  1218  0050E0  E1FD               	bnz	clear_2
  1219                           
  1220                           ; Clear objects allocated to COMRAM (1 bytes)
  1221  0050E2  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1222  0050E4                     end_of_initialization:
  1223                           	callstack 0
  1224  0050E4                     __end_of__initialization:
  1225                           	callstack 0
  1226  0050E4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1227  0050E6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1228  0050E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1229  0050EA  6EF8               	movwf	tblptru,c
  1230  0050EC  0100               	movlb	0
  1231  0050EE  EF09  F000         	goto	_main	;jump to C main() function
  1232                           
  1233                           	psect	bssCOMRAM
  1234  00005E                     __pbssCOMRAM:
  1235                           	callstack 0
  1236  00005E                     _ch:
  1237                           	callstack 0
  1238  00005E                     	ds	1
  1239                           
  1240                           	psect	bitbssBANK0
  1241  0007F0                     __pbitbssBANK0:
  1242                           	callstack 0
  1243  0007F0                     _RS:
  1244                           	callstack 0
  1245  0007F0                     	ds	1
  1246                           
  1247                           	psect	bssBANK0
  1248  0000BF                     __pbssBANK0:
  1249                           	callstack 0
  1250  0000BF                     _p:
  1251                           	callstack 0
  1252  0000BF                     	ds	4
  1253  0000C3                     _var2:
  1254                           	callstack 0
  1255  0000C3                     	ds	4
  1256  0000C7                     _var1:
  1257                           	callstack 0
  1258  0000C7                     	ds	4
  1259  0000CB                     _t_fine:
  1260                           	callstack 0
  1261  0000CB                     	ds	4
  1262  0000CF                     _adc_T:
  1263                           	callstack 0
  1264  0000CF                     	ds	4
  1265  0000D3                     _value2:
  1266                           	callstack 0
  1267  0000D3                     	ds	4
  1268  0000D7                     _tx_variable:
  1269                           	callstack 0
  1270  0000D7                     	ds	4
  1271  0000DB                     _nout:
  1272                           	callstack 0
  1273  0000DB                     	ds	2
  1274  0000DD                     _width:
  1275                           	callstack 0
  1276  0000DD                     	ds	2
  1277  0000DF                     _prec:
  1278                           	callstack 0
  1279  0000DF                     	ds	2
  1280  0000E1                     _flags:
  1281                           	callstack 0
  1282  0000E1                     	ds	2
  1283  0000E3                     _calibration_value:
  1284                           	callstack 0
  1285  0000E3                     	ds	2
  1286  0000E5                     _value1:
  1287                           	callstack 0
  1288  0000E5                     	ds	2
  1289  0000E7                     _INA_2bytes:
  1290                           	callstack 0
  1291  0000E7                     	ds	2
  1292  0000E9                     _split:
  1293                           	callstack 0
  1294  0000E9                     	ds	2
  1295  0000EB                     _i2c_addr:
  1296                           	callstack 0
  1297  0000EB                     	ds	1
  1298  0000EC                     _change_array:
  1299                           	callstack 0
  1300  0000EC                     	ds	1
  1301  0000ED                     _j:
  1302                           	callstack 0
  1303  0000ED                     	ds	1
  1304  0000EE                     _boton:
  1305                           	callstack 0
  1306  0000EE                     	ds	1
  1307  0000EF                     _i:
  1308                           	callstack 0
  1309  0000EF                     	ds	1
  1310  0000F0                     _pres:
  1311                           	callstack 0
  1312  0000F0                     	ds	4
  1313  0000F4                     _temp:
  1314                           	callstack 0
  1315  0000F4                     	ds	4
  1316  0000F8                     _CheckSum:
  1317                           	callstack 0
  1318  0000F8                     	ds	1
  1319  0000F9                     _RH_Byte2:
  1320                           	callstack 0
  1321  0000F9                     	ds	1
  1322  0000FA                     _RH_Byte1:
  1323                           	callstack 0
  1324  0000FA                     	ds	1
  1325  0000FB                     _T_Byte2:
  1326                           	callstack 0
  1327  0000FB                     	ds	1
  1328  0000FC                     _T_Byte1:
  1329                           	callstack 0
  1330  0000FC                     	ds	1
  1331  0000FD                     _stream:
  1332                           	callstack 0
  1333  0000FD                     	ds	1
  1334                           
  1335                           	psect	dataBANK0
  1336  0000FF                     __pdataBANK0:
  1337                           	callstack 0
  1338  0000FF                     _backlight_val:
  1339                           	callstack 0
  1340  0000FF                     	ds	1
  1341                           
  1342                           	psect	bssBANK1
  1343  000100                     __pbssBANK1:
  1344                           	callstack 0
  1345  000100                     floorf@F526:
  1346                           	callstack 0
  1347  000100                     	ds	4
  1348  000104                     ___fpclassifyf@F465:
  1349                           	callstack 0
  1350  000104                     	ds	4
  1351  000108                     _adc_P:
  1352                           	callstack 0
  1353  000108                     	ds	4
  1354  00010C                     _potencia:
  1355                           	callstack 0
  1356  00010C                     	ds	4
  1357  000110                     _corriente:
  1358                           	callstack 0
  1359  000110                     	ds	4
  1360  000114                     _voltaje:
  1361                           	callstack 0
  1362  000114                     	ds	4
  1363  000118                     _TMR1_VALUE:
  1364                           	callstack 0
  1365  000118                     	ds	2
  1366  00011A                     _BMP280_calib:
  1367                           	callstack 0
  1368  00011A                     	ds	24
  1369  000132                     _description:
  1370                           	callstack 0
  1371  000132                     	ds	20
  1372  000146                     _lcd_text:
  1373                           	callstack 0
  1374  000146                     	ds	18
  1375  000158                     _lon:
  1376                           	callstack 0
  1377  000158                     	ds	13
  1378  000165                     _lat:
  1379                           	callstack 0
  1380  000165                     	ds	12
  1381  000171                     _time:
  1382                           	callstack 0
  1383  000171                     	ds	12
  1384  00017D                     _alt:
  1385                           	callstack 0
  1386  00017D                     	ds	10
  1387  000187                     _course:
  1388                           	callstack 0
  1389  000187                     	ds	8
  1390  00018F                     _speed:
  1391                           	callstack 0
  1392  00018F                     	ds	8
  1393  000197                     _nmea_log:
  1394                           	callstack 0
  1395  000197                     	ds	7
  1396  00019E                     _date:
  1397                           	callstack 0
  1398  00019E                     	ds	7
  1399  0001A5                     _satel:
  1400                           	callstack 0
  1401  0001A5                     	ds	4
  1402                           
  1403                           	psect	dataBANK1
  1404  0001A9                     __pdataBANK1:
  1405                           	callstack 0
  1406  0001A9                     stoa@F1169:
  1407                           	callstack 0
  1408  0001A9                     	ds	7
  1409  0001B0                     _ptr_h:
  1410                           	callstack 0
  1411  0001B0                     	ds	2
  1412  0001B2                     _humidity:
  1413                           	callstack 0
  1414  0001B2                     	ds	19
  1415                           
  1416                           	psect	bssBANK2
  1417  000200                     __pbssBANK2:
  1418                           	callstack 0
  1419  000200                     _dbuf:
  1420                           	callstack 0
  1421  000200                     	ds	80
  1422                           
  1423                           	psect	cstackBANK0
  1424  000060                     __pcstackBANK0:
  1425                           	callstack 0
  1426  000060                     _efgtoa$2114:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x0
  1430  000060                     	ds	2
  1431  000062                     _efgtoa$2122:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x2
  1435  000062                     	ds	2
  1436  000064                     _efgtoa$2123:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x4
  1440  000064                     	ds	2
  1441  000066                     efgtoa@t:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x6
  1445  000066                     	ds	2
  1446  000068                     efgtoa@pp:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x8
  1450  000068                     	ds	2
  1451  00006A                     efgtoa@ne:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0xA
  1455  00006A                     	ds	2
  1456  00006C                     efgtoa@m:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0xC
  1460  00006C                     	ds	2
  1461  00006E                     efgtoa@ou:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0xE
  1465  00006E                     	ds	4
  1466  000072                     efgtoa@d:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x12
  1470  000072                     	ds	2
  1471  000074                     efgtoa@sign:
  1472                           	callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x14
  1475  000074                     	ds	2
  1476  000076                     efgtoa@p:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x16
  1480  000076                     	ds	2
  1481  000078                     efgtoa@w:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x18
  1485  000078                     	ds	2
  1486  00007A                     efgtoa@nmode:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x1A
  1490  00007A                     	ds	1
  1491  00007B                     efgtoa@mode:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x1B
  1495  00007B                     	ds	1
  1496  00007C                     efgtoa@h:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x1C
  1500  00007C                     	ds	4
  1501  000080                     efgtoa@l:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x20
  1505  000080                     	ds	4
  1506  000084                     efgtoa@i:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x24
  1510  000084                     	ds	2
  1511  000086                     efgtoa@g:
  1512                           	callstack 0
  1513                           
  1514                           ; 4 bytes @ 0x26
  1515  000086                     	ds	4
  1516  00008A                     efgtoa@e:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x2A
  1520  00008A                     	ds	2
  1521  00008C                     efgtoa@n:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x2C
  1525  00008C                     	ds	2
  1526  00008E                     efgtoa@u:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x2E
  1530  00008E                     	ds	4
  1531  000092                     ?_vfprintf:
  1532                           	callstack 0
  1533  000092                     vfprintf@fp:
  1534                           	callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x32
  1537  000092                     	ds	2
  1538  000094                     vfprintf@fmt:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x34
  1542  000094                     	ds	2
  1543  000096                     vfprintf@ap:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x36
  1547  000096                     	ds	2
  1548  000098                     vfprintf@cfmt:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x38
  1552  000098                     	ds	2
  1553  00009A                     ?_printf:
  1554                           	callstack 0
  1555  00009A                     ?_sprintf:
  1556                           	callstack 0
  1557  00009A                     sprintf@s:
  1558                           	callstack 0
  1559  00009A                     printf@fmt:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x3A
  1563  00009A                     	ds	2
  1564  00009C                     sprintf@fmt:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x3C
  1568  00009C                     	ds	18
  1569  0000AE                     printf@ap:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x4E
  1573  0000AE                     	ds	2
  1574  0000B0                     sprintf@ap:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x50
  1578  0000B0                     	ds	2
  1579  0000B2                     sprintf@f:
  1580                           	callstack 0
  1581                           
  1582                           ; 11 bytes @ 0x52
  1583  0000B2                     	ds	11
  1584  0000BD                     ??_main:
  1585                           
  1586                           ; 1 bytes @ 0x5D
  1587  0000BD                     	ds	2
  1588                           
  1589                           	psect	cstackCOMRAM
  1590  000001                     __pcstackCOMRAM:
  1591                           	callstack 0
  1592  000001                     ??_start_signal_dht11:
  1593  000001                     ??_check_response_dht11:
  1594  000001                     ?_strcmp:
  1595                           	callstack 0
  1596  000001                     ?_strlen:
  1597                           	callstack 0
  1598  000001                     ?___fpclassifyf:
  1599                           	callstack 0
  1600  000001                     ?_isupper:
  1601                           	callstack 0
  1602  000001                     ?_isdigit:
  1603                           	callstack 0
  1604  000001                     ?_strncmp:
  1605                           	callstack 0
  1606  000001                     ?_isspace:
  1607                           	callstack 0
  1608  000001                     ?___wmul:
  1609                           	callstack 0
  1610  000001                     ?___awdiv:
  1611                           	callstack 0
  1612  000001                     ?___awmod:
  1613                           	callstack 0
  1614  000001                     ?___fladd:
  1615                           	callstack 0
  1616  000001                     ?___lldiv:
  1617                           	callstack 0
  1618  000001                     ?___aldiv:
  1619                           	callstack 0
  1620  000001                     ?___flneg:
  1621                           	callstack 0
  1622  000001                     ?___fltol:
  1623                           	callstack 0
  1624  000001                     ?___xxtofl:
  1625                           	callstack 0
  1626  000001                     putch@data:
  1627                           	callstack 0
  1628  000001                     I2C_Tx_data@data:
  1629                           	callstack 0
  1630  000001                     read_data_dht11@dht_data:
  1631                           	callstack 0
  1632  000001                     ___wmul@multiplier:
  1633                           	callstack 0
  1634  000001                     ___awdiv@dividend:
  1635                           	callstack 0
  1636  000001                     ___awmod@dividend:
  1637                           	callstack 0
  1638  000001                     memcpy@d1:
  1639                           	callstack 0
  1640  000001                     isdigit@c:
  1641                           	callstack 0
  1642  000001                     isspace@c:
  1643                           	callstack 0
  1644  000001                     isupper@c:
  1645                           	callstack 0
  1646  000001                     strcmp@l:
  1647                           	callstack 0
  1648  000001                     strcpy@dest:
  1649                           	callstack 0
  1650  000001                     strlen@s:
  1651                           	callstack 0
  1652  000001                     strncmp@_l:
  1653                           	callstack 0
  1654  000001                     ___lldiv@dividend:
  1655                           	callstack 0
  1656  000001                     ___aldiv@dividend:
  1657                           	callstack 0
  1658  000001                     ___fleq@ff1:
  1659                           	callstack 0
  1660  000001                     ___flneg@f1:
  1661                           	callstack 0
  1662  000001                     ___fltol@f1:
  1663                           	callstack 0
  1664  000001                     ___fladd@b:
  1665                           	callstack 0
  1666  000001                     ___xxtofl@val:
  1667                           	callstack 0
  1668  000001                     ___fpclassifyf@x:
  1669                           	callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x0
  1672  000001                     	ds	1
  1673  000002                     ??_BMP280_Update:
  1674  000002                     ?_I2C_INA_read:
  1675                           	callstack 0
  1676  000002                     ?_BMP280_Read16:
  1677                           	callstack 0
  1678  000002                     BMP280_Write@_data:
  1679                           	callstack 0
  1680  000002                     BMP280_Read8@reg_addr:
  1681                           	callstack 0
  1682  000002                     Expander_Write@value:
  1683                           	callstack 0
  1684  000002                     UART_Print@data:
  1685                           	callstack 0
  1686  000002                     I2C_INA_write@valor:
  1687                           	callstack 0
  1688  000002                     fputc@c:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x1
  1692  000002                     	ds	1
  1693  000003                     ??_isupper:
  1694  000003                     ??_isdigit:
  1695  000003                     ??_isspace:
  1696  000003                     ??_read_data_dht11:
  1697  000003                     BMP280_Write@reg_addr:
  1698                           	callstack 0
  1699  000003                     BMP280_Read8@ret:
  1700                           	callstack 0
  1701  000003                     LCD_Write_Nibble@n:
  1702                           	callstack 0
  1703  000003                     ___wmul@multiplicand:
  1704                           	callstack 0
  1705  000003                     ___awdiv@divisor:
  1706                           	callstack 0
  1707  000003                     ___awmod@divisor:
  1708                           	callstack 0
  1709  000003                     memcpy@s1:
  1710                           	callstack 0
  1711  000003                     strcmp@r:
  1712                           	callstack 0
  1713  000003                     strcpy@src:
  1714                           	callstack 0
  1715  000003                     strlen@a:
  1716                           	callstack 0
  1717  000003                     strncmp@_r:
  1718                           	callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x2
  1721  000003                     	ds	1
  1722  000004                     ??_UART_Print:
  1723  000004                     ??_I2C_INA_read:
  1724  000004                     ??_LCD_Cmd:
  1725  000004                     I2C_INA_write@registro:
  1726                           	callstack 0
  1727  000004                     BMP280_Read16@reg_addr:
  1728                           	callstack 0
  1729  000004                     LCD_Print@LCD_Str:
  1730                           	callstack 0
  1731  000004                     fputc@fp:
  1732                           	callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x3
  1735  000004                     	ds	1
  1736  000005                     ??_strcmp:
  1737  000005                     ??___fpclassifyf:
  1738  000005                     ??_strcpy:
  1739  000005                     ??___fltol:
  1740  000005                     ??___xxtofl:
  1741  000005                     LCD_Cmd@Command:
  1742                           	callstack 0
  1743  000005                     ___awdiv@counter:
  1744                           	callstack 0
  1745  000005                     ___awmod@counter:
  1746                           	callstack 0
  1747  000005                     BMP280_Read16@ret:
  1748                           	callstack 0
  1749  000005                     ___wmul@product:
  1750                           	callstack 0
  1751  000005                     memcpy@n:
  1752                           	callstack 0
  1753  000005                     strncmp@n:
  1754                           	callstack 0
  1755  000005                     ___lldiv@divisor:
  1756                           	callstack 0
  1757  000005                     ___aldiv@divisor:
  1758                           	callstack 0
  1759  000005                     ___fleq@ff2:
  1760                           	callstack 0
  1761  000005                     ___fladd@a:
  1762                           	callstack 0
  1763                           
  1764                           ; 4 bytes @ 0x4
  1765  000005                     	ds	1
  1766  000006                     ??_LCD_Begin:
  1767  000006                     ??_LCD_Print:
  1768  000006                     ??_fputc:
  1769  000006                     UART_Print@i:
  1770                           	callstack 0
  1771  000006                     I2C_INA_read@registro:
  1772                           	callstack 0
  1773  000006                     LCD_Goto@row:
  1774                           	callstack 0
  1775  000006                     ___awdiv@sign:
  1776                           	callstack 0
  1777  000006                     ___awmod@sign:
  1778                           	callstack 0
  1779  000006                     GPSRead_rmc@time:
  1780                           	callstack 0
  1781  000006                     GPSRead_gga@alt:
  1782                           	callstack 0
  1783  000006                     BMP280_Update@ret:
  1784                           	callstack 0
  1785                           
  1786                           ; 4 bytes @ 0x5
  1787  000006                     	ds	1
  1788  000007                     ??_LCD_Goto:
  1789  000007                     ??_strncmp:
  1790  000007                     ?_tolower:
  1791                           	callstack 0
  1792  000007                     BMP280_begin@T_sampling:
  1793                           	callstack 0
  1794  000007                     read_data_dht11@i:
  1795                           	callstack 0
  1796  000007                     _isspace$2220:
  1797                           	callstack 0
  1798  000007                     ___awdiv@quotient:
  1799                           	callstack 0
  1800  000007                     memcpy@d:
  1801                           	callstack 0
  1802  000007                     strcpy@s:
  1803                           	callstack 0
  1804  000007                     tolower@c:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x6
  1808  000007                     	ds	1
  1809  000008                     ?_atoi:
  1810                           	callstack 0
  1811  000008                     BMP280_begin@P_sampling:
  1812                           	callstack 0
  1813  000008                     LCD_Begin@address:
  1814                           	callstack 0
  1815  000008                     GPSRead_rmc@date:
  1816                           	callstack 0
  1817  000008                     GPSRead_gga@satel:
  1818                           	callstack 0
  1819  000008                     atoi@s:
  1820                           	callstack 0
  1821  000008                     strncmp@l:
  1822                           	callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x7
  1825  000008                     	ds	1
  1826  000009                     ??___fladd:
  1827  000009                     ??_tolower:
  1828  000009                     ??___fleq:
  1829  000009                     BMP280_begin@filter:
  1830                           	callstack 0
  1831  000009                     LCD_Goto@col:
  1832                           	callstack 0
  1833  000009                     LCD_Print@i:
  1834                           	callstack 0
  1835  000009                     ___aldiv@counter:
  1836                           	callstack 0
  1837  000009                     ___fltol@sign1:
  1838                           	callstack 0
  1839  000009                     ___xxtofl@sign:
  1840                           	callstack 0
  1841  000009                     dht11_check_humidity@ptr_h:
  1842                           	callstack 0
  1843  000009                     memcpy@s:
  1844                           	callstack 0
  1845  000009                     ___fpclassifyf@e:
  1846                           	callstack 0
  1847  000009                     strcpy@d:
  1848                           	callstack 0
  1849  000009                     ___lldiv@quotient:
  1850                           	callstack 0
  1851                           
  1852                           ; 4 bytes @ 0x8
  1853  000009                     	ds	1
  1854  00000A                     ??_atoi:
  1855  00000A                     BMP280_begin@standby:
  1856                           	callstack 0
  1857  00000A                     ___aldiv@sign:
  1858                           	callstack 0
  1859  00000A                     ___fltol@exp1:
  1860                           	callstack 0
  1861  00000A                     ___xxtofl@exp:
  1862                           	callstack 0
  1863  00000A                     GPSRead_rmc@nmea_log:
  1864                           	callstack 0
  1865  00000A                     GPSRead_gga@nmea_log:
  1866                           	callstack 0
  1867  00000A                     strncmp@r:
  1868                           	callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x9
  1871  00000A                     	ds	1
  1872  00000B                     ??_BMP280_begin:
  1873  00000B                     ??_dht11_check_humidity:
  1874  00000B                     ?_ctoa:
  1875                           	callstack 0
  1876  00000B                     ?_stoa:
  1877                           	callstack 0
  1878  00000B                     memcpy@tmp:
  1879                           	callstack 0
  1880  00000B                     ctoa@fp:
  1881                           	callstack 0
  1882  00000B                     stoa@fp:
  1883                           	callstack 0
  1884  00000B                     fputs@s:
  1885                           	callstack 0
  1886  00000B                     ___aldiv@quotient:
  1887                           	callstack 0
  1888  00000B                     ___xxtofl@arg:
  1889                           	callstack 0
  1890  00000B                     ___fpclassifyf@u:
  1891                           	callstack 0
  1892                           
  1893                           ; 4 bytes @ 0xA
  1894  00000B                     	ds	1
  1895  00000C                     GPSRead_rmc@lat:
  1896                           	callstack 0
  1897  00000C                     GPSRead_gga@stream:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0xB
  1901  00000C                     	ds	1
  1902  00000D                     BMP280_begin@mode:
  1903                           	callstack 0
  1904  00000D                     ___lldiv@counter:
  1905                           	callstack 0
  1906  00000D                     ___fladd@signs:
  1907                           	callstack 0
  1908  00000D                     ctoa@c:
  1909                           	callstack 0
  1910  00000D                     stoa@s:
  1911                           	callstack 0
  1912  00000D                     fputs@fp:
  1913                           	callstack 0
  1914                           
  1915                           ; 2 bytes @ 0xC
  1916  00000D                     	ds	1
  1917  00000E                     ??_GPSRead_gga:
  1918  00000E                     ??_ctoa:
  1919  00000E                     BMP280_begin@_ctrl_meas:
  1920                           	callstack 0
  1921  00000E                     ___fladd@aexp:
  1922                           	callstack 0
  1923  00000E                     GPSRead_rmc@lon:
  1924                           	callstack 0
  1925  00000E                     atoi@neg:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0xD
  1929  00000E                     	ds	1
  1930  00000F                     ??_stoa:
  1931  00000F                     ?___fldiv:
  1932                           	callstack 0
  1933  00000F                     ?___flmul:
  1934                           	callstack 0
  1935  00000F                     ?___lmul:
  1936                           	callstack 0
  1937  00000F                     BMP280_begin@_config:
  1938                           	callstack 0
  1939  00000F                     ___fladd@bexp:
  1940                           	callstack 0
  1941  00000F                     fputs@c:
  1942                           	callstack 0
  1943  00000F                     ctoa@l:
  1944                           	callstack 0
  1945  00000F                     USART_Init@BAUD:
  1946                           	callstack 0
  1947  00000F                     ___lmul@multiplier:
  1948                           	callstack 0
  1949  00000F                     ___fldiv@b:
  1950                           	callstack 0
  1951  00000F                     ___flmul@b:
  1952                           	callstack 0
  1953                           
  1954                           ; 4 bytes @ 0xE
  1955  00000F                     	ds	1
  1956  000010                     ___fladd@grs:
  1957                           	callstack 0
  1958  000010                     GPSRead_rmc@speed:
  1959                           	callstack 0
  1960  000010                     atoi@n:
  1961                           	callstack 0
  1962  000010                     fputs@i:
  1963                           	callstack 0
  1964  000010                     stoa@nuls:
  1965                           	callstack 0
  1966                           
  1967                           ; 7 bytes @ 0xF
  1968  000010                     	ds	1
  1969  000011                     ctoa@w:
  1970                           	callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x10
  1973  000011                     	ds	1
  1974  000012                     ?_pad:
  1975                           	callstack 0
  1976  000012                     GPSRead_rmc@course:
  1977                           	callstack 0
  1978  000012                     pad@fp:
  1979                           	callstack 0
  1980                           
  1981                           ; 2 bytes @ 0x11
  1982  000012                     	ds	1
  1983  000013                     ___lmul@multiplicand:
  1984                           	callstack 0
  1985  000013                     ___fldiv@a:
  1986                           	callstack 0
  1987  000013                     ___flmul@a:
  1988                           	callstack 0
  1989  000013                     _USART_Init$2563:
  1990                           	callstack 0
  1991                           
  1992                           ; 4 bytes @ 0x12
  1993  000013                     	ds	1
  1994  000014                     GPSRead_rmc@stream:
  1995                           	callstack 0
  1996  000014                     pad@buf:
  1997                           	callstack 0
  1998                           
  1999                           ; 2 bytes @ 0x13
  2000  000014                     	ds	2
  2001  000016                     ??_GPSRead_rmc:
  2002  000016                     pad@p:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x15
  2006  000016                     	ds	1
  2007  000017                     ??___fldiv:
  2008  000017                     ??___flmul:
  2009  000017                     stoa@i:
  2010                           	callstack 0
  2011  000017                     ___lmul@product:
  2012                           	callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x16
  2015  000017                     	ds	1
  2016  000018                     ??_pad:
  2017                           
  2018                           ; 1 bytes @ 0x17
  2019  000018                     	ds	1
  2020  000019                     pad@i:
  2021                           	callstack 0
  2022  000019                     stoa@w:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x18
  2026  000019                     	ds	2
  2027  00001B                     ___flmul@sign:
  2028                           	callstack 0
  2029  00001B                     BMP280_readTemperature@temp:
  2030                           	callstack 0
  2031  00001B                     BMP280_readPressure@pres:
  2032                           	callstack 0
  2033  00001B                     pad@w:
  2034                           	callstack 0
  2035  00001B                     stoa@cp:
  2036                           	callstack 0
  2037  00001B                     ___fldiv@rem:
  2038                           	callstack 0
  2039                           
  2040                           ; 4 bytes @ 0x1A
  2041  00001B                     	ds	1
  2042  00001C                     ___flmul@grs:
  2043                           	callstack 0
  2044                           
  2045                           ; 4 bytes @ 0x1B
  2046  00001C                     	ds	1
  2047  00001D                     ??_BMP280_readTemperature:
  2048  00001D                     ??_BMP280_readPressure:
  2049  00001D                     stoa@p:
  2050                           	callstack 0
  2051                           
  2052                           ; 2 bytes @ 0x1C
  2053  00001D                     	ds	2
  2054  00001F                     ___fldiv@sign:
  2055                           	callstack 0
  2056  00001F                     stoa@l:
  2057                           	callstack 0
  2058                           
  2059                           ; 2 bytes @ 0x1E
  2060  00001F                     	ds	1
  2061  000020                     ___flmul@aexp:
  2062                           	callstack 0
  2063  000020                     ___fldiv@new_exp:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x1F
  2067  000020                     	ds	1
  2068  000021                     ___flmul@bexp:
  2069                           	callstack 0
  2070                           
  2071                           ; 1 bytes @ 0x20
  2072  000021                     	ds	1
  2073  000022                     ___fldiv@grs:
  2074                           	callstack 0
  2075  000022                     ___flmul@prod:
  2076                           	callstack 0
  2077                           
  2078                           ; 4 bytes @ 0x21
  2079  000022                     	ds	3
  2080  000025                     _BMP280_readTemperature$2565:
  2081                           	callstack 0
  2082  000025                     _BMP280_readPressure$2567:
  2083                           	callstack 0
  2084                           
  2085                           ; 4 bytes @ 0x24
  2086  000025                     	ds	1
  2087  000026                     ___fldiv@bexp:
  2088                           	callstack 0
  2089  000026                     ___flmul@temp:
  2090                           	callstack 0
  2091                           
  2092                           ; 2 bytes @ 0x25
  2093  000026                     	ds	1
  2094  000027                     ___fldiv@aexp:
  2095                           	callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x26
  2098  000027                     	ds	1
  2099  000028                     ?_ina219GetBusVoltage_V:
  2100                           	callstack 0
  2101  000028                     ?_ina219GetCurrent_mA:
  2102                           	callstack 0
  2103  000028                     ?_ina219GetPower_mW:
  2104                           	callstack 0
  2105  000028                     ?___flsub:
  2106                           	callstack 0
  2107  000028                     ?_floorf:
  2108                           	callstack 0
  2109  000028                     ___flge@ff1:
  2110                           	callstack 0
  2111  000028                     ___flsub@b:
  2112                           	callstack 0
  2113  000028                     floorf@x:
  2114                           	callstack 0
  2115                           
  2116                           ; 4 bytes @ 0x27
  2117  000028                     	ds	1
  2118  000029                     _BMP280_readTemperature$2564:
  2119                           	callstack 0
  2120  000029                     _BMP280_readPressure$2568:
  2121                           	callstack 0
  2122                           
  2123                           ; 4 bytes @ 0x28
  2124  000029                     	ds	3
  2125  00002C                     ??_ina219GetBusVoltage_V:
  2126  00002C                     ??_floorf:
  2127  00002C                     ___flge@ff2:
  2128                           	callstack 0
  2129  00002C                     ___flsub@a:
  2130                           	callstack 0
  2131                           
  2132                           ; 4 bytes @ 0x2B
  2133  00002C                     	ds	1
  2134  00002D                     _BMP280_readPressure$2569:
  2135                           	callstack 0
  2136                           
  2137                           ; 4 bytes @ 0x2C
  2138  00002D                     	ds	3
  2139  000030                     ??___flge:
  2140                           
  2141                           ; 1 bytes @ 0x2F
  2142  000030                     	ds	1
  2143  000031                     _BMP280_readPressure$2566:
  2144                           	callstack 0
  2145                           
  2146                           ; 4 bytes @ 0x30
  2147  000031                     	ds	1
  2148  000032                     floorf@m:
  2149                           	callstack 0
  2150                           
  2151                           ; 4 bytes @ 0x31
  2152  000032                     	ds	4
  2153  000036                     floorf@e:
  2154                           	callstack 0
  2155                           
  2156                           ; 2 bytes @ 0x35
  2157  000036                     	ds	2
  2158  000038                     floorf@u:
  2159                           	callstack 0
  2160                           
  2161                           ; 4 bytes @ 0x37
  2162  000038                     	ds	4
  2163  00003C                     ?_efgtoa:
  2164                           	callstack 0
  2165  00003C                     efgtoa@fp:
  2166                           	callstack 0
  2167                           
  2168                           ; 2 bytes @ 0x3B
  2169  00003C                     	ds	2
  2170  00003E                     efgtoa@f:
  2171                           	callstack 0
  2172                           
  2173                           ; 4 bytes @ 0x3D
  2174  00003E                     	ds	4
  2175  000042                     efgtoa@c:
  2176                           	callstack 0
  2177                           
  2178                           ; 1 bytes @ 0x41
  2179  000042                     	ds	1
  2180  000043                     ??_efgtoa:
  2181                           
  2182                           ; 1 bytes @ 0x42
  2183  000043                     	ds	5
  2184  000048                     ?_vfpfcnvrt:
  2185                           	callstack 0
  2186  000048                     vfpfcnvrt@fp:
  2187                           	callstack 0
  2188                           
  2189                           ; 2 bytes @ 0x47
  2190  000048                     	ds	2
  2191  00004A                     vfpfcnvrt@fmt:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x49
  2195  00004A                     	ds	2
  2196  00004C                     vfpfcnvrt@ap:
  2197                           	callstack 0
  2198                           
  2199                           ; 2 bytes @ 0x4B
  2200  00004C                     	ds	2
  2201  00004E                     ??_vfpfcnvrt:
  2202                           
  2203                           ; 1 bytes @ 0x4D
  2204  00004E                     	ds	4
  2205  000052                     vfpfcnvrt@cp:
  2206                           	callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x51
  2209  000052                     	ds	2
  2210  000054                     _vfpfcnvrt$2156:
  2211                           	callstack 0
  2212                           
  2213                           ; 2 bytes @ 0x53
  2214  000054                     	ds	2
  2215  000056                     vfpfcnvrt@f:
  2216                           	callstack 0
  2217                           
  2218                           ; 4 bytes @ 0x55
  2219  000056                     	ds	4
  2220  00005A                     vfpfcnvrt@ct:
  2221                           	callstack 0
  2222                           
  2223                           ; 3 bytes @ 0x59
  2224  00005A                     	ds	3
  2225  00005D                     vfpfcnvrt@c:
  2226                           	callstack 0
  2227                           
  2228                           ; 1 bytes @ 0x5C
  2229  00005D                     	ds	1
  2230  00005E                     
  2231                           ; 1 bytes @ 0x5D
  2232 ;;
  2233 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2234 ;;
  2235 ;; *************** function _main *****************
  2236 ;; Defined at:
  2237 ;;		line 32 in file "main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2254 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels required when called: 9
  2257 ;; This function calls:
  2258 ;;		_BMP280_begin
  2259 ;;		_BMP280_readPressure
  2260 ;;		_BMP280_readTemperature
  2261 ;;		_GPSRead_gga
  2262 ;;		_GPSRead_rmc
  2263 ;;		_I2C_master_init
  2264 ;;		_LCD_Begin
  2265 ;;		_LCD_Goto
  2266 ;;		_LCD_Print
  2267 ;;		_UART_Print
  2268 ;;		_USART_Init
  2269 ;;		___fldiv
  2270 ;;		___xxtofl
  2271 ;;		_dht11_check_humidity
  2272 ;;		_ina219GetBusVoltage_V
  2273 ;;		_ina219GetCurrent_mA
  2274 ;;		_ina219GetPower_mW
  2275 ;;		_ina219Init
  2276 ;;		_int_ext_enable
  2277 ;;		_memcpy
  2278 ;;		_printf
  2279 ;;		_sprintf
  2280 ;; This function is called by:
  2281 ;;		Startup code after reset
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text0
  2286  000012                     __ptext0:
  2287                           	callstack 0
  2288  000012                     _main:
  2289                           	callstack 22
  2290  000012                     
  2291                           ;main.c: 35:     PORTA = 0b00000000;
  2292  000012  0E00               	movlw	0
  2293  000014  6E80               	movwf	128,c	;volatile
  2294                           
  2295                           ;main.c: 36:     ADCON1bits.PCFG = 0b1111;
  2296  000016  0E0F               	movlw	15
  2297  000018  12C1               	iorwf	193,f,c	;volatile
  2298  00001A                     
  2299                           ;main.c: 39:     T1CONbits.RD16 = 1;
  2300  00001A  8ECD               	bsf	205,7,c	;volatile
  2301  00001C                     
  2302                           ;main.c: 40:     T1CONbits.T1RUN = 1;
  2303  00001C  8CCD               	bsf	205,6,c	;volatile
  2304                           
  2305                           ;main.c: 41:     T1CONbits.T1CKPS = 0b00;
  2306  00001E  0ECF               	movlw	-49
  2307  000020  16CD               	andwf	205,f,c	;volatile
  2308  000022                     
  2309                           ;main.c: 42:     T1CONbits.T1OSCEN = 1;
  2310  000022  86CD               	bsf	205,3,c	;volatile
  2311  000024                     
  2312                           ;main.c: 44:     T1CONbits.TMR1CS = 0;
  2313  000024  92CD               	bcf	205,1,c	;volatile
  2314  000026                     
  2315                           ;main.c: 45:     T1CONbits.TMR1ON = 0;
  2316  000026  90CD               	bcf	205,0,c	;volatile
  2317                           
  2318                           ;main.c: 46:     TMR1H = 0;
  2319  000028  0E00               	movlw	0
  2320  00002A  6ECF               	movwf	207,c	;volatile
  2321                           
  2322                           ;main.c: 47:     TMR1L = 0;
  2323  00002C  0E00               	movlw	0
  2324  00002E  6ECE               	movwf	206,c	;volatile
  2325  000030                     
  2326                           ;main.c: 48:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2327  000030  0E03               	movlw	3
  2328  000032  0100               	movlb	0	; () banked
  2329  000034  6FBE               	movwf	(??_main+1)& (0+255),b
  2330  000036  0E8A               	movlw	138
  2331  000038  6FBD               	movwf	??_main& (0+255),b
  2332  00003A  0E55               	movlw	85
  2333  00003C                     u6587:
  2334  00003C  2EE8               	decfsz	wreg,f,c
  2335  00003E  D7FE               	bra	u6587
  2336  000040  2FBD               	decfsz	??_main& (0+255),f,b
  2337  000042  D7FC               	bra	u6587
  2338  000044  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2339  000046  D7FA               	bra	u6587
  2340  000048  D000               	nop2	
  2341  00004A                     
  2342                           ;main.c: 50:     USART_Init(9600);
  2343  00004A  0E80               	movlw	128
  2344  00004C  6E0F               	movwf	USART_Init@BAUD^0,c
  2345  00004E  0E25               	movlw	37
  2346  000050  6E10               	movwf	(USART_Init@BAUD+1)^0,c
  2347  000052  0E00               	movlw	0
  2348  000054  6E11               	movwf	(USART_Init@BAUD+2)^0,c
  2349  000056  0E00               	movlw	0
  2350  000058  6E12               	movwf	(USART_Init@BAUD+3)^0,c
  2351  00005A  ECD4  F027         	call	_USART_Init	;wreg free
  2352  00005E                     
  2353                           ;main.c: 51:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2354  00005E  0E03               	movlw	3
  2355  000060  0100               	movlb	0	; () banked
  2356  000062  6FBE               	movwf	(??_main+1)& (0+255),b
  2357  000064  0E8A               	movlw	138
  2358  000066  6FBD               	movwf	??_main& (0+255),b
  2359  000068  0E55               	movlw	85
  2360  00006A                     u6597:
  2361  00006A  2EE8               	decfsz	wreg,f,c
  2362  00006C  D7FE               	bra	u6597
  2363  00006E  2FBD               	decfsz	??_main& (0+255),f,b
  2364  000070  D7FC               	bra	u6597
  2365  000072  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2366  000074  D7FA               	bra	u6597
  2367  000076  D000               	nop2	
  2368  000078                     
  2369                           ;main.c: 53:     I2C_master_init();
  2370  000078  EC30  F02C         	call	_I2C_master_init	;wreg free
  2371  00007C                     
  2372                           ;main.c: 54:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2373  00007C  0E03               	movlw	3
  2374  00007E  0100               	movlb	0	; () banked
  2375  000080  6FBE               	movwf	(??_main+1)& (0+255),b
  2376  000082  0E8A               	movlw	138
  2377  000084  6FBD               	movwf	??_main& (0+255),b
  2378  000086  0E55               	movlw	85
  2379  000088                     u6607:
  2380  000088  2EE8               	decfsz	wreg,f,c
  2381  00008A  D7FE               	bra	u6607
  2382  00008C  2FBD               	decfsz	??_main& (0+255),f,b
  2383  00008E  D7FC               	bra	u6607
  2384  000090  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2385  000092  D7FA               	bra	u6607
  2386  000094  D000               	nop2	
  2387  000096                     
  2388                           ;main.c: 56:     ina219Init();
  2389  000096  EC0F  F02C         	call	_ina219Init	;wreg free
  2390  00009A                     
  2391                           ;main.c: 57:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2392  00009A  0E03               	movlw	3
  2393  00009C  0100               	movlb	0	; () banked
  2394  00009E  6FBE               	movwf	(??_main+1)& (0+255),b
  2395  0000A0  0E8A               	movlw	138
  2396  0000A2  6FBD               	movwf	??_main& (0+255),b
  2397  0000A4  0E55               	movlw	85
  2398  0000A6                     u6617:
  2399  0000A6  2EE8               	decfsz	wreg,f,c
  2400  0000A8  D7FE               	bra	u6617
  2401  0000AA  2FBD               	decfsz	??_main& (0+255),f,b
  2402  0000AC  D7FC               	bra	u6617
  2403  0000AE  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2404  0000B0  D7FA               	bra	u6617
  2405  0000B2  D000               	nop2	
  2406  0000B4                     
  2407                           ;main.c: 59:     if(BMP280_begin(0x03,0x01,0x01,0x00,0x00) == 0)
  2408  0000B4  0E01               	movlw	1
  2409  0000B6  6E07               	movwf	BMP280_begin@T_sampling^0,c
  2410  0000B8  0E01               	movlw	1
  2411  0000BA  6E08               	movwf	BMP280_begin@P_sampling^0,c
  2412  0000BC  0E00               	movlw	0
  2413  0000BE  6E09               	movwf	BMP280_begin@filter^0,c
  2414  0000C0  0E00               	movlw	0
  2415  0000C2  6E0A               	movwf	BMP280_begin@standby^0,c
  2416  0000C4  0E03               	movlw	3
  2417  0000C6  ECC6  F01E         	call	_BMP280_begin
  2418  0000CA  0900               	iorlw	0
  2419  0000CC  A4D8               	btfss	status,2,c
  2420  0000CE  EF6B  F000         	goto	u6481
  2421  0000D2  EF6D  F000         	goto	u6480
  2422  0000D6                     u6481:
  2423  0000D6  EF76  F000         	goto	l6311
  2424  0000DA                     u6480:
  2425  0000DA                     
  2426                           ;main.c: 60:     {;main.c: 61:         printf("Connection error");
  2427  0000DA  0E77               	movlw	low STR_1
  2428  0000DC  0100               	movlb	0	; () banked
  2429  0000DE  6F9A               	movwf	printf@fmt& (0+255),b
  2430  0000E0  0E7F               	movlw	high STR_1
  2431  0000E2  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  2432  0000E4  ECD6  F02B         	call	_printf	;wreg free
  2433  0000E8                     l212:
  2434  0000E8  EF74  F000         	goto	l212
  2435  0000EC                     l6311:
  2436                           
  2437                           ;main.c: 65:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2438  0000EC  0E03               	movlw	3
  2439  0000EE  0100               	movlb	0	; () banked
  2440  0000F0  6FBE               	movwf	(??_main+1)& (0+255),b
  2441  0000F2  0E8A               	movlw	138
  2442  0000F4  6FBD               	movwf	??_main& (0+255),b
  2443  0000F6  0E55               	movlw	85
  2444  0000F8                     u6627:
  2445  0000F8  2EE8               	decfsz	wreg,f,c
  2446  0000FA  D7FE               	bra	u6627
  2447  0000FC  2FBD               	decfsz	??_main& (0+255),f,b
  2448  0000FE  D7FC               	bra	u6627
  2449  000100  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2450  000102  D7FA               	bra	u6627
  2451  000104  D000               	nop2	
  2452                           
  2453                           ;main.c: 67:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2454  000106  0E03               	movlw	3
  2455  000108  0100               	movlb	0	; () banked
  2456  00010A  6FBE               	movwf	(??_main+1)& (0+255),b
  2457  00010C  0E8A               	movlw	138
  2458  00010E  6FBD               	movwf	??_main& (0+255),b
  2459  000110  0E55               	movlw	85
  2460  000112                     u6637:
  2461  000112  2EE8               	decfsz	wreg,f,c
  2462  000114  D7FE               	bra	u6637
  2463  000116  2FBD               	decfsz	??_main& (0+255),f,b
  2464  000118  D7FC               	bra	u6637
  2465  00011A  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2466  00011C  D7FA               	bra	u6637
  2467  00011E  D000               	nop2	
  2468  000120                     
  2469                           ;main.c: 69:     int_ext_enable();
  2470  000120  ECAD  F02C         	call	_int_ext_enable	;wreg free
  2471  000124                     
  2472                           ;main.c: 70:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2473  000124  0E03               	movlw	3
  2474  000126  0100               	movlb	0	; () banked
  2475  000128  6FBE               	movwf	(??_main+1)& (0+255),b
  2476  00012A  0E8A               	movlw	138
  2477  00012C  6FBD               	movwf	??_main& (0+255),b
  2478  00012E  0E55               	movlw	85
  2479  000130                     u6647:
  2480  000130  2EE8               	decfsz	wreg,f,c
  2481  000132  D7FE               	bra	u6647
  2482  000134  2FBD               	decfsz	??_main& (0+255),f,b
  2483  000136  D7FC               	bra	u6647
  2484  000138  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2485  00013A  D7FA               	bra	u6647
  2486  00013C  D000               	nop2	
  2487  00013E                     
  2488                           ;main.c: 72:     LCD_Begin(0x4E);
  2489  00013E  0E4E               	movlw	78
  2490  000140  EC09  F023         	call	_LCD_Begin
  2491  000144                     
  2492                           ;main.c: 73:     _delay((unsigned long)((100)*(20000000L/4000.0)));
  2493  000144  0E03               	movlw	3
  2494  000146  0100               	movlb	0	; () banked
  2495  000148  6FBE               	movwf	(??_main+1)& (0+255),b
  2496  00014A  0E8A               	movlw	138
  2497  00014C  6FBD               	movwf	??_main& (0+255),b
  2498  00014E  0E55               	movlw	85
  2499  000150                     u6657:
  2500  000150  2EE8               	decfsz	wreg,f,c
  2501  000152  D7FE               	bra	u6657
  2502  000154  2FBD               	decfsz	??_main& (0+255),f,b
  2503  000156  D7FC               	bra	u6657
  2504  000158  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2505  00015A  D7FA               	bra	u6657
  2506  00015C  D000               	nop2	
  2507  00015E                     
  2508                           ;main.c: 76:     LCD_Goto(1, 1);
  2509  00015E  0E01               	movlw	1
  2510  000160  6E06               	movwf	LCD_Goto@row^0,c
  2511  000162  0E01               	movlw	1
  2512  000164  EC79  F028         	call	_LCD_Goto
  2513  000168                     
  2514                           ;main.c: 77:     LCD_Print("     CANSAT     ");
  2515  000168  0E00               	movlw	low STR_2
  2516  00016A  6E04               	movwf	LCD_Print@LCD_Str^0,c
  2517  00016C  0E7F               	movlw	high STR_2
  2518  00016E  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  2519  000170  ECFA  F025         	call	_LCD_Print	;wreg free
  2520  000174                     
  2521                           ;main.c: 78:     LCD_Goto(1, 2);
  2522  000174  0E02               	movlw	2
  2523  000176  6E06               	movwf	LCD_Goto@row^0,c
  2524  000178  0E01               	movlw	1
  2525  00017A  EC79  F028         	call	_LCD_Goto
  2526  00017E                     
  2527                           ;main.c: 79:     LCD_Print("  BY SAMUEL JM  ");
  2528  00017E  0E33               	movlw	low STR_3
  2529  000180  6E04               	movwf	LCD_Print@LCD_Str^0,c
  2530  000182  0E7F               	movlw	high STR_3
  2531  000184  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  2532  000186  ECFA  F025         	call	_LCD_Print	;wreg free
  2533  00018A                     
  2534                           ;main.c: 80:     UART_Print("     CANSAT     \r\n");
  2535  00018A  0E2E               	movlw	low STR_4
  2536  00018C  6E02               	movwf	UART_Print@data^0,c
  2537  00018E  0E7E               	movlw	high STR_4
  2538  000190  6E03               	movwf	(UART_Print@data+1)^0,c
  2539  000192  EC98  F027         	call	_UART_Print	;wreg free
  2540  000196                     
  2541                           ;main.c: 81:     UART_Print("  BY SAMUEL JM  \r\n\r\n");
  2542  000196  0E04               	movlw	low STR_5
  2543  000198  6E02               	movwf	UART_Print@data^0,c
  2544  00019A  0E7E               	movlw	high STR_5
  2545  00019C  6E03               	movwf	(UART_Print@data+1)^0,c
  2546  00019E  EC98  F027         	call	_UART_Print	;wreg free
  2547  0001A2                     
  2548                           ;main.c: 82:     _delay((unsigned long)((10000)*(20000000L/4000.0)));
  2549  0001A2  0EFE               	movlw	254
  2550  0001A4  0100               	movlb	0	; () banked
  2551  0001A6  6FBE               	movwf	(??_main+1)& (0+255),b
  2552  0001A8  0EA7               	movlw	167
  2553  0001AA  6FBD               	movwf	??_main& (0+255),b
  2554  0001AC  0E65               	movlw	101
  2555  0001AE                     u6667:
  2556  0001AE  2EE8               	decfsz	wreg,f,c
  2557  0001B0  D7FE               	bra	u6667
  2558  0001B2  2FBD               	decfsz	??_main& (0+255),f,b
  2559  0001B4  D7FC               	bra	u6667
  2560  0001B6  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2561  0001B8  D7FA               	bra	u6667
  2562  0001BA  D000               	nop2	
  2563  0001BC                     l6335:
  2564                           
  2565                           ;main.c: 87:         voltaje = ina219GetBusVoltage_V();
  2566  0001BC  EC54  F027         	call	_ina219GetBusVoltage_V	;wreg free
  2567  0001C0  C028  F114         	movff	?_ina219GetBusVoltage_V,_voltaje
  2568  0001C4  C029  F115         	movff	?_ina219GetBusVoltage_V+1,_voltaje+1
  2569  0001C8  C02A  F116         	movff	?_ina219GetBusVoltage_V+2,_voltaje+2
  2570  0001CC  C02B  F117         	movff	?_ina219GetBusVoltage_V+3,_voltaje+3
  2571  0001D0                     
  2572                           ;main.c: 88:         corriente = ina219GetCurrent_mA();
  2573  0001D0  EC16  F029         	call	_ina219GetCurrent_mA	;wreg free
  2574  0001D4  C028  F110         	movff	?_ina219GetCurrent_mA,_corriente
  2575  0001D8  C029  F111         	movff	?_ina219GetCurrent_mA+1,_corriente+1
  2576  0001DC  C02A  F112         	movff	?_ina219GetCurrent_mA+2,_corriente+2
  2577  0001E0  C02B  F113         	movff	?_ina219GetCurrent_mA+3,_corriente+3
  2578  0001E4                     
  2579                           ;main.c: 89:         potencia = ina219GetPower_mW();
  2580  0001E4  ECE3  F028         	call	_ina219GetPower_mW	;wreg free
  2581  0001E8  C028  F10C         	movff	?_ina219GetPower_mW,_potencia
  2582  0001EC  C029  F10D         	movff	?_ina219GetPower_mW+1,_potencia+1
  2583  0001F0  C02A  F10E         	movff	?_ina219GetPower_mW+2,_potencia+2
  2584  0001F4  C02B  F10F         	movff	?_ina219GetPower_mW+3,_potencia+3
  2585  0001F8                     
  2586                           ;main.c: 91:         BMP280_readTemperature(&temp);
  2587  0001F8  0EF4               	movlw	low _temp
  2588  0001FA  6E1B               	movwf	BMP280_readTemperature@temp^0,c
  2589  0001FC  0E00               	movlw	high _temp
  2590  0001FE  6E1C               	movwf	(BMP280_readTemperature@temp+1)^0,c
  2591  000200  ECB8  F018         	call	_BMP280_readTemperature	;wreg free
  2592  000204                     
  2593                           ;main.c: 92:         BMP280_readPressure(&pres);
  2594  000204  0EF0               	movlw	low _pres
  2595  000206  6E1B               	movwf	BMP280_readPressure@pres^0,c
  2596  000208  0E00               	movlw	high _pres
  2597  00020A  6E1C               	movwf	(BMP280_readPressure@pres+1)^0,c
  2598  00020C  EC2C  F00C         	call	_BMP280_readPressure	;wreg free
  2599  000210                     
  2600                           ;main.c: 94:         dht11_check_humidity(ptr_h);
  2601  000210  0EB2               	movlw	low _humidity
  2602  000212  6E09               	movwf	dht11_check_humidity@ptr_h^0,c
  2603  000214  0E01               	movlw	high _humidity
  2604  000216  6E0A               	movwf	(dht11_check_humidity@ptr_h+1)^0,c
  2605  000218  EC23  F01E         	call	_dht11_check_humidity	;wreg free
  2606  00021C                     l6347:
  2607                           
  2608                           ;main.c: 96:         while(!(GPSRead_rmc(time,date,nmea_log,lat,lon,speed,course,stream)
      +                          ))
  2609  00021C  0E71               	movlw	low _time
  2610  00021E  6E06               	movwf	GPSRead_rmc@time^0,c
  2611  000220  0E01               	movlw	high _time
  2612  000222  6E07               	movwf	(GPSRead_rmc@time+1)^0,c
  2613  000224  0E9E               	movlw	low _date
  2614  000226  6E08               	movwf	GPSRead_rmc@date^0,c
  2615  000228  0E01               	movlw	high _date
  2616  00022A  6E09               	movwf	(GPSRead_rmc@date+1)^0,c
  2617  00022C  0E97               	movlw	low _nmea_log
  2618  00022E  6E0A               	movwf	GPSRead_rmc@nmea_log^0,c
  2619  000230  0E01               	movlw	high _nmea_log
  2620  000232  6E0B               	movwf	(GPSRead_rmc@nmea_log+1)^0,c
  2621  000234  0E65               	movlw	low _lat
  2622  000236  6E0C               	movwf	GPSRead_rmc@lat^0,c
  2623  000238  0E01               	movlw	high _lat
  2624  00023A  6E0D               	movwf	(GPSRead_rmc@lat+1)^0,c
  2625  00023C  0E58               	movlw	low _lon
  2626  00023E  6E0E               	movwf	GPSRead_rmc@lon^0,c
  2627  000240  0E01               	movlw	high _lon
  2628  000242  6E0F               	movwf	(GPSRead_rmc@lon+1)^0,c
  2629  000244  0E8F               	movlw	low _speed
  2630  000246  6E10               	movwf	GPSRead_rmc@speed^0,c
  2631  000248  0E01               	movlw	high _speed
  2632  00024A  6E11               	movwf	(GPSRead_rmc@speed+1)^0,c
  2633  00024C  0E87               	movlw	low _course
  2634  00024E  6E12               	movwf	GPSRead_rmc@course^0,c
  2635  000250  0E01               	movlw	high _course
  2636  000252  6E13               	movwf	(GPSRead_rmc@course+1)^0,c
  2637  000254  0EFD               	movlw	low _stream
  2638  000256  6E14               	movwf	GPSRead_rmc@stream^0,c
  2639  000258  0E00               	movlw	high _stream
  2640  00025A  6E15               	movwf	(GPSRead_rmc@stream+1)^0,c
  2641  00025C  ECFF  F01A         	call	_GPSRead_rmc	;wreg free
  2642  000260  A0D8               	btfss	status,0,c
  2643  000262  EF35  F001         	goto	u6491
  2644  000266  EF37  F001         	goto	u6490
  2645  00026A                     u6491:
  2646  00026A  EF0E  F001         	goto	l6347
  2647  00026E                     u6490:
  2648  00026E                     l6349:
  2649                           
  2650                           ;main.c: 98:         while(!(GPSRead_gga(alt,satel,nmea_log,stream)))
  2651  00026E  0E7D               	movlw	low _alt
  2652  000270  6E06               	movwf	GPSRead_gga@alt^0,c
  2653  000272  0E01               	movlw	high _alt
  2654  000274  6E07               	movwf	(GPSRead_gga@alt+1)^0,c
  2655  000276  0EA5               	movlw	low _satel
  2656  000278  6E08               	movwf	GPSRead_gga@satel^0,c
  2657  00027A  0E01               	movlw	high _satel
  2658  00027C  6E09               	movwf	(GPSRead_gga@satel+1)^0,c
  2659  00027E  0E97               	movlw	low _nmea_log
  2660  000280  6E0A               	movwf	GPSRead_gga@nmea_log^0,c
  2661  000282  0E01               	movlw	high _nmea_log
  2662  000284  6E0B               	movwf	(GPSRead_gga@nmea_log+1)^0,c
  2663  000286  0EFD               	movlw	low _stream
  2664  000288  6E0C               	movwf	GPSRead_gga@stream^0,c
  2665  00028A  0E00               	movlw	high _stream
  2666  00028C  6E0D               	movwf	(GPSRead_gga@stream+1)^0,c
  2667  00028E  ECF5  F01F         	call	_GPSRead_gga	;wreg free
  2668  000292  A0D8               	btfss	status,0,c
  2669  000294  EF4E  F001         	goto	u6501
  2670  000298  EF50  F001         	goto	u6500
  2671  00029C                     u6501:
  2672  00029C  EF37  F001         	goto	l6349
  2673  0002A0                     u6500:
  2674  0002A0                     
  2675                           ;main.c: 102:         for(i=0;i<5;i++){
  2676  0002A0  0E00               	movlw	0
  2677  0002A2  0100               	movlb	0	; () banked
  2678  0002A4  6FEF               	movwf	_i& (0+255),b
  2679  0002A6                     l6353:
  2680                           
  2681                           ; BSR set to: 0
  2682  0002A6  0E04               	movlw	4
  2683  0002A8  65EF               	cpfsgt	_i& (0+255),b
  2684  0002AA  EF59  F001         	goto	u6511
  2685  0002AE  EF5B  F001         	goto	u6510
  2686  0002B2                     u6511:
  2687  0002B2  EF0F  F002         	goto	l6373
  2688  0002B6                     u6510:
  2689  0002B6  EF85  F002         	goto	l6395
  2690  0002BA                     l225:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;main.c: 105:                     tx_variable = voltaje;
  2694  0002BA  C114  F0D7         	movff	_voltaje,_tx_variable
  2695  0002BE  C115  F0D8         	movff	_voltaje+1,_tx_variable+1
  2696  0002C2  C116  F0D9         	movff	_voltaje+2,_tx_variable+2
  2697  0002C6  C117  F0DA         	movff	_voltaje+3,_tx_variable+3
  2698  0002CA                     
  2699                           ; BSR set to: 0
  2700                           ;main.c: 106:                     memcpy(description, "Voltaje (V):    ", 18);
  2701  0002CA  0E32               	movlw	low _description
  2702  0002CC  6E01               	movwf	memcpy@d1^0,c
  2703  0002CE  0E01               	movlw	high _description
  2704  0002D0  6E02               	movwf	(memcpy@d1+1)^0,c
  2705  0002D2  0E11               	movlw	low STR_6
  2706  0002D4  6E03               	movwf	memcpy@s1^0,c
  2707  0002D6  0E7F               	movlw	high STR_6
  2708  0002D8  6E04               	movwf	(memcpy@s1+1)^0,c
  2709  0002DA  0E00               	movlw	0
  2710  0002DC  6E06               	movwf	(memcpy@n+1)^0,c
  2711  0002DE  0E12               	movlw	18
  2712  0002E0  6E05               	movwf	memcpy@n^0,c
  2713  0002E2  EC2C  F02A         	call	_memcpy	;wreg free
  2714                           
  2715                           ;main.c: 107:                     break;
  2716  0002E6  EF30  F002         	goto	l6375
  2717  0002EA                     l227:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;main.c: 109:                     tx_variable = corriente;
  2721  0002EA  C110  F0D7         	movff	_corriente,_tx_variable
  2722  0002EE  C111  F0D8         	movff	_corriente+1,_tx_variable+1
  2723  0002F2  C112  F0D9         	movff	_corriente+2,_tx_variable+2
  2724  0002F6  C113  F0DA         	movff	_corriente+3,_tx_variable+3
  2725  0002FA                     
  2726                           ; BSR set to: 0
  2727                           ;main.c: 110:                     memcpy(description, "Corriente (mA): ", 18);
  2728  0002FA  0E32               	movlw	low _description
  2729  0002FC  6E01               	movwf	memcpy@d1^0,c
  2730  0002FE  0E01               	movlw	high _description
  2731  000300  6E02               	movwf	(memcpy@d1+1)^0,c
  2732  000302  0E44               	movlw	low STR_7
  2733  000304  6E03               	movwf	memcpy@s1^0,c
  2734  000306  0E7F               	movlw	high STR_7
  2735  000308  6E04               	movwf	(memcpy@s1+1)^0,c
  2736  00030A  0E00               	movlw	0
  2737  00030C  6E06               	movwf	(memcpy@n+1)^0,c
  2738  00030E  0E12               	movlw	18
  2739  000310  6E05               	movwf	memcpy@n^0,c
  2740  000312  EC2C  F02A         	call	_memcpy	;wreg free
  2741                           
  2742                           ;main.c: 111:                     break;
  2743  000316  EF30  F002         	goto	l6375
  2744  00031A                     l228:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;main.c: 113:                     tx_variable = potencia;
  2748  00031A  C10C  F0D7         	movff	_potencia,_tx_variable
  2749  00031E  C10D  F0D8         	movff	_potencia+1,_tx_variable+1
  2750  000322  C10E  F0D9         	movff	_potencia+2,_tx_variable+2
  2751  000326  C10F  F0DA         	movff	_potencia+3,_tx_variable+3
  2752  00032A                     
  2753                           ; BSR set to: 0
  2754                           ;main.c: 114:                     memcpy(description, "Potencia (mW):  ", 18);
  2755  00032A  0E32               	movlw	low _description
  2756  00032C  6E01               	movwf	memcpy@d1^0,c
  2757  00032E  0E01               	movlw	high _description
  2758  000330  6E02               	movwf	(memcpy@d1+1)^0,c
  2759  000332  0E22               	movlw	low STR_8
  2760  000334  6E03               	movwf	memcpy@s1^0,c
  2761  000336  0E7F               	movlw	high STR_8
  2762  000338  6E04               	movwf	(memcpy@s1+1)^0,c
  2763  00033A  0E00               	movlw	0
  2764  00033C  6E06               	movwf	(memcpy@n+1)^0,c
  2765  00033E  0E12               	movlw	18
  2766  000340  6E05               	movwf	memcpy@n^0,c
  2767  000342  EC2C  F02A         	call	_memcpy	;wreg free
  2768                           
  2769                           ;main.c: 115:                     break;
  2770  000346  EF30  F002         	goto	l6375
  2771  00034A                     l6363:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;main.c: 117:                     tx_variable = (float)temp/(float)100;
  2775  00034A  C0F4  F001         	movff	_temp,___xxtofl@val
  2776  00034E  C0F5  F002         	movff	_temp+1,___xxtofl@val+1
  2777  000352  C0F6  F003         	movff	_temp+2,___xxtofl@val+2
  2778  000356  C0F7  F004         	movff	_temp+3,___xxtofl@val+3
  2779  00035A  0E01               	movlw	1
  2780  00035C  ECDB  F01B         	call	___xxtofl
  2781  000360  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2782  000364  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2783  000368  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2784  00036C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2785  000370  0E00               	movlw	0
  2786  000372  6E13               	movwf	___fldiv@a^0,c
  2787  000374  0E00               	movlw	0
  2788  000376  6E14               	movwf	(___fldiv@a+1)^0,c
  2789  000378  0EC8               	movlw	200
  2790  00037A  6E15               	movwf	(___fldiv@a+2)^0,c
  2791  00037C  0E42               	movlw	66
  2792  00037E  6E16               	movwf	(___fldiv@a+3)^0,c
  2793  000380  ECEB  F016         	call	___fldiv	;wreg free
  2794  000384  C00F  F0D7         	movff	?___fldiv,_tx_variable
  2795  000388  C010  F0D8         	movff	?___fldiv+1,_tx_variable+1
  2796  00038C  C011  F0D9         	movff	?___fldiv+2,_tx_variable+2
  2797  000390  C012  F0DA         	movff	?___fldiv+3,_tx_variable+3
  2798  000394                     
  2799                           ;main.c: 118:                     memcpy(description, "Temperatura (C):", 18);
  2800  000394  0E32               	movlw	low _description
  2801  000396  6E01               	movwf	memcpy@d1^0,c
  2802  000398  0E01               	movlw	high _description
  2803  00039A  6E02               	movwf	(memcpy@d1+1)^0,c
  2804  00039C  0E55               	movlw	low STR_9
  2805  00039E  6E03               	movwf	memcpy@s1^0,c
  2806  0003A0  0E7F               	movlw	high STR_9
  2807  0003A2  6E04               	movwf	(memcpy@s1+1)^0,c
  2808  0003A4  0E00               	movlw	0
  2809  0003A6  6E06               	movwf	(memcpy@n+1)^0,c
  2810  0003A8  0E12               	movlw	18
  2811  0003AA  6E05               	movwf	memcpy@n^0,c
  2812  0003AC  EC2C  F02A         	call	_memcpy	;wreg free
  2813                           
  2814                           ;main.c: 119:                     break;
  2815  0003B0  EF30  F002         	goto	l6375
  2816  0003B4                     l6367:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;main.c: 121:                     tx_variable = (float)pres/(float)100;
  2820  0003B4  C0F0  F001         	movff	_pres,___xxtofl@val
  2821  0003B8  C0F1  F002         	movff	_pres+1,___xxtofl@val+1
  2822  0003BC  C0F2  F003         	movff	_pres+2,___xxtofl@val+2
  2823  0003C0  C0F3  F004         	movff	_pres+3,___xxtofl@val+3
  2824  0003C4  0E00               	movlw	0
  2825  0003C6  ECDB  F01B         	call	___xxtofl
  2826  0003CA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2827  0003CE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2828  0003D2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2829  0003D6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2830  0003DA  0E00               	movlw	0
  2831  0003DC  6E13               	movwf	___fldiv@a^0,c
  2832  0003DE  0E00               	movlw	0
  2833  0003E0  6E14               	movwf	(___fldiv@a+1)^0,c
  2834  0003E2  0EC8               	movlw	200
  2835  0003E4  6E15               	movwf	(___fldiv@a+2)^0,c
  2836  0003E6  0E42               	movlw	66
  2837  0003E8  6E16               	movwf	(___fldiv@a+3)^0,c
  2838  0003EA  ECEB  F016         	call	___fldiv	;wreg free
  2839  0003EE  C00F  F0D7         	movff	?___fldiv,_tx_variable
  2840  0003F2  C010  F0D8         	movff	?___fldiv+1,_tx_variable+1
  2841  0003F6  C011  F0D9         	movff	?___fldiv+2,_tx_variable+2
  2842  0003FA  C012  F0DA         	movff	?___fldiv+3,_tx_variable+3
  2843  0003FE                     
  2844                           ;main.c: 122:                     memcpy(description, "PresionAtm(hPa):", 18);
  2845  0003FE  0E32               	movlw	low _description
  2846  000400  6E01               	movwf	memcpy@d1^0,c
  2847  000402  0E01               	movlw	high _description
  2848  000404  6E02               	movwf	(memcpy@d1+1)^0,c
  2849  000406  0E66               	movlw	low STR_10
  2850  000408  6E03               	movwf	memcpy@s1^0,c
  2851  00040A  0E7F               	movlw	high STR_10
  2852  00040C  6E04               	movwf	(memcpy@s1+1)^0,c
  2853  00040E  0E00               	movlw	0
  2854  000410  6E06               	movwf	(memcpy@n+1)^0,c
  2855  000412  0E12               	movlw	18
  2856  000414  6E05               	movwf	memcpy@n^0,c
  2857  000416  EC2C  F02A         	call	_memcpy	;wreg free
  2858                           
  2859                           ;main.c: 123:                     break;
  2860  00041A  EF30  F002         	goto	l6375
  2861  00041E                     l6373:
  2862                           
  2863                           ; BSR set to: 0
  2864  00041E  51EF               	movf	_i& (0+255),w,b
  2865  000420  6FBD               	movwf	??_main& (0+255),b
  2866  000422  6BBE               	clrf	(??_main+1)& (0+255),b
  2867                           
  2868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2869                           ; Switch size 1, requested type "simple"
  2870                           ; Number of cases is 1, Range of values is 0 to 0
  2871                           ; switch strategies available:
  2872                           ; Name         Instructions Cycles
  2873                           ; simple_byte            4     3 (average)
  2874                           ;	Chosen strategy is simple_byte
  2875  000424  51BE               	movf	(??_main+1)& (0+255),w,b
  2876  000426  0A00               	xorlw	0	; case 0
  2877  000428  B4D8               	btfsc	status,2,c
  2878  00042A  EF19  F002         	goto	l6713
  2879  00042E  EF30  F002         	goto	l6375
  2880  000432                     l6713:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 5, Range of values is 0 to 4
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte           16     9 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889  000432  51BD               	movf	??_main& (0+255),w,b
  2890  000434  0A00               	xorlw	0	; case 0
  2891  000436  B4D8               	btfsc	status,2,c
  2892  000438  EF5D  F001         	goto	l225
  2893  00043C  0A01               	xorlw	1	; case 1
  2894  00043E  B4D8               	btfsc	status,2,c
  2895  000440  EF75  F001         	goto	l227
  2896  000444  0A03               	xorlw	3	; case 2
  2897  000446  B4D8               	btfsc	status,2,c
  2898  000448  EF8D  F001         	goto	l228
  2899  00044C  0A01               	xorlw	1	; case 3
  2900  00044E  B4D8               	btfsc	status,2,c
  2901  000450  EFA5  F001         	goto	l6363
  2902  000454  0A07               	xorlw	7	; case 4
  2903  000456  B4D8               	btfsc	status,2,c
  2904  000458  EFDA  F001         	goto	l6367
  2905  00045C  EF30  F002         	goto	l6375
  2906  000460                     l6375:
  2907                           
  2908                           ;main.c: 128:             printf("%s  %.4f\r\n",description, tx_variable);
  2909  000460  0ECA               	movlw	low STR_11
  2910  000462  0100               	movlb	0	; () banked
  2911  000464  6F9A               	movwf	printf@fmt& (0+255),b
  2912  000466  0E7F               	movlw	high STR_11
  2913  000468  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  2914  00046A  0E32               	movlw	low _description
  2915  00046C  6F9C               	movwf	(?_printf+2)& (0+255),b
  2916  00046E  0E01               	movlw	high _description
  2917  000470  6F9D               	movwf	(?_printf+3)& (0+255),b
  2918  000472  C0D7  F09E         	movff	_tx_variable,?_printf+4
  2919  000476  C0D8  F09F         	movff	_tx_variable+1,?_printf+5
  2920  00047A  C0D9  F0A0         	movff	_tx_variable+2,?_printf+6
  2921  00047E  C0DA  F0A1         	movff	_tx_variable+3,?_printf+7
  2922  000482  ECD6  F02B         	call	_printf	;wreg free
  2923  000486                     
  2924                           ;main.c: 130:             if(boton == 1){
  2925  000486  0100               	movlb	0	; () banked
  2926  000488  05EE               	decf	_boton& (0+255),w,b
  2927  00048A  A4D8               	btfss	status,2,c
  2928  00048C  EF4A  F002         	goto	u6521
  2929  000490  EF4C  F002         	goto	u6520
  2930  000494                     u6521:
  2931  000494  EF81  F002         	goto	l6391
  2932  000498                     u6520:
  2933  000498                     
  2934                           ; BSR set to: 0
  2935                           ;main.c: 131:                 LCD_Goto(1, 1);
  2936  000498  0E01               	movlw	1
  2937  00049A  6E06               	movwf	LCD_Goto@row^0,c
  2938  00049C  0E01               	movlw	1
  2939  00049E  EC79  F028         	call	_LCD_Goto
  2940  0004A2                     
  2941                           ;main.c: 132:                 LCD_Print(description);
  2942  0004A2  0E32               	movlw	low _description
  2943  0004A4  6E04               	movwf	LCD_Print@LCD_Str^0,c
  2944  0004A6  0E01               	movlw	high _description
  2945  0004A8  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  2946  0004AA  ECFA  F025         	call	_LCD_Print	;wreg free
  2947  0004AE                     
  2948                           ;main.c: 134:                 sprintf(lcd_text,"%.4f         ",tx_variable);
  2949  0004AE  0E46               	movlw	low _lcd_text
  2950  0004B0  0100               	movlb	0	; () banked
  2951  0004B2  6F9A               	movwf	sprintf@s& (0+255),b
  2952  0004B4  0E01               	movlw	high _lcd_text
  2953  0004B6  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  2954  0004B8  0E98               	movlw	low STR_12
  2955  0004BA  6F9C               	movwf	sprintf@fmt& (0+255),b
  2956  0004BC  0E7F               	movlw	high STR_12
  2957  0004BE  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  2958  0004C0  C0D7  F09E         	movff	_tx_variable,?_sprintf+4
  2959  0004C4  C0D8  F09F         	movff	_tx_variable+1,?_sprintf+5
  2960  0004C8  C0D9  F0A0         	movff	_tx_variable+2,?_sprintf+6
  2961  0004CC  C0DA  F0A1         	movff	_tx_variable+3,?_sprintf+7
  2962  0004D0  ECDA  F029         	call	_sprintf	;wreg free
  2963  0004D4                     
  2964                           ;main.c: 135:                 LCD_Goto(1, 2);
  2965  0004D4  0E02               	movlw	2
  2966  0004D6  6E06               	movwf	LCD_Goto@row^0,c
  2967  0004D8  0E01               	movlw	1
  2968  0004DA  EC79  F028         	call	_LCD_Goto
  2969  0004DE                     
  2970                           ;main.c: 136:                 LCD_Print(lcd_text);
  2971  0004DE  0E46               	movlw	low _lcd_text
  2972  0004E0  6E04               	movwf	LCD_Print@LCD_Str^0,c
  2973  0004E2  0E01               	movlw	high _lcd_text
  2974  0004E4  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  2975  0004E6  ECFA  F025         	call	_LCD_Print	;wreg free
  2976  0004EA                     
  2977                           ;main.c: 137:                 _delay((unsigned long)((4000)*(20000000L/4000.0)));
  2978  0004EA  0E66               	movlw	102
  2979  0004EC  0100               	movlb	0	; () banked
  2980  0004EE  6FBE               	movwf	(??_main+1)& (0+255),b
  2981  0004F0  0E76               	movlw	118
  2982  0004F2  6FBD               	movwf	??_main& (0+255),b
  2983  0004F4  0EC1               	movlw	193
  2984  0004F6                     u6677:
  2985  0004F6  2EE8               	decfsz	wreg,f,c
  2986  0004F8  D7FE               	bra	u6677
  2987  0004FA  2FBD               	decfsz	??_main& (0+255),f,b
  2988  0004FC  D7FC               	bra	u6677
  2989  0004FE  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  2990  000500  D7FA               	bra	u6677
  2991  000502                     l6391:
  2992                           
  2993                           ;main.c: 139:         }
  2994  000502  0100               	movlb	0	; () banked
  2995  000504  2BEF               	incf	_i& (0+255),f,b
  2996  000506  EF53  F001         	goto	l6353
  2997  00050A                     l6395:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;main.c: 141:         UART_Print(humidity);
  3001  00050A  0EB2               	movlw	low _humidity
  3002  00050C  6E02               	movwf	UART_Print@data^0,c
  3003  00050E  0E01               	movlw	high _humidity
  3004  000510  6E03               	movwf	(UART_Print@data+1)^0,c
  3005  000512  EC98  F027         	call	_UART_Print	;wreg free
  3006                           
  3007                           ;main.c: 142:         UART_Print("\r\n");
  3008  000516  0E75               	movlw	low (STR_20+15)
  3009  000518  6E02               	movwf	UART_Print@data^0,c
  3010  00051A  0E7E               	movlw	high (STR_20+15)
  3011  00051C  6E03               	movwf	(UART_Print@data+1)^0,c
  3012  00051E  EC98  F027         	call	_UART_Print	;wreg free
  3013  000522                     
  3014                           ;main.c: 144:         if(boton == 1){
  3015  000522  0100               	movlb	0	; () banked
  3016  000524  05EE               	decf	_boton& (0+255),w,b
  3017  000526  A4D8               	btfss	status,2,c
  3018  000528  EF98  F002         	goto	u6531
  3019  00052C  EF9A  F002         	goto	u6530
  3020  000530                     u6531:
  3021  000530  EF0E  F003         	goto	l6445
  3022  000534                     u6530:
  3023  000534                     
  3024                           ; BSR set to: 0
  3025                           ;main.c: 145:             for(i=0;i<16;i++){
  3026  000534  0E00               	movlw	0
  3027  000536  6FEF               	movwf	_i& (0+255),b
  3028  000538                     l6401:
  3029                           
  3030                           ; BSR set to: 0
  3031  000538  0E0F               	movlw	15
  3032  00053A  65EF               	cpfsgt	_i& (0+255),b
  3033  00053C  EFA2  F002         	goto	u6541
  3034  000540  EFA4  F002         	goto	u6540
  3035  000544                     u6541:
  3036  000544  EFA6  F002         	goto	l6405
  3037  000548                     u6540:
  3038  000548  EFB7  F002         	goto	l6411
  3039  00054C                     l6405:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;main.c: 146:                 lcd_text[i] = humidity[i];
  3043  00054C  0EB2               	movlw	low _humidity
  3044  00054E  25EF               	addwf	_i& (0+255),w,b
  3045  000550  6ED9               	movwf	fsr2l,c
  3046  000552  6ADA               	clrf	fsr2h,c
  3047  000554  0E01               	movlw	high _humidity
  3048  000556  22DA               	addwfc	fsr2h,f,c
  3049  000558  0E46               	movlw	low _lcd_text
  3050  00055A  25EF               	addwf	_i& (0+255),w,b
  3051  00055C  6EE1               	movwf	fsr1l,c
  3052  00055E  6AE2               	clrf	fsr1h,c
  3053  000560  0E01               	movlw	high _lcd_text
  3054  000562  22E2               	addwfc	fsr1h,f,c
  3055  000564  CFDF FFE7          	movff	indf2,indf1
  3056  000568                     
  3057                           ; BSR set to: 0
  3058                           ;main.c: 147:             }
  3059  000568  2BEF               	incf	_i& (0+255),f,b
  3060  00056A  EF9C  F002         	goto	l6401
  3061  00056E                     l6411:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;main.c: 148:             LCD_Goto(1, 1);
  3065  00056E  0E01               	movlw	1
  3066  000570  6E06               	movwf	LCD_Goto@row^0,c
  3067  000572  0E01               	movlw	1
  3068  000574  EC79  F028         	call	_LCD_Goto
  3069  000578                     
  3070                           ;main.c: 149:             LCD_Print(lcd_text);
  3071  000578  0E46               	movlw	low _lcd_text
  3072  00057A  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3073  00057C  0E01               	movlw	high _lcd_text
  3074  00057E  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3075  000580  ECFA  F025         	call	_LCD_Print	;wreg free
  3076  000584                     
  3077                           ;main.c: 151:             for(i=16;i<18;i++){
  3078  000584  0E10               	movlw	16
  3079  000586  0100               	movlb	0	; () banked
  3080  000588  6FEF               	movwf	_i& (0+255),b
  3081  00058A                     l6417:
  3082                           
  3083                           ; BSR set to: 0
  3084  00058A  0E11               	movlw	17
  3085  00058C  65EF               	cpfsgt	_i& (0+255),b
  3086  00058E  EFCB  F002         	goto	u6551
  3087  000592  EFCD  F002         	goto	u6550
  3088  000596                     u6551:
  3089  000596  EFCF  F002         	goto	l6421
  3090  00059A                     u6550:
  3091  00059A  EFE0  F002         	goto	l6427
  3092  00059E                     l6421:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;main.c: 152:                 lcd_text[i-16] = humidity[i];
  3096  00059E  0EB2               	movlw	low _humidity
  3097  0005A0  25EF               	addwf	_i& (0+255),w,b
  3098  0005A2  6ED9               	movwf	fsr2l,c
  3099  0005A4  6ADA               	clrf	fsr2h,c
  3100  0005A6  0E01               	movlw	high _humidity
  3101  0005A8  22DA               	addwfc	fsr2h,f,c
  3102  0005AA  0E36               	movlw	low (_lcd_text+65520)
  3103  0005AC  25EF               	addwf	_i& (0+255),w,b
  3104  0005AE  6EE1               	movwf	fsr1l,c
  3105  0005B0  6AE2               	clrf	fsr1h,c
  3106  0005B2  0E01               	movlw	high (_lcd_text+65520)
  3107  0005B4  22E2               	addwfc	fsr1h,f,c
  3108  0005B6  CFDF FFE7          	movff	indf2,indf1
  3109  0005BA                     
  3110                           ; BSR set to: 0
  3111                           ;main.c: 153:             }
  3112  0005BA  2BEF               	incf	_i& (0+255),f,b
  3113  0005BC  EFC5  F002         	goto	l6417
  3114  0005C0                     l6427:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;main.c: 154:             for(i=2;i<16;i++){
  3118  0005C0  0E02               	movlw	2
  3119  0005C2  6FEF               	movwf	_i& (0+255),b
  3120  0005C4                     l6429:
  3121                           
  3122                           ; BSR set to: 0
  3123  0005C4  0E0F               	movlw	15
  3124  0005C6  65EF               	cpfsgt	_i& (0+255),b
  3125  0005C8  EFE8  F002         	goto	u6561
  3126  0005CC  EFEA  F002         	goto	u6560
  3127  0005D0                     u6561:
  3128  0005D0  EFEC  F002         	goto	l6433
  3129  0005D4                     u6560:
  3130  0005D4  EFF7  F002         	goto	l6439
  3131  0005D8                     l6433:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;main.c: 155:                 lcd_text[i] = ' ';
  3135  0005D8  0E46               	movlw	low _lcd_text
  3136  0005DA  25EF               	addwf	_i& (0+255),w,b
  3137  0005DC  6ED9               	movwf	fsr2l,c
  3138  0005DE  6ADA               	clrf	fsr2h,c
  3139  0005E0  0E01               	movlw	high _lcd_text
  3140  0005E2  22DA               	addwfc	fsr2h,f,c
  3141  0005E4  0E20               	movlw	32
  3142  0005E6  6EDF               	movwf	indf2,c
  3143  0005E8                     
  3144                           ; BSR set to: 0
  3145                           ;main.c: 156:             }
  3146  0005E8  2BEF               	incf	_i& (0+255),f,b
  3147  0005EA  EFE2  F002         	goto	l6429
  3148  0005EE                     l6439:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;main.c: 157:             LCD_Goto(1, 2);
  3152  0005EE  0E02               	movlw	2
  3153  0005F0  6E06               	movwf	LCD_Goto@row^0,c
  3154  0005F2  0E01               	movlw	1
  3155  0005F4  EC79  F028         	call	_LCD_Goto
  3156  0005F8                     
  3157                           ;main.c: 158:             LCD_Print(lcd_text);
  3158  0005F8  0E46               	movlw	low _lcd_text
  3159  0005FA  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3160  0005FC  0E01               	movlw	high _lcd_text
  3161  0005FE  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3162  000600  ECFA  F025         	call	_LCD_Print	;wreg free
  3163  000604                     
  3164                           ;main.c: 159:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3165  000604  0E66               	movlw	102
  3166  000606  0100               	movlb	0	; () banked
  3167  000608  6FBE               	movwf	(??_main+1)& (0+255),b
  3168  00060A  0E76               	movlw	118
  3169  00060C  6FBD               	movwf	??_main& (0+255),b
  3170  00060E  0EC1               	movlw	193
  3171  000610                     u6687:
  3172  000610  2EE8               	decfsz	wreg,f,c
  3173  000612  D7FE               	bra	u6687
  3174  000614  2FBD               	decfsz	??_main& (0+255),f,b
  3175  000616  D7FC               	bra	u6687
  3176  000618  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3177  00061A  D7FA               	bra	u6687
  3178  00061C                     l6445:
  3179                           
  3180                           ;main.c: 164:         printf("Time(UTC): %c%c:%c%c:%c%c\r\n",time[0],time[1],time[2],tim
      +                          e[3],time[4],time[5]);
  3181  00061C  0E71               	movlw	low STR_14
  3182  00061E  0100               	movlb	0	; () banked
  3183  000620  6F9A               	movwf	printf@fmt& (0+255),b
  3184  000622  0E7D               	movlw	high STR_14
  3185  000624  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3186  000626  C171  F09C         	movff	_time,?_printf+2
  3187  00062A  6B9D               	clrf	(?_printf+3)& (0+255),b
  3188  00062C  C172  F09E         	movff	_time+1,?_printf+4
  3189  000630  6B9F               	clrf	(?_printf+5)& (0+255),b
  3190  000632  C173  F0A0         	movff	_time+2,?_printf+6
  3191  000636  6BA1               	clrf	(?_printf+7)& (0+255),b
  3192  000638  C174  F0A2         	movff	_time+3,?_printf+8
  3193  00063C  6BA3               	clrf	(?_printf+9)& (0+255),b
  3194  00063E  C175  F0A4         	movff	_time+4,?_printf+10
  3195  000642  6BA5               	clrf	(?_printf+11)& (0+255),b
  3196  000644  C176  F0A6         	movff	_time+5,?_printf+12
  3197  000648  6BA7               	clrf	(?_printf+13)& (0+255),b
  3198  00064A  ECD6  F02B         	call	_printf	;wreg free
  3199  00064E                     
  3200                           ;main.c: 166:         printf("Date:      %c%c/%c%c/%c%c\r\n",date[0],date[1],date[2],dat
      +                          e[3],date[4],date[5]);
  3201  00064E  0E55               	movlw	low STR_15
  3202  000650  0100               	movlb	0	; () banked
  3203  000652  6F9A               	movwf	printf@fmt& (0+255),b
  3204  000654  0E7D               	movlw	high STR_15
  3205  000656  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3206  000658  C19E  F09C         	movff	_date,?_printf+2
  3207  00065C  6B9D               	clrf	(?_printf+3)& (0+255),b
  3208  00065E  C19F  F09E         	movff	_date+1,?_printf+4
  3209  000662  6B9F               	clrf	(?_printf+5)& (0+255),b
  3210  000664  C1A0  F0A0         	movff	_date+2,?_printf+6
  3211  000668  6BA1               	clrf	(?_printf+7)& (0+255),b
  3212  00066A  C1A1  F0A2         	movff	_date+3,?_printf+8
  3213  00066E  6BA3               	clrf	(?_printf+9)& (0+255),b
  3214  000670  C1A2  F0A4         	movff	_date+4,?_printf+10
  3215  000674  6BA5               	clrf	(?_printf+11)& (0+255),b
  3216  000676  C1A3  F0A6         	movff	_date+5,?_printf+12
  3217  00067A  6BA7               	clrf	(?_printf+13)& (0+255),b
  3218  00067C  ECD6  F02B         	call	_printf	;wreg free
  3219  000680                     
  3220                           ;main.c: 168:         printf("Latitude:  %c%c°%c%c.%c%c%c' %c\r\n",lat[0],lat[1],lat[2],
      +                          lat[3],lat[5],lat[6],lat[7],lat[10]);
  3221  000680  0E15               	movlw	low STR_16
  3222  000682  0100               	movlb	0	; () banked
  3223  000684  6F9A               	movwf	printf@fmt& (0+255),b
  3224  000686  0E7D               	movlw	high STR_16
  3225  000688  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3226  00068A  C165  F09C         	movff	_lat,?_printf+2
  3227  00068E  6B9D               	clrf	(?_printf+3)& (0+255),b
  3228  000690  C166  F09E         	movff	_lat+1,?_printf+4
  3229  000694  6B9F               	clrf	(?_printf+5)& (0+255),b
  3230  000696  C167  F0A0         	movff	_lat+2,?_printf+6
  3231  00069A  6BA1               	clrf	(?_printf+7)& (0+255),b
  3232  00069C  C168  F0A2         	movff	_lat+3,?_printf+8
  3233  0006A0  6BA3               	clrf	(?_printf+9)& (0+255),b
  3234  0006A2  C16A  F0A4         	movff	_lat+5,?_printf+10
  3235  0006A6  6BA5               	clrf	(?_printf+11)& (0+255),b
  3236  0006A8  C16B  F0A6         	movff	_lat+6,?_printf+12
  3237  0006AC  6BA7               	clrf	(?_printf+13)& (0+255),b
  3238  0006AE  C16C  F0A8         	movff	_lat+7,?_printf+14
  3239  0006B2  6BA9               	clrf	(?_printf+15)& (0+255),b
  3240  0006B4  C16F  F0AA         	movff	_lat+10,?_printf+16
  3241  0006B8  6BAB               	clrf	(?_printf+17)& (0+255),b
  3242  0006BA  ECD6  F02B         	call	_printf	;wreg free
  3243  0006BE                     
  3244                           ;main.c: 170:         printf("Longitude: %c%c%c°%c%c.%c%c%c' %c\r\n",lon[0],lon[1],lon[2
      +                          ],lon[3],lon[4],lon[6],lon[7],lon[8],lon[11]);
  3245  0006BE  0EF1               	movlw	low STR_17
  3246  0006C0  0100               	movlb	0	; () banked
  3247  0006C2  6F9A               	movwf	printf@fmt& (0+255),b
  3248  0006C4  0E7C               	movlw	high STR_17
  3249  0006C6  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3250  0006C8  C158  F09C         	movff	_lon,?_printf+2
  3251  0006CC  6B9D               	clrf	(?_printf+3)& (0+255),b
  3252  0006CE  C159  F09E         	movff	_lon+1,?_printf+4
  3253  0006D2  6B9F               	clrf	(?_printf+5)& (0+255),b
  3254  0006D4  C15A  F0A0         	movff	_lon+2,?_printf+6
  3255  0006D8  6BA1               	clrf	(?_printf+7)& (0+255),b
  3256  0006DA  C15B  F0A2         	movff	_lon+3,?_printf+8
  3257  0006DE  6BA3               	clrf	(?_printf+9)& (0+255),b
  3258  0006E0  C15C  F0A4         	movff	_lon+4,?_printf+10
  3259  0006E4  6BA5               	clrf	(?_printf+11)& (0+255),b
  3260  0006E6  C15E  F0A6         	movff	_lon+6,?_printf+12
  3261  0006EA  6BA7               	clrf	(?_printf+13)& (0+255),b
  3262  0006EC  C15F  F0A8         	movff	_lon+7,?_printf+14
  3263  0006F0  6BA9               	clrf	(?_printf+15)& (0+255),b
  3264  0006F2  C160  F0AA         	movff	_lon+8,?_printf+16
  3265  0006F6  6BAB               	clrf	(?_printf+17)& (0+255),b
  3266  0006F8  C163  F0AC         	movff	_lon+11,?_printf+18
  3267  0006FC  6BAD               	clrf	(?_printf+19)& (0+255),b
  3268  0006FE  ECD6  F02B         	call	_printf	;wreg free
  3269  000702                     
  3270                           ;main.c: 172:         printf("Altitude:  %s msnm\r\n",alt);
  3271  000702  0E19               	movlw	low STR_18
  3272  000704  0100               	movlb	0	; () banked
  3273  000706  6F9A               	movwf	printf@fmt& (0+255),b
  3274  000708  0E7E               	movlw	high STR_18
  3275  00070A  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3276  00070C  0E7D               	movlw	low _alt
  3277  00070E  6F9C               	movwf	(?_printf+2)& (0+255),b
  3278  000710  0E01               	movlw	high _alt
  3279  000712  6F9D               	movwf	(?_printf+3)& (0+255),b
  3280  000714  ECD6  F02B         	call	_printf	;wreg free
  3281  000718                     
  3282                           ;main.c: 174:         printf("Speed:     %s kn\r\n",speed);
  3283  000718  0E41               	movlw	low STR_19
  3284  00071A  0100               	movlb	0	; () banked
  3285  00071C  6F9A               	movwf	printf@fmt& (0+255),b
  3286  00071E  0E7E               	movlw	high STR_19
  3287  000720  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3288  000722  0E8F               	movlw	low _speed
  3289  000724  6F9C               	movwf	(?_printf+2)& (0+255),b
  3290  000726  0E01               	movlw	high _speed
  3291  000728  6F9D               	movwf	(?_printf+3)& (0+255),b
  3292  00072A  ECD6  F02B         	call	_printf	;wreg free
  3293  00072E                     
  3294                           ;main.c: 175:         printf("Course:    %s °\r\n",course);
  3295  00072E  0E66               	movlw	low STR_20
  3296  000730  0100               	movlb	0	; () banked
  3297  000732  6F9A               	movwf	printf@fmt& (0+255),b
  3298  000734  0E7E               	movlw	high STR_20
  3299  000736  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3300  000738  0E87               	movlw	low _course
  3301  00073A  6F9C               	movwf	(?_printf+2)& (0+255),b
  3302  00073C  0E01               	movlw	high _course
  3303  00073E  6F9D               	movwf	(?_printf+3)& (0+255),b
  3304  000740  ECD6  F02B         	call	_printf	;wreg free
  3305  000744                     
  3306                           ;main.c: 177:         printf("Satellites:%s units\r\n",satel);
  3307  000744  0EEE               	movlw	low STR_21
  3308  000746  0100               	movlb	0	; () banked
  3309  000748  6F9A               	movwf	printf@fmt& (0+255),b
  3310  00074A  0E7D               	movlw	high STR_21
  3311  00074C  6F9B               	movwf	(printf@fmt+1)& (0+255),b
  3312  00074E  0EA5               	movlw	low _satel
  3313  000750  6F9C               	movwf	(?_printf+2)& (0+255),b
  3314  000752  0E01               	movlw	high _satel
  3315  000754  6F9D               	movwf	(?_printf+3)& (0+255),b
  3316  000756  ECD6  F02B         	call	_printf	;wreg free
  3317  00075A                     
  3318                           ;main.c: 179:         if(boton == 1){
  3319  00075A  0100               	movlb	0	; () banked
  3320  00075C  05EE               	decf	_boton& (0+255),w,b
  3321  00075E  A4D8               	btfss	status,2,c
  3322  000760  EFB4  F003         	goto	u6571
  3323  000764  EFB6  F003         	goto	u6570
  3324  000768                     u6571:
  3325  000768  EF0E  F006         	goto	l6577
  3326  00076C                     u6570:
  3327  00076C                     
  3328                           ; BSR set to: 0
  3329                           ;main.c: 180:             memcpy(lcd_text, "Time(UTC):      ", 17);
  3330  00076C  0E46               	movlw	low _lcd_text
  3331  00076E  6E01               	movwf	memcpy@d1^0,c
  3332  000770  0E01               	movlw	high _lcd_text
  3333  000772  6E02               	movwf	(memcpy@d1+1)^0,c
  3334  000774  0ECD               	movlw	low STR_22
  3335  000776  6E03               	movwf	memcpy@s1^0,c
  3336  000778  0E7E               	movlw	high STR_22
  3337  00077A  6E04               	movwf	(memcpy@s1+1)^0,c
  3338  00077C  0E00               	movlw	0
  3339  00077E  6E06               	movwf	(memcpy@n+1)^0,c
  3340  000780  0E11               	movlw	17
  3341  000782  6E05               	movwf	memcpy@n^0,c
  3342  000784  EC2C  F02A         	call	_memcpy	;wreg free
  3343  000788                     
  3344                           ;main.c: 181:             LCD_Goto(1, 1);
  3345  000788  0E01               	movlw	1
  3346  00078A  6E06               	movwf	LCD_Goto@row^0,c
  3347  00078C  0E01               	movlw	1
  3348  00078E  EC79  F028         	call	_LCD_Goto
  3349  000792                     
  3350                           ;main.c: 182:             LCD_Print(lcd_text);
  3351  000792  0E46               	movlw	low _lcd_text
  3352  000794  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3353  000796  0E01               	movlw	high _lcd_text
  3354  000798  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3355  00079A  ECFA  F025         	call	_LCD_Print	;wreg free
  3356  00079E                     
  3357                           ;main.c: 183:             sprintf(lcd_text,"%c%c:%c%c:%c%c        ",time[0],time[1],time
      +                          [2],time[3],time[4],time[5]);
  3358  00079E  0E46               	movlw	low _lcd_text
  3359  0007A0  0100               	movlb	0	; () banked
  3360  0007A2  6F9A               	movwf	sprintf@s& (0+255),b
  3361  0007A4  0E01               	movlw	high _lcd_text
  3362  0007A6  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3363  0007A8  0ED7               	movlw	low STR_23
  3364  0007AA  6F9C               	movwf	sprintf@fmt& (0+255),b
  3365  0007AC  0E7D               	movlw	high STR_23
  3366  0007AE  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3367  0007B0  C171  F09E         	movff	_time,?_sprintf+4
  3368  0007B4  6B9F               	clrf	(?_sprintf+5)& (0+255),b
  3369  0007B6  C172  F0A0         	movff	_time+1,?_sprintf+6
  3370  0007BA  6BA1               	clrf	(?_sprintf+7)& (0+255),b
  3371  0007BC  C173  F0A2         	movff	_time+2,?_sprintf+8
  3372  0007C0  6BA3               	clrf	(?_sprintf+9)& (0+255),b
  3373  0007C2  C174  F0A4         	movff	_time+3,?_sprintf+10
  3374  0007C6  6BA5               	clrf	(?_sprintf+11)& (0+255),b
  3375  0007C8  C175  F0A6         	movff	_time+4,?_sprintf+12
  3376  0007CC  6BA7               	clrf	(?_sprintf+13)& (0+255),b
  3377  0007CE  C176  F0A8         	movff	_time+5,?_sprintf+14
  3378  0007D2  6BA9               	clrf	(?_sprintf+15)& (0+255),b
  3379  0007D4  ECDA  F029         	call	_sprintf	;wreg free
  3380  0007D8                     
  3381                           ;main.c: 184:             LCD_Goto(1, 2);
  3382  0007D8  0E02               	movlw	2
  3383  0007DA  6E06               	movwf	LCD_Goto@row^0,c
  3384  0007DC  0E01               	movlw	1
  3385  0007DE  EC79  F028         	call	_LCD_Goto
  3386  0007E2                     
  3387                           ;main.c: 185:             LCD_Print(lcd_text);
  3388  0007E2  0E46               	movlw	low _lcd_text
  3389  0007E4  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3390  0007E6  0E01               	movlw	high _lcd_text
  3391  0007E8  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3392  0007EA  ECFA  F025         	call	_LCD_Print	;wreg free
  3393  0007EE                     
  3394                           ;main.c: 186:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3395  0007EE  0E66               	movlw	102
  3396  0007F0  0100               	movlb	0	; () banked
  3397  0007F2  6FBE               	movwf	(??_main+1)& (0+255),b
  3398  0007F4  0E76               	movlw	118
  3399  0007F6  6FBD               	movwf	??_main& (0+255),b
  3400  0007F8  0EC1               	movlw	193
  3401  0007FA                     u6697:
  3402  0007FA  2EE8               	decfsz	wreg,f,c
  3403  0007FC  D7FE               	bra	u6697
  3404  0007FE  2FBD               	decfsz	??_main& (0+255),f,b
  3405  000800  D7FC               	bra	u6697
  3406  000802  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3407  000804  D7FA               	bra	u6697
  3408  000806                     
  3409                           ;main.c: 188:             memcpy(lcd_text, "Date:           ", 17);
  3410  000806  0E46               	movlw	low _lcd_text
  3411  000808  6E01               	movwf	memcpy@d1^0,c
  3412  00080A  0E01               	movlw	high _lcd_text
  3413  00080C  6E02               	movwf	(memcpy@d1+1)^0,c
  3414  00080E  0E89               	movlw	low STR_24
  3415  000810  6E03               	movwf	memcpy@s1^0,c
  3416  000812  0E7E               	movlw	high STR_24
  3417  000814  6E04               	movwf	(memcpy@s1+1)^0,c
  3418  000816  0E00               	movlw	0
  3419  000818  6E06               	movwf	(memcpy@n+1)^0,c
  3420  00081A  0E11               	movlw	17
  3421  00081C  6E05               	movwf	memcpy@n^0,c
  3422  00081E  EC2C  F02A         	call	_memcpy	;wreg free
  3423  000822                     
  3424                           ;main.c: 189:             LCD_Goto(1, 1);
  3425  000822  0E01               	movlw	1
  3426  000824  6E06               	movwf	LCD_Goto@row^0,c
  3427  000826  0E01               	movlw	1
  3428  000828  EC79  F028         	call	_LCD_Goto
  3429  00082C                     
  3430                           ;main.c: 190:             LCD_Print(lcd_text);
  3431  00082C  0E46               	movlw	low _lcd_text
  3432  00082E  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3433  000830  0E01               	movlw	high _lcd_text
  3434  000832  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3435  000834  ECFA  F025         	call	_LCD_Print	;wreg free
  3436  000838                     
  3437                           ;main.c: 191:             sprintf(lcd_text,"%c%c/%c%c/%c%c        ",date[0],date[1],date
      +                          [2],date[3],date[4],date[5]);
  3438  000838  0E46               	movlw	low _lcd_text
  3439  00083A  0100               	movlb	0	; () banked
  3440  00083C  6F9A               	movwf	sprintf@s& (0+255),b
  3441  00083E  0E01               	movlw	high _lcd_text
  3442  000840  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3443  000842  0EC0               	movlw	low STR_25
  3444  000844  6F9C               	movwf	sprintf@fmt& (0+255),b
  3445  000846  0E7D               	movlw	high STR_25
  3446  000848  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3447  00084A  C19E  F09E         	movff	_date,?_sprintf+4
  3448  00084E  6B9F               	clrf	(?_sprintf+5)& (0+255),b
  3449  000850  C19F  F0A0         	movff	_date+1,?_sprintf+6
  3450  000854  6BA1               	clrf	(?_sprintf+7)& (0+255),b
  3451  000856  C1A0  F0A2         	movff	_date+2,?_sprintf+8
  3452  00085A  6BA3               	clrf	(?_sprintf+9)& (0+255),b
  3453  00085C  C1A1  F0A4         	movff	_date+3,?_sprintf+10
  3454  000860  6BA5               	clrf	(?_sprintf+11)& (0+255),b
  3455  000862  C1A2  F0A6         	movff	_date+4,?_sprintf+12
  3456  000866  6BA7               	clrf	(?_sprintf+13)& (0+255),b
  3457  000868  C1A3  F0A8         	movff	_date+5,?_sprintf+14
  3458  00086C  6BA9               	clrf	(?_sprintf+15)& (0+255),b
  3459  00086E  ECDA  F029         	call	_sprintf	;wreg free
  3460  000872                     
  3461                           ;main.c: 192:             LCD_Goto(1, 2);
  3462  000872  0E02               	movlw	2
  3463  000874  6E06               	movwf	LCD_Goto@row^0,c
  3464  000876  0E01               	movlw	1
  3465  000878  EC79  F028         	call	_LCD_Goto
  3466  00087C                     
  3467                           ;main.c: 193:             LCD_Print(lcd_text);
  3468  00087C  0E46               	movlw	low _lcd_text
  3469  00087E  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3470  000880  0E01               	movlw	high _lcd_text
  3471  000882  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3472  000884  ECFA  F025         	call	_LCD_Print	;wreg free
  3473                           
  3474                           ;main.c: 194:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3475  000888  0E66               	movlw	102
  3476  00088A  0100               	movlb	0	; () banked
  3477  00088C  6FBE               	movwf	(??_main+1)& (0+255),b
  3478  00088E  0E76               	movlw	118
  3479  000890  6FBD               	movwf	??_main& (0+255),b
  3480  000892  0EC1               	movlw	193
  3481  000894                     u6707:
  3482  000894  2EE8               	decfsz	wreg,f,c
  3483  000896  D7FE               	bra	u6707
  3484  000898  2FBD               	decfsz	??_main& (0+255),f,b
  3485  00089A  D7FC               	bra	u6707
  3486  00089C  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3487  00089E  D7FA               	bra	u6707
  3488  0008A0                     
  3489                           ;main.c: 196:             memcpy(lcd_text, "Latitude:       ", 17);
  3490  0008A0  0E46               	movlw	low _lcd_text
  3491  0008A2  6E01               	movwf	memcpy@d1^0,c
  3492  0008A4  0E01               	movlw	high _lcd_text
  3493  0008A6  6E02               	movwf	(memcpy@d1+1)^0,c
  3494  0008A8  0EAB               	movlw	low STR_26
  3495  0008AA  6E03               	movwf	memcpy@s1^0,c
  3496  0008AC  0E7E               	movlw	high STR_26
  3497  0008AE  6E04               	movwf	(memcpy@s1+1)^0,c
  3498  0008B0  0E00               	movlw	0
  3499  0008B2  6E06               	movwf	(memcpy@n+1)^0,c
  3500  0008B4  0E11               	movlw	17
  3501  0008B6  6E05               	movwf	memcpy@n^0,c
  3502  0008B8  EC2C  F02A         	call	_memcpy	;wreg free
  3503  0008BC                     
  3504                           ;main.c: 197:             LCD_Goto(1, 1);
  3505  0008BC  0E01               	movlw	1
  3506  0008BE  6E06               	movwf	LCD_Goto@row^0,c
  3507  0008C0  0E01               	movlw	1
  3508  0008C2  EC79  F028         	call	_LCD_Goto
  3509  0008C6                     
  3510                           ;main.c: 198:             LCD_Print(lcd_text);
  3511  0008C6  0E46               	movlw	low _lcd_text
  3512  0008C8  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3513  0008CA  0E01               	movlw	high _lcd_text
  3514  0008CC  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3515  0008CE  ECFA  F025         	call	_LCD_Print	;wreg free
  3516  0008D2                     
  3517                           ;main.c: 199:             sprintf(lcd_text,"%c%c°%c%c.%c%c%c' %c    ",lat[0],lat[1],lat[
      +                          2],lat[3],lat[5],lat[6],lat[7],lat[10]);
  3518  0008D2  0E46               	movlw	low _lcd_text
  3519  0008D4  0100               	movlb	0	; () banked
  3520  0008D6  6F9A               	movwf	sprintf@s& (0+255),b
  3521  0008D8  0E01               	movlw	high _lcd_text
  3522  0008DA  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3523  0008DC  0EA7               	movlw	low STR_27
  3524  0008DE  6F9C               	movwf	sprintf@fmt& (0+255),b
  3525  0008E0  0E7D               	movlw	high STR_27
  3526  0008E2  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3527  0008E4  C165  F09E         	movff	_lat,?_sprintf+4
  3528  0008E8  6B9F               	clrf	(?_sprintf+5)& (0+255),b
  3529  0008EA  C166  F0A0         	movff	_lat+1,?_sprintf+6
  3530  0008EE  6BA1               	clrf	(?_sprintf+7)& (0+255),b
  3531  0008F0  C167  F0A2         	movff	_lat+2,?_sprintf+8
  3532  0008F4  6BA3               	clrf	(?_sprintf+9)& (0+255),b
  3533  0008F6  C168  F0A4         	movff	_lat+3,?_sprintf+10
  3534  0008FA  6BA5               	clrf	(?_sprintf+11)& (0+255),b
  3535  0008FC  C16A  F0A6         	movff	_lat+5,?_sprintf+12
  3536  000900  6BA7               	clrf	(?_sprintf+13)& (0+255),b
  3537  000902  C16B  F0A8         	movff	_lat+6,?_sprintf+14
  3538  000906  6BA9               	clrf	(?_sprintf+15)& (0+255),b
  3539  000908  C16C  F0AA         	movff	_lat+7,?_sprintf+16
  3540  00090C  6BAB               	clrf	(?_sprintf+17)& (0+255),b
  3541  00090E  C16F  F0AC         	movff	_lat+10,?_sprintf+18
  3542  000912  6BAD               	clrf	(?_sprintf+19)& (0+255),b
  3543  000914  ECDA  F029         	call	_sprintf	;wreg free
  3544  000918                     
  3545                           ;main.c: 200:             LCD_Goto(1, 2);
  3546  000918  0E02               	movlw	2
  3547  00091A  6E06               	movwf	LCD_Goto@row^0,c
  3548  00091C  0E01               	movlw	1
  3549  00091E  EC79  F028         	call	_LCD_Goto
  3550  000922                     
  3551                           ;main.c: 201:             LCD_Print(lcd_text);
  3552  000922  0E46               	movlw	low _lcd_text
  3553  000924  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3554  000926  0E01               	movlw	high _lcd_text
  3555  000928  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3556  00092A  ECFA  F025         	call	_LCD_Print	;wreg free
  3557  00092E                     
  3558                           ;main.c: 202:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3559  00092E  0E66               	movlw	102
  3560  000930  0100               	movlb	0	; () banked
  3561  000932  6FBE               	movwf	(??_main+1)& (0+255),b
  3562  000934  0E76               	movlw	118
  3563  000936  6FBD               	movwf	??_main& (0+255),b
  3564  000938  0EC1               	movlw	193
  3565  00093A                     u6717:
  3566  00093A  2EE8               	decfsz	wreg,f,c
  3567  00093C  D7FE               	bra	u6717
  3568  00093E  2FBD               	decfsz	??_main& (0+255),f,b
  3569  000940  D7FC               	bra	u6717
  3570  000942  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3571  000944  D7FA               	bra	u6717
  3572  000946                     
  3573                           ;main.c: 204:             memcpy(lcd_text, "Longitude:      ", 17);
  3574  000946  0E46               	movlw	low _lcd_text
  3575  000948  6E01               	movwf	memcpy@d1^0,c
  3576  00094A  0E01               	movlw	high _lcd_text
  3577  00094C  6E02               	movwf	(memcpy@d1+1)^0,c
  3578  00094E  0EDE               	movlw	low STR_28
  3579  000950  6E03               	movwf	memcpy@s1^0,c
  3580  000952  0E7E               	movlw	high STR_28
  3581  000954  6E04               	movwf	(memcpy@s1+1)^0,c
  3582  000956  0E00               	movlw	0
  3583  000958  6E06               	movwf	(memcpy@n+1)^0,c
  3584  00095A  0E11               	movlw	17
  3585  00095C  6E05               	movwf	memcpy@n^0,c
  3586  00095E  EC2C  F02A         	call	_memcpy	;wreg free
  3587  000962                     
  3588                           ;main.c: 205:             LCD_Goto(1, 1);
  3589  000962  0E01               	movlw	1
  3590  000964  6E06               	movwf	LCD_Goto@row^0,c
  3591  000966  0E01               	movlw	1
  3592  000968  EC79  F028         	call	_LCD_Goto
  3593  00096C                     
  3594                           ;main.c: 206:             LCD_Print(lcd_text);
  3595  00096C  0E46               	movlw	low _lcd_text
  3596  00096E  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3597  000970  0E01               	movlw	high _lcd_text
  3598  000972  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3599  000974  ECFA  F025         	call	_LCD_Print	;wreg free
  3600  000978                     
  3601                           ;main.c: 207:             sprintf(lcd_text,"%c%c%c°%c%c.%c%c%c' %c   ",lon[0],lon[1],lon
      +                          [2],lon[3],lon[4],lon[6],lon[7],lon[8],lon[11]);
  3602  000978  0E46               	movlw	low _lcd_text
  3603  00097A  0100               	movlb	0	; () banked
  3604  00097C  6F9A               	movwf	sprintf@s& (0+255),b
  3605  00097E  0E01               	movlw	high _lcd_text
  3606  000980  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3607  000982  0E8D               	movlw	low STR_29
  3608  000984  6F9C               	movwf	sprintf@fmt& (0+255),b
  3609  000986  0E7D               	movlw	high STR_29
  3610  000988  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3611  00098A  C158  F09E         	movff	_lon,?_sprintf+4
  3612  00098E  6B9F               	clrf	(?_sprintf+5)& (0+255),b
  3613  000990  C159  F0A0         	movff	_lon+1,?_sprintf+6
  3614  000994  6BA1               	clrf	(?_sprintf+7)& (0+255),b
  3615  000996  C15A  F0A2         	movff	_lon+2,?_sprintf+8
  3616  00099A  6BA3               	clrf	(?_sprintf+9)& (0+255),b
  3617  00099C  C15B  F0A4         	movff	_lon+3,?_sprintf+10
  3618  0009A0  6BA5               	clrf	(?_sprintf+11)& (0+255),b
  3619  0009A2  C15C  F0A6         	movff	_lon+4,?_sprintf+12
  3620  0009A6  6BA7               	clrf	(?_sprintf+13)& (0+255),b
  3621  0009A8  C15E  F0A8         	movff	_lon+6,?_sprintf+14
  3622  0009AC  6BA9               	clrf	(?_sprintf+15)& (0+255),b
  3623  0009AE  C15F  F0AA         	movff	_lon+7,?_sprintf+16
  3624  0009B2  6BAB               	clrf	(?_sprintf+17)& (0+255),b
  3625  0009B4  C160  F0AC         	movff	_lon+8,?_sprintf+18
  3626  0009B8  6BAD               	clrf	(?_sprintf+19)& (0+255),b
  3627  0009BA  C163  F0AE         	movff	_lon+11,?_sprintf+20
  3628  0009BE  6BAF               	clrf	(?_sprintf+21)& (0+255),b
  3629  0009C0  ECDA  F029         	call	_sprintf	;wreg free
  3630  0009C4                     
  3631                           ;main.c: 208:             LCD_Goto(1, 2);
  3632  0009C4  0E02               	movlw	2
  3633  0009C6  6E06               	movwf	LCD_Goto@row^0,c
  3634  0009C8  0E01               	movlw	1
  3635  0009CA  EC79  F028         	call	_LCD_Goto
  3636                           
  3637                           ;main.c: 209:             LCD_Print(lcd_text);
  3638  0009CE  0E46               	movlw	low _lcd_text
  3639  0009D0  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3640  0009D2  0E01               	movlw	high _lcd_text
  3641  0009D4  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3642  0009D6  ECFA  F025         	call	_LCD_Print	;wreg free
  3643  0009DA                     
  3644                           ;main.c: 210:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3645  0009DA  0E66               	movlw	102
  3646  0009DC  0100               	movlb	0	; () banked
  3647  0009DE  6FBE               	movwf	(??_main+1)& (0+255),b
  3648  0009E0  0E76               	movlw	118
  3649  0009E2  6FBD               	movwf	??_main& (0+255),b
  3650  0009E4  0EC1               	movlw	193
  3651  0009E6                     u6727:
  3652  0009E6  2EE8               	decfsz	wreg,f,c
  3653  0009E8  D7FE               	bra	u6727
  3654  0009EA  2FBD               	decfsz	??_main& (0+255),f,b
  3655  0009EC  D7FC               	bra	u6727
  3656  0009EE  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3657  0009F0  D7FA               	bra	u6727
  3658  0009F2                     
  3659                           ;main.c: 212:             memcpy(lcd_text, "Altitude:       ", 17);
  3660  0009F2  0E46               	movlw	low _lcd_text
  3661  0009F4  6E01               	movwf	memcpy@d1^0,c
  3662  0009F6  0E01               	movlw	high _lcd_text
  3663  0009F8  6E02               	movwf	(memcpy@d1+1)^0,c
  3664  0009FA  0EBC               	movlw	low STR_30
  3665  0009FC  6E03               	movwf	memcpy@s1^0,c
  3666  0009FE  0E7E               	movlw	high STR_30
  3667  000A00  6E04               	movwf	(memcpy@s1+1)^0,c
  3668  000A02  0E00               	movlw	0
  3669  000A04  6E06               	movwf	(memcpy@n+1)^0,c
  3670  000A06  0E11               	movlw	17
  3671  000A08  6E05               	movwf	memcpy@n^0,c
  3672  000A0A  EC2C  F02A         	call	_memcpy	;wreg free
  3673  000A0E                     
  3674                           ;main.c: 213:             LCD_Goto(1, 1);
  3675  000A0E  0E01               	movlw	1
  3676  000A10  6E06               	movwf	LCD_Goto@row^0,c
  3677  000A12  0E01               	movlw	1
  3678  000A14  EC79  F028         	call	_LCD_Goto
  3679  000A18                     
  3680                           ;main.c: 214:             LCD_Print(lcd_text);
  3681  000A18  0E46               	movlw	low _lcd_text
  3682  000A1A  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3683  000A1C  0E01               	movlw	high _lcd_text
  3684  000A1E  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3685  000A20  ECFA  F025         	call	_LCD_Print	;wreg free
  3686  000A24                     
  3687                           ;main.c: 215:             sprintf(lcd_text,"%s msnm  ",alt);
  3688  000A24  0E46               	movlw	low _lcd_text
  3689  000A26  0100               	movlb	0	; () banked
  3690  000A28  6F9A               	movwf	sprintf@s& (0+255),b
  3691  000A2A  0E01               	movlw	high _lcd_text
  3692  000A2C  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3693  000A2E  0ED5               	movlw	low STR_31
  3694  000A30  6F9C               	movwf	sprintf@fmt& (0+255),b
  3695  000A32  0E7F               	movlw	high STR_31
  3696  000A34  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3697  000A36  0E7D               	movlw	low _alt
  3698  000A38  6F9E               	movwf	(?_sprintf+4)& (0+255),b
  3699  000A3A  0E01               	movlw	high _alt
  3700  000A3C  6F9F               	movwf	(?_sprintf+5)& (0+255),b
  3701  000A3E  ECDA  F029         	call	_sprintf	;wreg free
  3702  000A42                     
  3703                           ;main.c: 216:             LCD_Goto(1, 2);
  3704  000A42  0E02               	movlw	2
  3705  000A44  6E06               	movwf	LCD_Goto@row^0,c
  3706  000A46  0E01               	movlw	1
  3707  000A48  EC79  F028         	call	_LCD_Goto
  3708  000A4C                     
  3709                           ;main.c: 217:             LCD_Print(lcd_text);
  3710  000A4C  0E46               	movlw	low _lcd_text
  3711  000A4E  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3712  000A50  0E01               	movlw	high _lcd_text
  3713  000A52  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3714  000A54  ECFA  F025         	call	_LCD_Print	;wreg free
  3715  000A58                     
  3716                           ;main.c: 218:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3717  000A58  0E66               	movlw	102
  3718  000A5A  0100               	movlb	0	; () banked
  3719  000A5C  6FBE               	movwf	(??_main+1)& (0+255),b
  3720  000A5E  0E76               	movlw	118
  3721  000A60  6FBD               	movwf	??_main& (0+255),b
  3722  000A62  0EC1               	movlw	193
  3723  000A64                     u6737:
  3724  000A64  2EE8               	decfsz	wreg,f,c
  3725  000A66  D7FE               	bra	u6737
  3726  000A68  2FBD               	decfsz	??_main& (0+255),f,b
  3727  000A6A  D7FC               	bra	u6737
  3728  000A6C  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3729  000A6E  D7FA               	bra	u6737
  3730  000A70                     
  3731                           ;main.c: 220:             memcpy(lcd_text, "Speed:          ", 17);
  3732  000A70  0E46               	movlw	low _lcd_text
  3733  000A72  6E01               	movwf	memcpy@d1^0,c
  3734  000A74  0E01               	movlw	high _lcd_text
  3735  000A76  6E02               	movwf	(memcpy@d1+1)^0,c
  3736  000A78  0E9A               	movlw	low STR_32
  3737  000A7A  6E03               	movwf	memcpy@s1^0,c
  3738  000A7C  0E7E               	movlw	high STR_32
  3739  000A7E  6E04               	movwf	(memcpy@s1+1)^0,c
  3740  000A80  0E00               	movlw	0
  3741  000A82  6E06               	movwf	(memcpy@n+1)^0,c
  3742  000A84  0E11               	movlw	17
  3743  000A86  6E05               	movwf	memcpy@n^0,c
  3744  000A88  EC2C  F02A         	call	_memcpy	;wreg free
  3745  000A8C                     
  3746                           ;main.c: 221:             LCD_Goto(1, 1);
  3747  000A8C  0E01               	movlw	1
  3748  000A8E  6E06               	movwf	LCD_Goto@row^0,c
  3749  000A90  0E01               	movlw	1
  3750  000A92  EC79  F028         	call	_LCD_Goto
  3751  000A96                     
  3752                           ;main.c: 222:             LCD_Print(lcd_text);
  3753  000A96  0E46               	movlw	low _lcd_text
  3754  000A98  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3755  000A9A  0E01               	movlw	high _lcd_text
  3756  000A9C  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3757  000A9E  ECFA  F025         	call	_LCD_Print	;wreg free
  3758  000AA2                     
  3759                           ;main.c: 223:             sprintf(lcd_text,"%s kn      ",speed);
  3760  000AA2  0E46               	movlw	low _lcd_text
  3761  000AA4  0100               	movlb	0	; () banked
  3762  000AA6  6F9A               	movwf	sprintf@s& (0+255),b
  3763  000AA8  0E01               	movlw	high _lcd_text
  3764  000AAA  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3765  000AAC  0EB2               	movlw	low STR_33
  3766  000AAE  6F9C               	movwf	sprintf@fmt& (0+255),b
  3767  000AB0  0E7F               	movlw	high STR_33
  3768  000AB2  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3769  000AB4  0E8F               	movlw	low _speed
  3770  000AB6  6F9E               	movwf	(?_sprintf+4)& (0+255),b
  3771  000AB8  0E01               	movlw	high _speed
  3772  000ABA  6F9F               	movwf	(?_sprintf+5)& (0+255),b
  3773  000ABC  ECDA  F029         	call	_sprintf	;wreg free
  3774                           
  3775                           ;main.c: 224:             LCD_Goto(1, 2);
  3776  000AC0  0E02               	movlw	2
  3777  000AC2  6E06               	movwf	LCD_Goto@row^0,c
  3778  000AC4  0E01               	movlw	1
  3779  000AC6  EC79  F028         	call	_LCD_Goto
  3780  000ACA                     
  3781                           ;main.c: 225:             LCD_Print(lcd_text);
  3782  000ACA  0E46               	movlw	low _lcd_text
  3783  000ACC  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3784  000ACE  0E01               	movlw	high _lcd_text
  3785  000AD0  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3786  000AD2  ECFA  F025         	call	_LCD_Print	;wreg free
  3787  000AD6                     
  3788                           ;main.c: 226:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3789  000AD6  0E66               	movlw	102
  3790  000AD8  0100               	movlb	0	; () banked
  3791  000ADA  6FBE               	movwf	(??_main+1)& (0+255),b
  3792  000ADC  0E76               	movlw	118
  3793  000ADE  6FBD               	movwf	??_main& (0+255),b
  3794  000AE0  0EC1               	movlw	193
  3795  000AE2                     u6747:
  3796  000AE2  2EE8               	decfsz	wreg,f,c
  3797  000AE4  D7FE               	bra	u6747
  3798  000AE6  2FBD               	decfsz	??_main& (0+255),f,b
  3799  000AE8  D7FC               	bra	u6747
  3800  000AEA  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3801  000AEC  D7FA               	bra	u6747
  3802  000AEE                     
  3803                           ;main.c: 228:             memcpy(lcd_text, "Course:", 17);
  3804  000AEE  0E46               	movlw	low _lcd_text
  3805  000AF0  6E01               	movwf	memcpy@d1^0,c
  3806  000AF2  0E01               	movlw	high _lcd_text
  3807  000AF4  6E02               	movwf	(memcpy@d1+1)^0,c
  3808  000AF6  0EDF               	movlw	low STR_34
  3809  000AF8  6E03               	movwf	memcpy@s1^0,c
  3810  000AFA  0E7F               	movlw	high STR_34
  3811  000AFC  6E04               	movwf	(memcpy@s1+1)^0,c
  3812  000AFE  0E00               	movlw	0
  3813  000B00  6E06               	movwf	(memcpy@n+1)^0,c
  3814  000B02  0E11               	movlw	17
  3815  000B04  6E05               	movwf	memcpy@n^0,c
  3816  000B06  EC2C  F02A         	call	_memcpy	;wreg free
  3817  000B0A                     
  3818                           ;main.c: 229:             LCD_Goto(1, 1);
  3819  000B0A  0E01               	movlw	1
  3820  000B0C  6E06               	movwf	LCD_Goto@row^0,c
  3821  000B0E  0E01               	movlw	1
  3822  000B10  EC79  F028         	call	_LCD_Goto
  3823  000B14                     
  3824                           ;main.c: 230:             LCD_Print(lcd_text);
  3825  000B14  0E46               	movlw	low _lcd_text
  3826  000B16  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3827  000B18  0E01               	movlw	high _lcd_text
  3828  000B1A  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3829  000B1C  ECFA  F025         	call	_LCD_Print	;wreg free
  3830  000B20                     
  3831                           ;main.c: 231:             sprintf(lcd_text,"%s degrees ",course);
  3832  000B20  0E46               	movlw	low _lcd_text
  3833  000B22  0100               	movlb	0	; () banked
  3834  000B24  6F9A               	movwf	sprintf@s& (0+255),b
  3835  000B26  0E01               	movlw	high _lcd_text
  3836  000B28  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3837  000B2A  0EBE               	movlw	low STR_35
  3838  000B2C  6F9C               	movwf	sprintf@fmt& (0+255),b
  3839  000B2E  0E7F               	movlw	high STR_35
  3840  000B30  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3841  000B32  0E87               	movlw	low _course
  3842  000B34  6F9E               	movwf	(?_sprintf+4)& (0+255),b
  3843  000B36  0E01               	movlw	high _course
  3844  000B38  6F9F               	movwf	(?_sprintf+5)& (0+255),b
  3845  000B3A  ECDA  F029         	call	_sprintf	;wreg free
  3846  000B3E                     
  3847                           ;main.c: 232:             LCD_Goto(1, 2);
  3848  000B3E  0E02               	movlw	2
  3849  000B40  6E06               	movwf	LCD_Goto@row^0,c
  3850  000B42  0E01               	movlw	1
  3851  000B44  EC79  F028         	call	_LCD_Goto
  3852  000B48                     
  3853                           ;main.c: 233:             LCD_Print(lcd_text);
  3854  000B48  0E46               	movlw	low _lcd_text
  3855  000B4A  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3856  000B4C  0E01               	movlw	high _lcd_text
  3857  000B4E  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3858  000B50  ECFA  F025         	call	_LCD_Print	;wreg free
  3859  000B54                     
  3860                           ;main.c: 234:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3861  000B54  0E66               	movlw	102
  3862  000B56  0100               	movlb	0	; () banked
  3863  000B58  6FBE               	movwf	(??_main+1)& (0+255),b
  3864  000B5A  0E76               	movlw	118
  3865  000B5C  6FBD               	movwf	??_main& (0+255),b
  3866  000B5E  0EC1               	movlw	193
  3867  000B60                     u6757:
  3868  000B60  2EE8               	decfsz	wreg,f,c
  3869  000B62  D7FE               	bra	u6757
  3870  000B64  2FBD               	decfsz	??_main& (0+255),f,b
  3871  000B66  D7FC               	bra	u6757
  3872  000B68  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3873  000B6A  D7FA               	bra	u6757
  3874  000B6C                     
  3875                           ;main.c: 236:             memcpy(lcd_text, "Satellites:     ", 17);
  3876  000B6C  0E46               	movlw	low _lcd_text
  3877  000B6E  6E01               	movwf	memcpy@d1^0,c
  3878  000B70  0E01               	movlw	high _lcd_text
  3879  000B72  6E02               	movwf	(memcpy@d1+1)^0,c
  3880  000B74  0EEF               	movlw	low STR_36
  3881  000B76  6E03               	movwf	memcpy@s1^0,c
  3882  000B78  0E7E               	movlw	high STR_36
  3883  000B7A  6E04               	movwf	(memcpy@s1+1)^0,c
  3884  000B7C  0E00               	movlw	0
  3885  000B7E  6E06               	movwf	(memcpy@n+1)^0,c
  3886  000B80  0E11               	movlw	17
  3887  000B82  6E05               	movwf	memcpy@n^0,c
  3888  000B84  EC2C  F02A         	call	_memcpy	;wreg free
  3889  000B88                     
  3890                           ;main.c: 237:             LCD_Goto(1, 1);
  3891  000B88  0E01               	movlw	1
  3892  000B8A  6E06               	movwf	LCD_Goto@row^0,c
  3893  000B8C  0E01               	movlw	1
  3894  000B8E  EC79  F028         	call	_LCD_Goto
  3895  000B92                     
  3896                           ;main.c: 238:             LCD_Print(lcd_text);
  3897  000B92  0E46               	movlw	low _lcd_text
  3898  000B94  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3899  000B96  0E01               	movlw	high _lcd_text
  3900  000B98  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3901  000B9A  ECFA  F025         	call	_LCD_Print	;wreg free
  3902                           
  3903                           ;main.c: 239:             sprintf(lcd_text,"%s units       ",satel);
  3904  000B9E  0E46               	movlw	low _lcd_text
  3905  000BA0  0100               	movlb	0	; () banked
  3906  000BA2  6F9A               	movwf	sprintf@s& (0+255),b
  3907  000BA4  0E01               	movlw	high _lcd_text
  3908  000BA6  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  3909  000BA8  0E88               	movlw	low STR_37
  3910  000BAA  6F9C               	movwf	sprintf@fmt& (0+255),b
  3911  000BAC  0E7F               	movlw	high STR_37
  3912  000BAE  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  3913  000BB0  0EA5               	movlw	low _satel
  3914  000BB2  6F9E               	movwf	(?_sprintf+4)& (0+255),b
  3915  000BB4  0E01               	movlw	high _satel
  3916  000BB6  6F9F               	movwf	(?_sprintf+5)& (0+255),b
  3917  000BB8  ECDA  F029         	call	_sprintf	;wreg free
  3918  000BBC                     
  3919                           ;main.c: 240:             LCD_Goto(1, 2);
  3920  000BBC  0E02               	movlw	2
  3921  000BBE  6E06               	movwf	LCD_Goto@row^0,c
  3922  000BC0  0E01               	movlw	1
  3923  000BC2  EC79  F028         	call	_LCD_Goto
  3924  000BC6                     
  3925                           ;main.c: 241:             LCD_Print(lcd_text);
  3926  000BC6  0E46               	movlw	low _lcd_text
  3927  000BC8  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3928  000BCA  0E01               	movlw	high _lcd_text
  3929  000BCC  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3930  000BCE  ECFA  F025         	call	_LCD_Print	;wreg free
  3931  000BD2                     
  3932                           ;main.c: 242:             _delay((unsigned long)((4000)*(20000000L/4000.0)));
  3933  000BD2  0E66               	movlw	102
  3934  000BD4  0100               	movlb	0	; () banked
  3935  000BD6  6FBE               	movwf	(??_main+1)& (0+255),b
  3936  000BD8  0E76               	movlw	118
  3937  000BDA  6FBD               	movwf	??_main& (0+255),b
  3938  000BDC  0EC1               	movlw	193
  3939  000BDE                     u6767:
  3940  000BDE  2EE8               	decfsz	wreg,f,c
  3941  000BE0  D7FE               	bra	u6767
  3942  000BE2  2FBD               	decfsz	??_main& (0+255),f,b
  3943  000BE4  D7FC               	bra	u6767
  3944  000BE6  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  3945  000BE8  D7FA               	bra	u6767
  3946  000BEA                     
  3947                           ;main.c: 244:             LCD_Goto(1, 1);
  3948  000BEA  0E01               	movlw	1
  3949  000BEC  6E06               	movwf	LCD_Goto@row^0,c
  3950  000BEE  0E01               	movlw	1
  3951  000BF0  EC79  F028         	call	_LCD_Goto
  3952  000BF4                     
  3953                           ;main.c: 245:             LCD_Print("                ");
  3954  000BF4  0E78               	movlw	low STR_38
  3955  000BF6  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3956  000BF8  0E7E               	movlw	high STR_38
  3957  000BFA  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3958  000BFC  ECFA  F025         	call	_LCD_Print	;wreg free
  3959  000C00                     
  3960                           ;main.c: 246:             LCD_Goto(1, 2);
  3961  000C00  0E02               	movlw	2
  3962  000C02  6E06               	movwf	LCD_Goto@row^0,c
  3963  000C04  0E01               	movlw	1
  3964  000C06  EC79  F028         	call	_LCD_Goto
  3965  000C0A                     
  3966                           ;main.c: 247:             LCD_Print("                ");
  3967  000C0A  0E78               	movlw	low STR_38
  3968  000C0C  6E04               	movwf	LCD_Print@LCD_Str^0,c
  3969  000C0E  0E7E               	movlw	high STR_38
  3970  000C10  6E05               	movwf	(LCD_Print@LCD_Str+1)^0,c
  3971  000C12  ECFA  F025         	call	_LCD_Print	;wreg free
  3972  000C16                     
  3973                           ;main.c: 249:             boton = 0;
  3974  000C16  0E00               	movlw	0
  3975  000C18  0100               	movlb	0	; () banked
  3976  000C1A  6FEE               	movwf	_boton& (0+255),b
  3977  000C1C                     l6577:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 253:         UART_Print("\r\n\r\n");
  3981  000C1C  0E14               	movlw	low (STR_5+16)
  3982  000C1E  6E02               	movwf	UART_Print@data^0,c
  3983  000C20  0E7E               	movlw	high (STR_5+16)
  3984  000C22  6E03               	movwf	(UART_Print@data+1)^0,c
  3985  000C24  EC98  F027         	call	_UART_Print	;wreg free
  3986  000C28                     
  3987                           ;main.c: 254:         _delay((unsigned long)((5000)*(20000000L/4000.0)));
  3988  000C28  0E7F               	movlw	127
  3989  000C2A  0100               	movlb	0	; () banked
  3990  000C2C  6FBE               	movwf	(??_main+1)& (0+255),b
  3991  000C2E  0ED4               	movlw	212
  3992  000C30  6FBD               	movwf	??_main& (0+255),b
  3993  000C32  0E31               	movlw	49
  3994  000C34                     u6777:
  3995  000C34  2EE8               	decfsz	wreg,f,c
  3996  000C36  D7FE               	bra	u6777
  3997  000C38  2FBD               	decfsz	??_main& (0+255),f,b
  3998  000C3A  D7FC               	bra	u6777
  3999  000C3C  2FBE               	decfsz	(??_main+1)& (0+255),f,b
  4000  000C3E  D7FA               	bra	u6777
  4001  000C40  D000               	nop2	
  4002  000C42  EFDE  F000         	goto	l6335
  4003  000C46  EF07  F000         	goto	start
  4004  000C4A                     __end_of_main:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _sprintf *****************
  4008 ;; Defined at:
  4009 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  s               2   58[BANK0 ] PTR unsigned char 
  4012 ;;		 -> lcd_text(18), 
  4013 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  4014 ;;		 -> STR_37(16), STR_35(12), STR_33(12), STR_31(10), 
  4015 ;;		 -> STR_29(26), STR_27(25), STR_25(23), STR_23(23), 
  4016 ;;		 -> STR_12(14), 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  f              11   82[BANK0 ] struct _IO_FILE
  4019 ;;  ap              2   80[BANK0 ] PTR void [1]
  4020 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4021 ;;  ret             2    0        int 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2   58[BANK0 ] int 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4031 ;;      Params:         0      22       0       0       0       0       0       0       0
  4032 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4034 ;;      Totals:         0      35       0       0       0       0       0       0       0
  4035 ;;Total ram usage:       35 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 8
  4038 ;; This function calls:
  4039 ;;		_vfprintf
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text1
  4046  0053B4                     __ptext1:
  4047                           	callstack 0
  4048  0053B4                     _sprintf:
  4049                           	callstack 22
  4050  0053B4  0E9E               	movlw	low (?_sprintf+4)
  4051  0053B6  0100               	movlb	0	; () banked
  4052  0053B8  6FB0               	movwf	sprintf@ap& (0+255),b
  4053  0053BA  0E00               	movlw	high (?_sprintf+4)
  4054  0053BC  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  4055  0053BE  C09A  F0B2         	movff	sprintf@s,sprintf@f
  4056  0053C2  C09B  F0B3         	movff	sprintf@s+1,sprintf@f+1
  4057  0053C6                     
  4058                           ; BSR set to: 0
  4059  0053C6  0E00               	movlw	0
  4060  0053C8  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  4061  0053CA  0E00               	movlw	0
  4062  0053CC  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  4063  0053CE                     
  4064                           ; BSR set to: 0
  4065  0053CE  0E00               	movlw	0
  4066  0053D0  6FBC               	movwf	(sprintf@f+10)& (0+255),b
  4067  0053D2  0E00               	movlw	0
  4068  0053D4  6FBB               	movwf	(sprintf@f+9)& (0+255),b
  4069  0053D6                     
  4070                           ; BSR set to: 0
  4071  0053D6  0EB2               	movlw	low sprintf@f
  4072  0053D8  6F92               	movwf	vfprintf@fp& (0+255),b
  4073  0053DA  0E00               	movlw	high sprintf@f
  4074  0053DC  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  4075  0053DE  C09C  F094         	movff	sprintf@fmt,vfprintf@fmt
  4076  0053E2  C09D  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4077  0053E6  0EB0               	movlw	low sprintf@ap
  4078  0053E8  6F96               	movwf	vfprintf@ap& (0+255),b
  4079  0053EA  0E00               	movlw	high sprintf@ap
  4080  0053EC  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  4081  0053EE  EC7B  F029         	call	_vfprintf	;wreg free
  4082  0053F2  0100               	movlb	0	; () banked
  4083  0053F4  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  4084  0053F6  259A               	addwf	sprintf@s& (0+255),w,b
  4085  0053F8  6ED9               	movwf	fsr2l,c
  4086  0053FA  51B6               	movf	(sprintf@f+4)& (0+255),w,b
  4087  0053FC  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
  4088  0053FE  6EDA               	movwf	fsr2h,c
  4089  005400  0E00               	movlw	0
  4090  005402  6EDF               	movwf	indf2,c
  4091  005404                     
  4092                           ; BSR set to: 0
  4093  005404  0012               	return		;funcret
  4094  005406                     __end_of_sprintf:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _printf *****************
  4098 ;; Defined at:
  4099 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  4102 ;;		 -> STR_21(22), STR_20(18), STR_19(19), STR_18(21), 
  4103 ;;		 -> STR_17(36), STR_16(34), STR_15(28), STR_14(28), 
  4104 ;;		 -> STR_11(11), STR_1(17), 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  ap              2   78[BANK0 ] PTR void [1]
  4107 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4108 ;;  ret             2    0        int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2   58[BANK0 ] int 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         0      20       0       0       0       0       0       0       0
  4119 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         0      22       0       0       0       0       0       0       0
  4122 ;;Total ram usage:       22 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 8
  4125 ;; This function calls:
  4126 ;;		_vfprintf
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text2
  4133  0057AC                     __ptext2:
  4134                           	callstack 0
  4135  0057AC                     _printf:
  4136                           	callstack 22
  4137  0057AC  0E9C               	movlw	low (?_printf+2)
  4138  0057AE  0100               	movlb	0	; () banked
  4139  0057B0  6FAE               	movwf	printf@ap& (0+255),b
  4140  0057B2  0E00               	movlw	high (?_printf+2)
  4141  0057B4  6FAF               	movwf	(printf@ap+1)& (0+255),b
  4142  0057B6                     
  4143                           ; BSR set to: 0
  4144  0057B6  0E00               	movlw	0
  4145  0057B8  6F92               	movwf	vfprintf@fp& (0+255),b
  4146  0057BA  0E00               	movlw	0
  4147  0057BC  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  4148  0057BE  C09A  F094         	movff	printf@fmt,vfprintf@fmt
  4149  0057C2  C09B  F095         	movff	printf@fmt+1,vfprintf@fmt+1
  4150  0057C6  0EAE               	movlw	low printf@ap
  4151  0057C8  6F96               	movwf	vfprintf@ap& (0+255),b
  4152  0057CA  0E00               	movlw	high printf@ap
  4153  0057CC  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  4154  0057CE  EC7B  F029         	call	_vfprintf	;wreg free
  4155  0057D2  0012               	return		;funcret
  4156  0057D4                     __end_of_printf:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _vfprintf *****************
  4160 ;; Defined at:
  4161 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  4164 ;;		 -> NULL(0), sprintf@f(11), 
  4165 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  4166 ;;		 -> STR_37(16), STR_35(12), STR_33(12), STR_31(10), 
  4167 ;;		 -> STR_29(26), STR_27(25), STR_25(23), STR_23(23), 
  4168 ;;		 -> STR_21(22), STR_20(18), STR_19(19), STR_18(21), 
  4169 ;;		 -> STR_17(36), STR_16(34), STR_15(28), STR_14(28), 
  4170 ;;		 -> STR_12(14), STR_11(11), STR_1(17), 
  4171 ;;  ap              2   54[BANK0 ] PTR PTR void 
  4172 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  cfmt            2   56[BANK0 ] PTR unsigned char 
  4175 ;;		 -> STR_37(16), STR_35(12), STR_33(12), STR_31(10), 
  4176 ;;		 -> STR_29(26), STR_27(25), STR_25(23), STR_23(23), 
  4177 ;;		 -> STR_21(22), STR_20(18), STR_19(19), STR_18(21), 
  4178 ;;		 -> STR_17(36), STR_16(34), STR_15(28), STR_14(28), 
  4179 ;;		 -> STR_12(14), STR_11(11), STR_1(17), 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2   50[BANK0 ] int 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4189 ;;      Params:         0       6       0       0       0       0       0       0       0
  4190 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4192 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4193 ;;Total ram usage:        8 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 7
  4196 ;; This function calls:
  4197 ;;		_vfpfcnvrt
  4198 ;; This function is called by:
  4199 ;;		_sprintf
  4200 ;;		_printf
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text3
  4205  0052F6                     __ptext3:
  4206                           	callstack 0
  4207  0052F6                     _vfprintf:
  4208                           	callstack 22
  4209  0052F6                     
  4210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4211  0052F6  C094  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  4212  0052FA  C095  F099         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4213  0052FE                     
  4214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4215  0052FE  0E00               	movlw	0
  4216  005300  0100               	movlb	0	; () banked
  4217  005302  6FDC               	movwf	(_nout+1)& (0+255),b
  4218  005304  0E00               	movlw	0
  4219  005306  6FDB               	movwf	_nout& (0+255),b
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4222  005308  EF99  F029         	goto	l5903
  4223  00530C                     l5901:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4227  00530C  C092  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  4228  005310  C093  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4229  005314  0E98               	movlw	low vfprintf@cfmt
  4230  005316  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  4231  005318  0E00               	movlw	high vfprintf@cfmt
  4232  00531A  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4233  00531C  C096  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  4234  005320  C097  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4235  005324  ECB2  F00F         	call	_vfpfcnvrt	;wreg free
  4236  005328  5048               	movf	?_vfpfcnvrt^0,w,c
  4237  00532A  0100               	movlb	0	; () banked
  4238  00532C  27DB               	addwf	_nout& (0+255),f,b
  4239  00532E  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  4240  005330  23DC               	addwfc	(_nout+1)& (0+255),f,b
  4241  005332                     l5903:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4245  005332  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  4246  005336  C099  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4247  00533A                     	if	0	;tblptru may be non-zero
  4248  00533A                     	endif
  4249  00533A                     	if	0	;tblptru may be non-zero
  4250  00533A                     	endif
  4251  00533A  0008               	tblrd		*
  4252  00533C  50F5               	movf	tablat,w,c
  4253  00533E  0900               	iorlw	0
  4254  005340  A4D8               	btfss	status,2,c
  4255  005342  EFA5  F029         	goto	u6151
  4256  005346  EFA7  F029         	goto	u6150
  4257  00534A                     u6151:
  4258  00534A  EF86  F029         	goto	l5901
  4259  00534E                     u6150:
  4260  00534E                     
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4263  00534E  C0DB  F092         	movff	_nout,?_vfprintf
  4264  005352  C0DC  F093         	movff	_nout+1,?_vfprintf+1
  4265  005356                     
  4266                           ; BSR set to: 0
  4267  005356  0012               	return		;funcret
  4268  005358                     __end_of_vfprintf:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _vfpfcnvrt *****************
  4272 ;; Defined at:
  4273 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  4276 ;;		 -> NULL(0), sprintf@f(11), 
  4277 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  4278 ;;		 -> vfprintf@cfmt(2), 
  4279 ;;  ap              2   75[COMRAM] PTR PTR void 
  4280 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  llu             8    0        unsigned long long 
  4283 ;;  ll              8    0        long long 
  4284 ;;  f               4   85[COMRAM] long long 
  4285 ;;  ct              3   89[COMRAM] unsigned char [3]
  4286 ;;  vp              3    0        PTR void 
  4287 ;;  cp              2   81[COMRAM] PTR unsigned char 
  4288 ;;		 -> ?_printf(2), ?_sprintf(2), BMP280_calib(24), description(20), 
  4289 ;;		 -> satel(4), alt(10), course(8), speed(8), 
  4290 ;;  i               2    0        int 
  4291 ;;  done            2    0        int 
  4292 ;;  c               1   92[COMRAM] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2   71[COMRAM] int 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4302 ;;      Params:         6       0       0       0       0       0       0       0       0
  4303 ;;      Locals:        12       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4305 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4306 ;;Total ram usage:       22 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 6
  4309 ;; This function calls:
  4310 ;;		_atoi
  4311 ;;		_ctoa
  4312 ;;		_efgtoa
  4313 ;;		_fputc
  4314 ;;		_isdigit
  4315 ;;		_isupper
  4316 ;;		_stoa
  4317 ;;		_strncmp
  4318 ;;		_tolower
  4319 ;; This function is called by:
  4320 ;;		_vfprintf
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text4
  4325  001F64                     __ptext4:
  4326                           	callstack 0
  4327  001F64                     _vfpfcnvrt:
  4328                           	callstack 22
  4329  001F64                     
  4330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4331  001F64  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4332  001F68  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4333  001F6C  CFDE FFF6          	movff	postinc2,tblptrl
  4334  001F70  CFDD FFF7          	movff	postdec2,tblptrh
  4335  001F74                     	if	0	;tblptru may be non-zero
  4336  001F74                     	endif
  4337  001F74                     	if	0	;tblptru may be non-zero
  4338  001F74                     	endif
  4339  001F74  0008               	tblrd		*
  4340  001F76  50F5               	movf	tablat,w,c
  4341  001F78  0A25               	xorlw	37
  4342  001F7A  A4D8               	btfss	status,2,c
  4343  001F7C  EFC2  F00F         	goto	u5561
  4344  001F80  EFC4  F00F         	goto	u5560
  4345  001F84                     u5561:
  4346  001F84  EF5A  F012         	goto	l5513
  4347  001F88                     u5560:
  4348  001F88                     
  4349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4350  001F88  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4351  001F8C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4352  001F90  2ADE               	incf	postinc2,f,c
  4353  001F92  0E00               	movlw	0
  4354  001F94  22DD               	addwfc	postdec2,f,c
  4355  001F96                     
  4356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4357  001F96  0E00               	movlw	0
  4358  001F98  0100               	movlb	0	; () banked
  4359  001F9A  6FDE               	movwf	(_width+1)& (0+255),b
  4360  001F9C  0E00               	movlw	0
  4361  001F9E  6FDD               	movwf	_width& (0+255),b
  4362  001FA0  C0DD  F0E1         	movff	_width,_flags
  4363  001FA4  C0DE  F0E2         	movff	_width+1,_flags+1
  4364  001FA8                     
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4367  001FA8  69DF               	setf	_prec& (0+255),b
  4368  001FAA  69E0               	setf	(_prec+1)& (0+255),b
  4369  001FAC                     
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4372  001FAC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4373  001FB0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4374  001FB4  CFDE FFF6          	movff	postinc2,tblptrl
  4375  001FB8  CFDD FFF7          	movff	postdec2,tblptrh
  4376  001FBC                     	if	0	;tblptru may be non-zero
  4377  001FBC                     	endif
  4378  001FBC                     	if	0	;tblptru may be non-zero
  4379  001FBC                     	endif
  4380  001FBC  0008               	tblrd		*
  4381  001FBE  50F5               	movf	tablat,w,c
  4382  001FC0  0A2E               	xorlw	46
  4383  001FC2  A4D8               	btfss	status,2,c
  4384  001FC4  EFE6  F00F         	goto	u5571
  4385  001FC8  EFE8  F00F         	goto	u5570
  4386  001FCC                     u5571:
  4387  001FCC  EF58  F010         	goto	l5433
  4388  001FD0                     u5570:
  4389  001FD0                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4392  001FD0  0E00               	movlw	0
  4393  001FD2  6FE0               	movwf	(_prec+1)& (0+255),b
  4394  001FD4  0E00               	movlw	0
  4395  001FD6  6FDF               	movwf	_prec& (0+255),b
  4396  001FD8                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4399  001FD8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4400  001FDC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4401  001FE0  2ADE               	incf	postinc2,f,c
  4402  001FE2  0E00               	movlw	0
  4403  001FE4  22DD               	addwfc	postdec2,f,c
  4404  001FE6                     
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4407  001FE6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4408  001FEA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4409  001FEE  CFDE FFF6          	movff	postinc2,tblptrl
  4410  001FF2  CFDD FFF7          	movff	postdec2,tblptrh
  4411  001FF6                     	if	0	;tblptru may be non-zero
  4412  001FF6                     	endif
  4413  001FF6                     	if	0	;tblptru may be non-zero
  4414  001FF6                     	endif
  4415  001FF6  0008               	tblrd		*
  4416  001FF8  50F5               	movf	tablat,w,c
  4417  001FFA  0A2A               	xorlw	42
  4418  001FFC  A4D8               	btfss	status,2,c
  4419  001FFE  EF03  F010         	goto	u5581
  4420  002002  EF05  F010         	goto	u5580
  4421  002006                     u5581:
  4422  002006  EF22  F010         	goto	l5425
  4423  00200A                     u5580:
  4424  00200A                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4427  00200A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4428  00200E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4429  002012  2ADE               	incf	postinc2,f,c
  4430  002014  0E00               	movlw	0
  4431  002016  22DD               	addwfc	postdec2,f,c
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4434  002018  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4435  00201C  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4436  002020  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4437  002024  0E02               	movlw	2
  4438  002026  26DE               	addwf	postinc2,f,c
  4439  002028  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4440  00202C  0E00               	movlw	0
  4441  00202E  22DD               	addwfc	postdec2,f,c
  4442  002030  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4443  002034  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4444  002038  CFDE F0DF          	movff	postinc2,_prec
  4445  00203C  CFDD F0E0          	movff	postdec2,_prec+1
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4448  002040  EF58  F010         	goto	l5433
  4449  002044                     l5425:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4453  002044  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4454  002048  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4455  00204C  CFDE F008          	movff	postinc2,atoi@s
  4456  002050  CFDD F009          	movff	postdec2,atoi@s+1
  4457  002054  EC78  F01D         	call	_atoi	;wreg free
  4458  002058  C008  F0DF         	movff	?_atoi,_prec
  4459  00205C  C009  F0E0         	movff	?_atoi+1,_prec+1
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4462  002060  EF39  F010         	goto	l5431
  4463  002064                     l5427:
  4464                           
  4465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4466  002064  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4467  002068  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4468  00206C  2ADE               	incf	postinc2,f,c
  4469  00206E  0E00               	movlw	0
  4470  002070  22DD               	addwfc	postdec2,f,c
  4471  002072                     l5431:
  4472  002072  0ED0               	movlw	208
  4473  002074  6E4E               	movwf	??_vfpfcnvrt^0,c
  4474  002076  0EFF               	movlw	255
  4475  002078  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  4476  00207A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4477  00207E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4478  002082  CFDE FFF6          	movff	postinc2,tblptrl
  4479  002086  CFDD FFF7          	movff	postdec2,tblptrh
  4480  00208A                     	if	0	;tblptru may be non-zero
  4481  00208A                     	endif
  4482  00208A                     	if	0	;tblptru may be non-zero
  4483  00208A                     	endif
  4484  00208A  0008               	tblrd		*
  4485  00208C  50F5               	movf	tablat,w,c
  4486  00208E  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  4487  002090  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  4488  002092  504E               	movf	??_vfpfcnvrt^0,w,c
  4489  002094  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4490  002096  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  4491  002098  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4492  00209A  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  4493  00209C  E109               	bnz	u5590
  4494  00209E  0E0A               	movlw	10
  4495  0020A0  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4496  0020A2  A0D8               	btfss	status,0,c
  4497  0020A4  EF56  F010         	goto	u5591
  4498  0020A8  EF58  F010         	goto	u5590
  4499  0020AC                     u5591:
  4500  0020AC  EF32  F010         	goto	l5427
  4501  0020B0                     u5590:
  4502  0020B0                     l5433:
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4505  0020B0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4506  0020B4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4507  0020B8  CFDE FFF6          	movff	postinc2,tblptrl
  4508  0020BC  CFDD FFF7          	movff	postdec2,tblptrh
  4509  0020C0                     	if	0	;tblptru may be non-zero
  4510  0020C0                     	endif
  4511  0020C0                     	if	0	;tblptru may be non-zero
  4512  0020C0                     	endif
  4513  0020C0  0008               	tblrd		*
  4514  0020C2  50F5               	movf	tablat,w,c
  4515  0020C4  6E07               	movwf	tolower@c^0,c
  4516  0020C6  6A08               	clrf	(tolower@c+1)^0,c
  4517  0020C8  EC7A  F02A         	call	_tolower	;wreg free
  4518  0020CC  5007               	movf	?_tolower^0,w,c
  4519  0020CE  6E5A               	movwf	vfpfcnvrt@ct^0,c
  4520  0020D0                     
  4521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4522  0020D0  505A               	movf	vfpfcnvrt@ct^0,w,c
  4523  0020D2  B4D8               	btfsc	status,2,c
  4524  0020D4  EF6E  F010         	goto	u5601
  4525  0020D8  EF70  F010         	goto	u5600
  4526  0020DC                     u5601:
  4527  0020DC  EFA8  F010         	goto	l5443
  4528  0020E0                     u5600:
  4529  0020E0                     
  4530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4531  0020E0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4532  0020E4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4533  0020E8  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  4534  0020EC  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  4535  0020F0  0E01               	movlw	1
  4536  0020F2  264E               	addwf	??_vfpfcnvrt^0,f,c
  4537  0020F4  0E00               	movlw	0
  4538  0020F6  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4539  0020F8  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4540  0020FC  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4541  002100                     	if	0	;tblptru may be non-zero
  4542  002100                     	endif
  4543  002100                     	if	0	;tblptru may be non-zero
  4544  002100                     	endif
  4545  002100  0008               	tblrd		*
  4546  002102  50F5               	movf	tablat,w,c
  4547  002104  6E07               	movwf	tolower@c^0,c
  4548  002106  6A08               	clrf	(tolower@c+1)^0,c
  4549  002108  EC7A  F02A         	call	_tolower	;wreg free
  4550  00210C  5007               	movf	?_tolower^0,w,c
  4551  00210E  6E5B               	movwf	(vfpfcnvrt@ct+1)^0,c
  4552  002110                     
  4553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4554  002110  505B               	movf	(vfpfcnvrt@ct+1)^0,w,c
  4555  002112  B4D8               	btfsc	status,2,c
  4556  002114  EF8E  F010         	goto	u5611
  4557  002118  EF90  F010         	goto	u5610
  4558  00211C                     u5611:
  4559  00211C  EFA8  F010         	goto	l5443
  4560  002120                     u5610:
  4561  002120                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4563  002120  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4564  002124  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4565  002128  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  4566  00212C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  4567  002130  0E02               	movlw	2
  4568  002132  264E               	addwf	??_vfpfcnvrt^0,f,c
  4569  002134  0E00               	movlw	0
  4570  002136  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4571  002138  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4572  00213C  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4573  002140                     	if	0	;tblptru may be non-zero
  4574  002140                     	endif
  4575  002140                     	if	0	;tblptru may be non-zero
  4576  002140                     	endif
  4577  002140  0008               	tblrd		*
  4578  002142  50F5               	movf	tablat,w,c
  4579  002144  6E07               	movwf	tolower@c^0,c
  4580  002146  6A08               	clrf	(tolower@c+1)^0,c
  4581  002148  EC7A  F02A         	call	_tolower	;wreg free
  4582  00214C  5007               	movf	?_tolower^0,w,c
  4583  00214E  6E5C               	movwf	(vfpfcnvrt@ct+2)^0,c
  4584  002150                     l5443:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4587  002150  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4588  002154  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4589  002158  CFDE FFF6          	movff	postinc2,tblptrl
  4590  00215C  CFDD FFF7          	movff	postdec2,tblptrh
  4591  002160                     	if	0	;tblptru may be non-zero
  4592  002160                     	endif
  4593  002160                     	if	0	;tblptru may be non-zero
  4594  002160                     	endif
  4595  002160  0008               	tblrd		*
  4596  002162  50F5               	movf	tablat,w,c
  4597  002164  0A63               	xorlw	99
  4598  002166  A4D8               	btfss	status,2,c
  4599  002168  EFB8  F010         	goto	u5621
  4600  00216C  EFBA  F010         	goto	u5620
  4601  002170                     u5621:
  4602  002170  EFE1  F010         	goto	l5451
  4603  002174                     u5620:
  4604  002174                     
  4605                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  4606  002174  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4607  002178  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4608  00217C  2ADE               	incf	postinc2,f,c
  4609  00217E  0E00               	movlw	0
  4610  002180  22DD               	addwfc	postdec2,f,c
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4613  002182  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4614  002186  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4615  00218A  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4616  00218E  0E02               	movlw	2
  4617  002190  26DE               	addwf	postinc2,f,c
  4618  002192  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4619  002196  0E00               	movlw	0
  4620  002198  22DD               	addwfc	postdec2,f,c
  4621  00219A  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4622  00219E  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4623  0021A2  50DF               	movf	indf2,w,c
  4624  0021A4  6E5D               	movwf	vfpfcnvrt@c^0,c
  4625  0021A6                     
  4626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  4627  0021A6  C048  F00B         	movff	vfpfcnvrt@fp,ctoa@fp
  4628  0021AA  C049  F00C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4629  0021AE  C05D  F00D         	movff	vfpfcnvrt@c,ctoa@c
  4630  0021B2  EC64  F024         	call	_ctoa	;wreg free
  4631  0021B6  C00B  F048         	movff	?_ctoa,?_vfpfcnvrt
  4632  0021BA  C00C  F049         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4633  0021BE  EF75  F012         	goto	l1425
  4634  0021C2                     l5451:
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4637  0021C2  0E66               	movlw	102
  4638  0021C4  185A               	xorwf	vfpfcnvrt@ct^0,w,c
  4639  0021C6  A4D8               	btfss	status,2,c
  4640  0021C8  EFE8  F010         	goto	u5631
  4641  0021CC  EFEA  F010         	goto	u5630
  4642  0021D0                     u5631:
  4643  0021D0  EF2A  F011         	goto	l5463
  4644  0021D4                     u5630:
  4645  0021D4                     
  4646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4647  0021D4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4648  0021D8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4649  0021DC  CFDE FFF6          	movff	postinc2,tblptrl
  4650  0021E0  CFDD FFF7          	movff	postdec2,tblptrh
  4651  0021E4                     	if	0	;tblptru may be non-zero
  4652  0021E4                     	endif
  4653  0021E4                     	if	0	;tblptru may be non-zero
  4654  0021E4                     	endif
  4655  0021E4  0008               	tblrd		*
  4656  0021E6  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  4657  0021EA                     
  4658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4659  0021EA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4660  0021EE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4661  0021F2  2ADE               	incf	postinc2,f,c
  4662  0021F4  0E00               	movlw	0
  4663  0021F6  22DD               	addwfc	postdec2,f,c
  4664  0021F8                     
  4665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4666  0021F8  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4667  0021FC  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4668  002200  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4669  002204  0E04               	movlw	4
  4670  002206  26DE               	addwf	postinc2,f,c
  4671  002208  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4672  00220C  0E00               	movlw	0
  4673  00220E  22DD               	addwfc	postdec2,f,c
  4674  002210  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4675  002214  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4676  002218  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  4677  00221C  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  4678  002220  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  4679  002224  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  4680  002228                     l5459:
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4683  002228  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  4684  00222C  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4685  002230  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  4686  002234  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4687  002238  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4688  00223C  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4689  002240  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  4690  002244  EC25  F006         	call	_efgtoa	;wreg free
  4691  002248  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  4692  00224C  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4693  002250  EF75  F012         	goto	l1425
  4694  002254                     l5463:
  4695                           
  4696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4697  002254  0E5A               	movlw	low vfpfcnvrt@ct
  4698  002256  6E01               	movwf	strncmp@_l^0,c
  4699  002258  0E00               	movlw	high vfpfcnvrt@ct
  4700  00225A  6E02               	movwf	(strncmp@_l+1)^0,c
  4701  00225C  0EFB               	movlw	low STR_52
  4702  00225E  6E03               	movwf	strncmp@_r^0,c
  4703  002260  0E7F               	movlw	high STR_52
  4704  002262  6E04               	movwf	(strncmp@_r+1)^0,c
  4705  002264  0E00               	movlw	0
  4706  002266  6E06               	movwf	(strncmp@n+1)^0,c
  4707  002268  0E02               	movlw	2
  4708  00226A  6E05               	movwf	strncmp@n^0,c
  4709  00226C  EC68  F01F         	call	_strncmp	;wreg free
  4710  002270  5001               	movf	?_strncmp^0,w,c
  4711  002272  1002               	iorwf	(?_strncmp+1)^0,w,c
  4712  002274  A4D8               	btfss	status,2,c
  4713  002276  EF3F  F011         	goto	u5641
  4714  00227A  EF41  F011         	goto	u5640
  4715  00227E                     u5641:
  4716  00227E  EFAF  F011         	goto	l5479
  4717  002282                     u5640:
  4718  002282                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  4720  002282  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4721  002286  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4722  00228A  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  4723  00228E  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  4724  002292  0E01               	movlw	1
  4725  002294  264E               	addwf	??_vfpfcnvrt^0,f,c
  4726  002296  0E00               	movlw	0
  4727  002298  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4728  00229A  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4729  00229E  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4730  0022A2                     	if	0	;tblptru may be non-zero
  4731  0022A2                     	endif
  4732  0022A2                     	if	0	;tblptru may be non-zero
  4733  0022A2                     	endif
  4734  0022A2  0008               	tblrd		*
  4735  0022A4  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  4736  0022A8  0EBF               	movlw	191
  4737  0022AA  6E4E               	movwf	??_vfpfcnvrt^0,c
  4738  0022AC  0EFF               	movlw	255
  4739  0022AE  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  4740  0022B0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4741  0022B4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4742  0022B8  CFDE FFF6          	movff	postinc2,tblptrl
  4743  0022BC  CFDD FFF7          	movff	postdec2,tblptrh
  4744  0022C0                     	if	0	;tblptru may be non-zero
  4745  0022C0                     	endif
  4746  0022C0                     	if	0	;tblptru may be non-zero
  4747  0022C0                     	endif
  4748  0022C0  0008               	tblrd		*
  4749  0022C2  50F5               	movf	tablat,w,c
  4750  0022C4  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  4751  0022C6  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  4752  0022C8  504E               	movf	??_vfpfcnvrt^0,w,c
  4753  0022CA  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4754  0022CC  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  4755  0022CE  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4756  0022D0  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  4757  0022D2  E107               	bnz	u5651
  4758  0022D4  0E1A               	movlw	26
  4759  0022D6  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4760  0022D8  B0D8               	btfsc	status,0,c
  4761  0022DA  EF71  F011         	goto	u5651
  4762  0022DE  EF73  F011         	goto	u5650
  4763  0022E2                     u5651:
  4764  0022E2  EF8D  F011         	goto	l5473
  4765  0022E6                     u5650:
  4766  0022E6                     
  4767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4768  0022E6  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4769  0022EA  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4770  0022EE  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4771  0022F2  0E04               	movlw	4
  4772  0022F4  26DE               	addwf	postinc2,f,c
  4773  0022F6  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4774  0022FA  0E00               	movlw	0
  4775  0022FC  22DD               	addwfc	postdec2,f,c
  4776  0022FE  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4777  002302  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4778  002306  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  4779  00230A  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  4780  00230E  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  4781  002312  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4784  002316  EFA5  F011         	goto	l1431
  4785  00231A                     l5473:
  4786                           
  4787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4788  00231A  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4789  00231E  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4790  002322  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4791  002326  0E04               	movlw	4
  4792  002328  26DE               	addwf	postinc2,f,c
  4793  00232A  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4794  00232E  0E00               	movlw	0
  4795  002330  22DD               	addwfc	postdec2,f,c
  4796  002332  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4797  002336  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4798  00233A  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  4799  00233E  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  4800  002342  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  4801  002346  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  4802  00234A                     l1431:
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4805  00234A  0E02               	movlw	2
  4806  00234C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4807  002350  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4808  002354  26DE               	addwf	postinc2,f,c
  4809  002356  0E00               	movlw	0
  4810  002358  22DD               	addwfc	postdec2,f,c
  4811  00235A  EF14  F011         	goto	l5459
  4812  00235E                     l5479:
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  4815  00235E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4816  002362  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4817  002366  CFDE FFF6          	movff	postinc2,tblptrl
  4818  00236A  CFDD FFF7          	movff	postdec2,tblptrh
  4819  00236E                     	if	0	;tblptru may be non-zero
  4820  00236E                     	endif
  4821  00236E                     	if	0	;tblptru may be non-zero
  4822  00236E                     	endif
  4823  00236E  0008               	tblrd		*
  4824  002370  50F5               	movf	tablat,w,c
  4825  002372  0A73               	xorlw	115
  4826  002374  B4D8               	btfsc	status,2,c
  4827  002376  EFBF  F011         	goto	u5661
  4828  00237A  EFC1  F011         	goto	u5660
  4829  00237E                     u5661:
  4830  00237E  EFDC  F011         	goto	l5483
  4831  002382                     u5660:
  4832  002382  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4833  002386  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4834  00238A  CFDE F001          	movff	postinc2,strncmp@_l
  4835  00238E  CFDD F002          	movff	postdec2,strncmp@_l+1
  4836  002392  0EF7               	movlw	low STR_57
  4837  002394  6E03               	movwf	strncmp@_r^0,c
  4838  002396  0E7F               	movlw	high STR_57
  4839  002398  6E04               	movwf	(strncmp@_r+1)^0,c
  4840  00239A  0E00               	movlw	0
  4841  00239C  6E06               	movwf	(strncmp@n+1)^0,c
  4842  00239E  0E03               	movlw	3
  4843  0023A0  6E05               	movwf	strncmp@n^0,c
  4844  0023A2  EC68  F01F         	call	_strncmp	;wreg free
  4845  0023A6  5001               	movf	?_strncmp^0,w,c
  4846  0023A8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4847  0023AA  A4D8               	btfss	status,2,c
  4848  0023AC  EFDA  F011         	goto	u5671
  4849  0023B0  EFDC  F011         	goto	u5670
  4850  0023B4                     u5671:
  4851  0023B4  EF24  F012         	goto	l5497
  4852  0023B8                     u5670:
  4853  0023B8                     l5483:
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1173:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  4856  0023B8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4857  0023BC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4858  0023C0  CFDE FFF6          	movff	postinc2,tblptrl
  4859  0023C4  CFDD FFF7          	movff	postdec2,tblptrh
  4860  0023C8                     	if	0	;tblptru may be non-zero
  4861  0023C8                     	endif
  4862  0023C8                     	if	0	;tblptru may be non-zero
  4863  0023C8                     	endif
  4864  0023C8  0008               	tblrd		*
  4865  0023CA  50F5               	movf	tablat,w,c
  4866  0023CC  0A73               	xorlw	115
  4867  0023CE  B4D8               	btfsc	status,2,c
  4868  0023D0  EFEC  F011         	goto	u5681
  4869  0023D4  EFEE  F011         	goto	u5680
  4870  0023D8                     u5681:
  4871  0023D8  EFF4  F011         	goto	l5487
  4872  0023DC                     u5680:
  4873  0023DC  0E00               	movlw	0
  4874  0023DE  6E55               	movwf	(_vfpfcnvrt$2156+1)^0,c
  4875  0023E0  0E03               	movlw	3
  4876  0023E2  6E54               	movwf	_vfpfcnvrt$2156^0,c
  4877  0023E4  EFF8  F011         	goto	l5489
  4878  0023E8                     l5487:
  4879  0023E8  0E00               	movlw	0
  4880  0023EA  6E55               	movwf	(_vfpfcnvrt$2156+1)^0,c
  4881  0023EC  0E01               	movlw	1
  4882  0023EE  6E54               	movwf	_vfpfcnvrt$2156^0,c
  4883  0023F0                     l5489:
  4884  0023F0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4885  0023F4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4886  0023F8  5054               	movf	_vfpfcnvrt$2156^0,w,c
  4887  0023FA  26DE               	addwf	postinc2,f,c
  4888  0023FC  5055               	movf	(_vfpfcnvrt$2156+1)^0,w,c
  4889  0023FE  22DD               	addwfc	postdec2,f,c
  4890  002400                     
  4891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4892  002400  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4893  002404  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4894  002408  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  4895  00240C  0E02               	movlw	2
  4896  00240E  26DE               	addwf	postinc2,f,c
  4897  002410  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  4898  002414  0E00               	movlw	0
  4899  002416  22DD               	addwfc	postdec2,f,c
  4900  002418  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4901  00241C  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4902  002420  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  4903  002424  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  4904  002428                     
  4905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  4906  002428  C048  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  4907  00242C  C049  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4908  002430  C052  F00D         	movff	vfpfcnvrt@cp,stoa@s
  4909  002434  C053  F00E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4910  002438  ECB5  F01C         	call	_stoa	;wreg free
  4911  00243C  C00B  F048         	movff	?_stoa,?_vfpfcnvrt
  4912  002440  C00C  F049         	movff	?_stoa+1,?_vfpfcnvrt+1
  4913  002444  EF75  F012         	goto	l1425
  4914  002448                     l5497:
  4915                           
  4916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4917  002448  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  00244C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  002450  CFDE FFF6          	movff	postinc2,tblptrl
  4920  002454  CFDD FFF7          	movff	postdec2,tblptrh
  4921  002458                     	if	0	;tblptru may be non-zero
  4922  002458                     	endif
  4923  002458                     	if	0	;tblptru may be non-zero
  4924  002458                     	endif
  4925  002458  0008               	tblrd		*
  4926  00245A  50F5               	movf	tablat,w,c
  4927  00245C  0A25               	xorlw	37
  4928  00245E  A4D8               	btfss	status,2,c
  4929  002460  EF34  F012         	goto	u5691
  4930  002464  EF36  F012         	goto	u5690
  4931  002468                     u5691:
  4932  002468  EF4D  F012         	goto	l5507
  4933  00246C                     u5690:
  4934  00246C                     
  4935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4936  00246C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4937  002470  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  002474  2ADE               	incf	postinc2,f,c
  4939  002476  0E00               	movlw	0
  4940  002478  22DD               	addwfc	postdec2,f,c
  4941  00247A                     
  4942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4943  00247A  0E00               	movlw	0
  4944  00247C  6E03               	movwf	(fputc@c+1)^0,c
  4945  00247E  0E25               	movlw	37
  4946  002480  6E02               	movwf	fputc@c^0,c
  4947  002482  C048  F004         	movff	vfpfcnvrt@fp,fputc@fp
  4948  002486  C049  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4949  00248A  ECD0  F024         	call	_fputc	;wreg free
  4950  00248E                     l5503:
  4951                           
  4952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4953  00248E  0E00               	movlw	0
  4954  002490  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  4955  002492  0E01               	movlw	1
  4956  002494  6E48               	movwf	?_vfpfcnvrt^0,c
  4957  002496  EF75  F012         	goto	l1425
  4958  00249A                     l5507:
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4961  00249A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4962  00249E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4963  0024A2  2ADE               	incf	postinc2,f,c
  4964  0024A4  0E00               	movlw	0
  4965  0024A6  22DD               	addwfc	postdec2,f,c
  4966  0024A8                     
  4967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4968  0024A8  0E00               	movlw	0
  4969  0024AA  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  4970  0024AC  0E00               	movlw	0
  4971  0024AE  6E48               	movwf	?_vfpfcnvrt^0,c
  4972  0024B0  EF75  F012         	goto	l1425
  4973  0024B4                     l5513:
  4974                           
  4975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4976  0024B4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4977  0024B8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4978  0024BC  CFDE FFF6          	movff	postinc2,tblptrl
  4979  0024C0  CFDD FFF7          	movff	postdec2,tblptrh
  4980  0024C4                     	if	0	;tblptru may be non-zero
  4981  0024C4                     	endif
  4982  0024C4                     	if	0	;tblptru may be non-zero
  4983  0024C4                     	endif
  4984  0024C4  0008               	tblrd		*
  4985  0024C6  50F5               	movf	tablat,w,c
  4986  0024C8  6E02               	movwf	fputc@c^0,c
  4987  0024CA  6A03               	clrf	(fputc@c+1)^0,c
  4988  0024CC  C048  F004         	movff	vfpfcnvrt@fp,fputc@fp
  4989  0024D0  C049  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4990  0024D4  ECD0  F024         	call	_fputc	;wreg free
  4991  0024D8                     
  4992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4993  0024D8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4994  0024DC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4995  0024E0  2ADE               	incf	postinc2,f,c
  4996  0024E2  0E00               	movlw	0
  4997  0024E4  22DD               	addwfc	postdec2,f,c
  4998  0024E6  EF47  F012         	goto	l5503
  4999  0024EA                     l1425:
  5000  0024EA  0012               	return		;funcret
  5001  0024EC                     __end_of_vfpfcnvrt:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function _strncmp *****************
  5005 ;; Defined at:
  5006 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5009 ;;		 -> vfpfcnvrt@ct(3), STR_37(16), STR_35(12), STR_33(12), 
  5010 ;;		 -> STR_31(10), STR_29(26), STR_27(25), STR_25(23), 
  5011 ;;		 -> STR_23(23), STR_21(22), STR_20(18), STR_19(19), 
  5012 ;;		 -> STR_18(21), STR_17(36), STR_16(34), STR_15(28), 
  5013 ;;		 -> STR_14(28), STR_12(14), STR_11(11), STR_1(17), 
  5014 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5015 ;;		 -> STR_59(4), STR_54(3), 
  5016 ;;  n               2    4[COMRAM] unsigned int 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5019 ;;		 -> STR_59(4), STR_54(3), 
  5020 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5021 ;;		 -> vfpfcnvrt@ct(3), STR_37(16), STR_35(12), STR_33(12), 
  5022 ;;		 -> STR_31(10), STR_29(26), STR_27(25), STR_25(23), 
  5023 ;;		 -> STR_23(23), STR_21(22), STR_20(18), STR_19(19), 
  5024 ;;		 -> STR_18(21), STR_17(36), STR_16(34), STR_15(28), 
  5025 ;;		 -> STR_14(28), STR_12(14), STR_11(11), STR_1(17), 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5035 ;;      Params:         6       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5038 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:       11 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 1
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_vfpfcnvrt
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text5
  5050  003ED0                     __ptext5:
  5051                           	callstack 0
  5052  003ED0                     _strncmp:
  5053                           	callstack 26
  5054  003ED0  C001  F008         	movff	strncmp@_l,strncmp@l
  5055  003ED4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5056  003ED8  C003  F00A         	movff	strncmp@_r,strncmp@r
  5057  003EDC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5058  003EE0  0605               	decf	strncmp@n^0,f,c
  5059  003EE2  A0D8               	btfss	status,0,c
  5060  003EE4  0606               	decf	(strncmp@n+1)^0,f,c
  5061  003EE6  2805               	incf	strncmp@n^0,w,c
  5062  003EE8  E106               	bnz	u5461
  5063  003EEA  2806               	incf	(strncmp@n+1)^0,w,c
  5064  003EEC  A4D8               	btfss	status,2,c
  5065  003EEE  EF7B  F01F         	goto	u5461
  5066  003EF2  EF7D  F01F         	goto	u5460
  5067  003EF6                     u5461:
  5068  003EF6  EF8A  F01F         	goto	l5371
  5069  003EFA                     u5460:
  5070  003EFA  0E00               	movlw	0
  5071  003EFC  6E02               	movwf	(?_strncmp+1)^0,c
  5072  003EFE  0E00               	movlw	0
  5073  003F00  6E01               	movwf	?_strncmp^0,c
  5074  003F02  EFF4  F01F         	goto	l1565
  5075  003F06                     l5369:
  5076  003F06  4A08               	infsnz	strncmp@l^0,f,c
  5077  003F08  2A09               	incf	(strncmp@l+1)^0,f,c
  5078  003F0A  4A0A               	infsnz	strncmp@r^0,f,c
  5079  003F0C  2A0B               	incf	(strncmp@r+1)^0,f,c
  5080  003F0E  0605               	decf	strncmp@n^0,f,c
  5081  003F10  A0D8               	btfss	status,0,c
  5082  003F12  0606               	decf	(strncmp@n+1)^0,f,c
  5083  003F14                     l5371:
  5084  003F14  C008  FFF6         	movff	strncmp@l,tblptrl
  5085  003F18  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5086  003F1C  6AF8               	clrf	tblptru,c
  5087  003F1E  0E07               	movlw	(high __ramtop+-1)
  5088  003F20  64F7               	cpfsgt	tblptrh,c
  5089  003F22  D003               	bra	u5477
  5090  003F24  0008               	tblrd		*
  5091  003F26  50F5               	movf	tablat,w,c
  5092  003F28  D005               	bra	u5470
  5093  003F2A                     u5477:
  5094  003F2A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5095  003F2E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5096  003F32  50E7               	movf	indf1,w,c
  5097  003F34                     u5470:
  5098  003F34  0900               	iorlw	0
  5099  003F36  B4D8               	btfsc	status,2,c
  5100  003F38  EFA0  F01F         	goto	u5481
  5101  003F3C  EFA2  F01F         	goto	u5480
  5102  003F40                     u5481:
  5103  003F40  EFD8  F01F         	goto	l5379
  5104  003F44                     u5480:
  5105  003F44  C00A  FFF6         	movff	strncmp@r,tblptrl
  5106  003F48  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5107  003F4C                     	if	0	;tblptru may be non-zero
  5108  003F4C                     	endif
  5109  003F4C                     	if	0	;tblptru may be non-zero
  5110  003F4C                     	endif
  5111  003F4C  0008               	tblrd		*
  5112  003F4E  50F5               	movf	tablat,w,c
  5113  003F50  0900               	iorlw	0
  5114  003F52  B4D8               	btfsc	status,2,c
  5115  003F54  EFAE  F01F         	goto	u5491
  5116  003F58  EFB0  F01F         	goto	u5490
  5117  003F5C                     u5491:
  5118  003F5C  EFD8  F01F         	goto	l5379
  5119  003F60                     u5490:
  5120  003F60  5005               	movf	strncmp@n^0,w,c
  5121  003F62  1006               	iorwf	(strncmp@n+1)^0,w,c
  5122  003F64  B4D8               	btfsc	status,2,c
  5123  003F66  EFB7  F01F         	goto	u5501
  5124  003F6A  EFB9  F01F         	goto	u5500
  5125  003F6E                     u5501:
  5126  003F6E  EFD8  F01F         	goto	l5379
  5127  003F72                     u5500:
  5128  003F72  C00A  FFF6         	movff	strncmp@r,tblptrl
  5129  003F76  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5130  003F7A                     	if	0	;tblptru may be non-zero
  5131  003F7A                     	endif
  5132  003F7A                     	if	0	;tblptru may be non-zero
  5133  003F7A                     	endif
  5134  003F7A  0008               	tblrd		*
  5135  003F7C  CFF5 F007          	movff	tablat,??_strncmp
  5136  003F80  C008  FFF6         	movff	strncmp@l,tblptrl
  5137  003F84  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5138  003F88  6AF8               	clrf	tblptru,c
  5139  003F8A  0E07               	movlw	(high __ramtop+-1)
  5140  003F8C  64F7               	cpfsgt	tblptrh,c
  5141  003F8E  D003               	bra	u5517
  5142  003F90  0008               	tblrd		*
  5143  003F92  50F5               	movf	tablat,w,c
  5144  003F94  D005               	bra	u5515
  5145  003F96                     u5517:
  5146  003F96  CFF6 FFE1          	movff	tblptrl,fsr1l
  5147  003F9A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5148  003F9E  50E7               	movf	indf1,w,c
  5149  003FA0                     u5515:
  5150  003FA0  1807               	xorwf	??_strncmp^0,w,c
  5151  003FA2  B4D8               	btfsc	status,2,c
  5152  003FA4  EFD6  F01F         	goto	u5511
  5153  003FA8  EFD8  F01F         	goto	u5510
  5154  003FAC                     u5511:
  5155  003FAC  EF83  F01F         	goto	l5369
  5156  003FB0                     u5510:
  5157  003FB0                     l5379:
  5158  003FB0  C008  FFF6         	movff	strncmp@l,tblptrl
  5159  003FB4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5160  003FB8  6AF8               	clrf	tblptru,c
  5161  003FBA  0E07               	movlw	(high __ramtop+-1)
  5162  003FBC  64F7               	cpfsgt	tblptrh,c
  5163  003FBE  D003               	bra	u5527
  5164  003FC0  0008               	tblrd		*
  5165  003FC2  50F5               	movf	tablat,w,c
  5166  003FC4  D005               	bra	u5520
  5167  003FC6                     u5527:
  5168  003FC6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5169  003FCA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5170  003FCE  50E7               	movf	indf1,w,c
  5171  003FD0                     u5520:
  5172  003FD0  6E07               	movwf	??_strncmp^0,c
  5173  003FD2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5174  003FD6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5175  003FDA                     	if	0	;tblptru may be non-zero
  5176  003FDA                     	endif
  5177  003FDA                     	if	0	;tblptru may be non-zero
  5178  003FDA                     	endif
  5179  003FDA  0008               	tblrd		*
  5180  003FDC  50F5               	movf	tablat,w,c
  5181  003FDE  5C07               	subwf	??_strncmp^0,w,c
  5182  003FE0  6E01               	movwf	?_strncmp^0,c
  5183  003FE2  6A02               	clrf	(?_strncmp+1)^0,c
  5184  003FE4  A0D8               	btfss	status,0,c
  5185  003FE6  0602               	decf	(?_strncmp+1)^0,f,c
  5186  003FE8                     l1565:
  5187  003FE8  0012               	return		;funcret
  5188  003FEA                     __end_of_strncmp:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _stoa *****************
  5192 ;; Defined at:
  5193 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  5196 ;;		 -> NULL(0), sprintf@f(11), 
  5197 ;;  s               2   12[COMRAM] PTR unsigned char 
  5198 ;;		 -> ?_printf(2), ?_sprintf(2), BMP280_calib(24), description(20), 
  5199 ;;		 -> satel(4), alt(10), course(8), speed(8), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  nuls            7   15[COMRAM] unsigned char [7]
  5202 ;;  l               2   30[COMRAM] int 
  5203 ;;  p               2   28[COMRAM] int 
  5204 ;;  cp              2   26[COMRAM] PTR unsigned char 
  5205 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), BMP280_calib(24), 
  5206 ;;		 -> description(20), satel(4), alt(10), course(8), 
  5207 ;;		 -> speed(8), 
  5208 ;;  w               2   24[COMRAM] int 
  5209 ;;  i               2   22[COMRAM] int 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  2   10[COMRAM] int 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5219 ;;      Params:         4       0       0       0       0       0       0       0       0
  5220 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5221 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5222 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5223 ;;Total ram usage:       22 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 3
  5226 ;; This function calls:
  5227 ;;		_fputc
  5228 ;;		_strlen
  5229 ;; This function is called by:
  5230 ;;		_vfpfcnvrt
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text6
  5235  00396A                     __ptext6:
  5236                           	callstack 0
  5237  00396A                     _stoa:
  5238                           	callstack 24
  5239  00396A                     
  5240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  5241  00396A  EE21  F0A9         	lfsr	2,stoa@F1169
  5242  00396E  EE10  F010         	lfsr	1,stoa@nuls
  5243  003972  0E06               	movlw	6
  5244  003974                     u5331:
  5245  003974  CFDB FFE3          	movff	plusw2,plusw1
  5246  003978  06E8               	decf	wreg,f,c
  5247  00397A  E2FC               	bc	u5331
  5248  00397C                     
  5249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  5250  00397C  C00D  F01B         	movff	stoa@s,stoa@cp
  5251  003980  C00E  F01C         	movff	stoa@s+1,stoa@cp+1
  5252  003984                     
  5253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  5254  003984  501B               	movf	stoa@cp^0,w,c
  5255  003986  101C               	iorwf	(stoa@cp+1)^0,w,c
  5256  003988  A4D8               	btfss	status,2,c
  5257  00398A  EFC9  F01C         	goto	u5341
  5258  00398E  EFCB  F01C         	goto	u5340
  5259  003992                     u5341:
  5260  003992  EFCF  F01C         	goto	l5297
  5261  003996                     u5340:
  5262  003996                     
  5263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  5264  003996  0E10               	movlw	low stoa@nuls
  5265  003998  6E1B               	movwf	stoa@cp^0,c
  5266  00399A  0E00               	movlw	high stoa@nuls
  5267  00399C  6E1C               	movwf	(stoa@cp+1)^0,c
  5268  00399E                     l5297:
  5269                           
  5270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  5271  00399E  C01B  F001         	movff	stoa@cp,strlen@s
  5272  0039A2  C01C  F002         	movff	stoa@cp+1,strlen@s+1
  5273  0039A6  EC74  F02B         	call	_strlen	;wreg free
  5274  0039AA  C001  F01F         	movff	?_strlen,stoa@l
  5275  0039AE  C002  F020         	movff	?_strlen+1,stoa@l+1
  5276  0039B2                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  5278  0039B2  C0DF  F01D         	movff	_prec,stoa@p
  5279  0039B6  C0E0  F01E         	movff	_prec+1,stoa@p+1
  5280  0039BA                     
  5281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5282  0039BA  BE1E               	btfsc	(stoa@p+1)^0,7,c
  5283  0039BC  EFE2  F01C         	goto	u5351
  5284  0039C0  EFE4  F01C         	goto	u5350
  5285  0039C4                     u5351:
  5286  0039C4  EFF9  F01C         	goto	l1396
  5287  0039C8                     u5350:
  5288  0039C8  501F               	movf	stoa@l^0,w,c
  5289  0039CA  5C1D               	subwf	stoa@p^0,w,c
  5290  0039CC  501E               	movf	(stoa@p+1)^0,w,c
  5291  0039CE  0A80               	xorlw	128
  5292  0039D0  6E0F               	movwf	??_stoa^0,c
  5293  0039D2  5020               	movf	(stoa@l+1)^0,w,c
  5294  0039D4  0A80               	xorlw	128
  5295  0039D6  580F               	subwfb	??_stoa^0,w,c
  5296  0039D8  A0D8               	btfss	status,0,c
  5297  0039DA  EFF1  F01C         	goto	u5361
  5298  0039DE  EFF3  F01C         	goto	u5360
  5299  0039E2                     u5361:
  5300  0039E2  EFF5  F01C         	goto	l1394
  5301  0039E6                     u5360:
  5302  0039E6  EFF9  F01C         	goto	l1396
  5303  0039EA                     l1394:
  5304  0039EA  C01D  F01F         	movff	stoa@p,stoa@l
  5305  0039EE  C01E  F020         	movff	stoa@p+1,stoa@l+1
  5306  0039F2                     l1396:
  5307                           
  5308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 583:     p = l;
  5309  0039F2  C01F  F01D         	movff	stoa@l,stoa@p
  5310  0039F6  C020  F01E         	movff	stoa@l+1,stoa@p+1
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  5313  0039FA  C0DD  F019         	movff	_width,stoa@w
  5314  0039FE  C0DE  F01A         	movff	_width+1,stoa@w+1
  5315                           
  5316                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  5317  003A02  0100               	movlb	0	; () banked
  5318  003A04  B1E1               	btfsc	_flags& (0+255),0,b
  5319  003A06  EF07  F01D         	goto	u5371
  5320  003A0A  EF09  F01D         	goto	u5370
  5321  003A0E                     u5371:
  5322  003A0E  EF26  F01D         	goto	l5313
  5323  003A12                     u5370:
  5324  003A12  EF17  F01D         	goto	l5311
  5325  003A16                     l5307:
  5326                           
  5327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  5328  003A16  0E00               	movlw	0
  5329  003A18  6E03               	movwf	(fputc@c+1)^0,c
  5330  003A1A  0E20               	movlw	32
  5331  003A1C  6E02               	movwf	fputc@c^0,c
  5332  003A1E  C00B  F004         	movff	stoa@fp,fputc@fp
  5333  003A22  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  5334  003A26  ECD0  F024         	call	_fputc	;wreg free
  5335  003A2A                     
  5336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  5337  003A2A  4A1F               	infsnz	stoa@l^0,f,c
  5338  003A2C  2A20               	incf	(stoa@l+1)^0,f,c
  5339  003A2E                     l5311:
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  5342  003A2E  5019               	movf	stoa@w^0,w,c
  5343  003A30  5C1F               	subwf	stoa@l^0,w,c
  5344  003A32  5020               	movf	(stoa@l+1)^0,w,c
  5345  003A34  0A80               	xorlw	128
  5346  003A36  6E0F               	movwf	??_stoa^0,c
  5347  003A38  501A               	movf	(stoa@w+1)^0,w,c
  5348  003A3A  0A80               	xorlw	128
  5349  003A3C  580F               	subwfb	??_stoa^0,w,c
  5350  003A3E  A0D8               	btfss	status,0,c
  5351  003A40  EF24  F01D         	goto	u5381
  5352  003A44  EF26  F01D         	goto	u5380
  5353  003A48                     u5381:
  5354  003A48  EF0B  F01D         	goto	l5307
  5355  003A4C                     u5380:
  5356  003A4C                     l5313:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  5359  003A4C  0E00               	movlw	0
  5360  003A4E  6E18               	movwf	(stoa@i+1)^0,c
  5361  003A50  0E00               	movlw	0
  5362  003A52  6E17               	movwf	stoa@i^0,c
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5365  003A54  EF3F  F01D         	goto	l5321
  5366  003A58                     l5315:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  5369  003A58  C01B  FFD9         	movff	stoa@cp,fsr2l
  5370  003A5C  C01C  FFDA         	movff	stoa@cp+1,fsr2h
  5371  003A60  50DF               	movf	indf2,w,c
  5372  003A62  6E0F               	movwf	??_stoa^0,c
  5373  003A64  500F               	movf	??_stoa^0,w,c
  5374  003A66  6E02               	movwf	fputc@c^0,c
  5375  003A68  6A03               	clrf	(fputc@c+1)^0,c
  5376  003A6A  C00B  F004         	movff	stoa@fp,fputc@fp
  5377  003A6E  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  5378  003A72  ECD0  F024         	call	_fputc	;wreg free
  5379  003A76                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  5381  003A76  4A1B               	infsnz	stoa@cp^0,f,c
  5382  003A78  2A1C               	incf	(stoa@cp+1)^0,f,c
  5383  003A7A                     
  5384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 599:         ++i;
  5385  003A7A  4A17               	infsnz	stoa@i^0,f,c
  5386  003A7C  2A18               	incf	(stoa@i+1)^0,f,c
  5387  003A7E                     l5321:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5390  003A7E  501D               	movf	stoa@p^0,w,c
  5391  003A80  5C17               	subwf	stoa@i^0,w,c
  5392  003A82  5018               	movf	(stoa@i+1)^0,w,c
  5393  003A84  0A80               	xorlw	128
  5394  003A86  6E0F               	movwf	??_stoa^0,c
  5395  003A88  501E               	movf	(stoa@p+1)^0,w,c
  5396  003A8A  0A80               	xorlw	128
  5397  003A8C  580F               	subwfb	??_stoa^0,w,c
  5398  003A8E  A0D8               	btfss	status,0,c
  5399  003A90  EF4C  F01D         	goto	u5391
  5400  003A94  EF4E  F01D         	goto	u5390
  5401  003A98                     u5391:
  5402  003A98  EF2C  F01D         	goto	l5315
  5403  003A9C                     u5390:
  5404  003A9C                     
  5405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  5406  003A9C  0100               	movlb	0	; () banked
  5407  003A9E  A1E1               	btfss	_flags& (0+255),0,b
  5408  003AA0  EF54  F01D         	goto	u5401
  5409  003AA4  EF56  F01D         	goto	u5400
  5410  003AA8                     u5401:
  5411  003AA8  EF73  F01D         	goto	l1406
  5412  003AAC                     u5400:
  5413  003AAC  EF64  F01D         	goto	l5329
  5414  003AB0                     l5325:
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  5417  003AB0  0E00               	movlw	0
  5418  003AB2  6E03               	movwf	(fputc@c+1)^0,c
  5419  003AB4  0E20               	movlw	32
  5420  003AB6  6E02               	movwf	fputc@c^0,c
  5421  003AB8  C00B  F004         	movff	stoa@fp,fputc@fp
  5422  003ABC  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  5423  003AC0  ECD0  F024         	call	_fputc	;wreg free
  5424  003AC4                     
  5425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  5426  003AC4  4A1F               	infsnz	stoa@l^0,f,c
  5427  003AC6  2A20               	incf	(stoa@l+1)^0,f,c
  5428  003AC8                     l5329:
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  5431  003AC8  5019               	movf	stoa@w^0,w,c
  5432  003ACA  5C1F               	subwf	stoa@l^0,w,c
  5433  003ACC  5020               	movf	(stoa@l+1)^0,w,c
  5434  003ACE  0A80               	xorlw	128
  5435  003AD0  6E0F               	movwf	??_stoa^0,c
  5436  003AD2  501A               	movf	(stoa@w+1)^0,w,c
  5437  003AD4  0A80               	xorlw	128
  5438  003AD6  580F               	subwfb	??_stoa^0,w,c
  5439  003AD8  A0D8               	btfss	status,0,c
  5440  003ADA  EF71  F01D         	goto	u5411
  5441  003ADE  EF73  F01D         	goto	u5410
  5442  003AE2                     u5411:
  5443  003AE2  EF58  F01D         	goto	l5325
  5444  003AE6                     u5410:
  5445  003AE6                     l1406:
  5446                           
  5447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  5448  003AE6  C01F  F00B         	movff	stoa@l,?_stoa
  5449  003AEA  C020  F00C         	movff	stoa@l+1,?_stoa+1
  5450  003AEE  0012               	return		;funcret
  5451  003AF0                     __end_of_stoa:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _efgtoa *****************
  5455 ;; Defined at:
  5456 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  5459 ;;		 -> NULL(0), sprintf@f(11), 
  5460 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  5461 ;;  c               1   65[COMRAM] unsigned char 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  u               4   46[BANK0 ] unsigned char 
  5464 ;;  g               4   38[BANK0 ] unsigned char 
  5465 ;;  l               4   32[BANK0 ] unsigned char 
  5466 ;;  h               4   28[BANK0 ] unsigned char 
  5467 ;;  ou              4   14[BANK0 ] unsigned char 
  5468 ;;  n               2   44[BANK0 ] int 
  5469 ;;  e               2   42[BANK0 ] int 
  5470 ;;  i               2   36[BANK0 ] int 
  5471 ;;  w               2   24[BANK0 ] int 
  5472 ;;  p               2   22[BANK0 ] int 
  5473 ;;  sign            2   20[BANK0 ] int 
  5474 ;;  d               2   18[BANK0 ] int 
  5475 ;;  m               2   12[BANK0 ] int 
  5476 ;;  ne              2   10[BANK0 ] int 
  5477 ;;  pp              2    8[BANK0 ] int 
  5478 ;;  t               2    6[BANK0 ] int 
  5479 ;;  mode            1   27[BANK0 ] unsigned char 
  5480 ;;  nmode           1   26[BANK0 ] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  2   59[COMRAM] int 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5490 ;;      Params:         7       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         0      50       0       0       0       0       0       0       0
  5492 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5493 ;;      Totals:        12      50       0       0       0       0       0       0       0
  5494 ;;Total ram usage:       62 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 5
  5497 ;; This function calls:
  5498 ;;		___awdiv
  5499 ;;		___awmod
  5500 ;;		___fladd
  5501 ;;		___fldiv
  5502 ;;		___fleq
  5503 ;;		___flge
  5504 ;;		___flmul
  5505 ;;		___flneg
  5506 ;;		___flsub
  5507 ;;		___fltol
  5508 ;;		___fpclassifyf
  5509 ;;		_floorf
  5510 ;;		_isupper
  5511 ;;		_pad
  5512 ;;		_strcpy
  5513 ;;		_tolower
  5514 ;; This function is called by:
  5515 ;;		_vfpfcnvrt
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text7
  5520  000C4A                     __ptext7:
  5521                           	callstack 0
  5522  000C4A                     _efgtoa:
  5523                           	callstack 22
  5524  000C4A                     
  5525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  5526  000C4A  0E00               	movlw	0
  5527  000C4C  0100               	movlb	0	; () banked
  5528  000C4E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  5529  000C50  0E00               	movlw	0
  5530  000C52  6F74               	movwf	efgtoa@sign& (0+255),b
  5531  000C54                     
  5532                           ; BSR set to: 0
  5533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  5534  000C54  C03E  F086         	movff	efgtoa@f,efgtoa@g
  5535  000C58  C03F  F087         	movff	efgtoa@f+1,efgtoa@g+1
  5536  000C5C  C040  F088         	movff	efgtoa@f+2,efgtoa@g+2
  5537  000C60  C041  F089         	movff	efgtoa@f+3,efgtoa@g+3
  5538  000C64                     
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  5541  000C64  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5542  000C66  EF39  F006         	goto	u4850
  5543  000C6A  EF37  F006         	goto	u4851
  5544  000C6E                     u4851:
  5545  000C6E  EF4F  F006         	goto	l4993
  5546  000C72                     u4850:
  5547  000C72                     
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  5550  000C72  0E00               	movlw	0
  5551  000C74  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  5552  000C76  0E01               	movlw	1
  5553  000C78  6F74               	movwf	efgtoa@sign& (0+255),b
  5554  000C7A                     
  5555                           ; BSR set to: 0
  5556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  5557  000C7A  C086  F001         	movff	efgtoa@g,___flneg@f1
  5558  000C7E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5559  000C82  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5560  000C86  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5561  000C8A  EC3C  F02B         	call	___flneg	;wreg free
  5562  000C8E  C001  F086         	movff	?___flneg,efgtoa@g
  5563  000C92  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  5564  000C96  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  5565  000C9A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  5566  000C9E                     l4993:
  5567                           
  5568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  5569  000C9E  0E00               	movlw	0
  5570  000CA0  0100               	movlb	0	; () banked
  5571  000CA2  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  5572  000CA4  0E00               	movlw	0
  5573  000CA6  6F8C               	movwf	efgtoa@n& (0+255),b
  5574  000CA8                     
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5577  000CA8  C0DD  F078         	movff	_width,efgtoa@w
  5578  000CAC  C0DE  F079         	movff	_width+1,efgtoa@w+1
  5579  000CB0                     
  5580                           ; BSR set to: 0
  5581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  5582  000CB0  5174               	movf	efgtoa@sign& (0+255),w,b
  5583  000CB2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5584  000CB4  A4D8               	btfss	status,2,c
  5585  000CB6  EF5F  F006         	goto	u4861
  5586  000CBA  EF61  F006         	goto	u4860
  5587  000CBE                     u4861:
  5588  000CBE  EF68  F006         	goto	l5001
  5589  000CC2                     u4860:
  5590  000CC2                     
  5591                           ; BSR set to: 0
  5592  000CC2  A5E1               	btfss	_flags& (0+255),2,b
  5593  000CC4  EF66  F006         	goto	u4871
  5594  000CC8  EF68  F006         	goto	u4870
  5595  000CCC                     u4871:
  5596  000CCC  EF82  F006         	goto	l5013
  5597  000CD0                     u4870:
  5598  000CD0                     l5001:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  5602  000CD0  5174               	movf	efgtoa@sign& (0+255),w,b
  5603  000CD2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5604  000CD4  A4D8               	btfss	status,2,c
  5605  000CD6  EF6F  F006         	goto	u4881
  5606  000CDA  EF71  F006         	goto	u4880
  5607  000CDE                     u4881:
  5608  000CDE  EF77  F006         	goto	l5005
  5609  000CE2                     u4880:
  5610  000CE2                     
  5611                           ; BSR set to: 0
  5612  000CE2  0E00               	movlw	0
  5613  000CE4  6F61               	movwf	(_efgtoa$2114+1)& (0+255),b
  5614  000CE6  0E2B               	movlw	43
  5615  000CE8  6F60               	movwf	_efgtoa$2114& (0+255),b
  5616  000CEA  EF7B  F006         	goto	l5007
  5617  000CEE                     l5005:
  5618                           
  5619                           ; BSR set to: 0
  5620  000CEE  0E00               	movlw	0
  5621  000CF0  6F61               	movwf	(_efgtoa$2114+1)& (0+255),b
  5622  000CF2  0E2D               	movlw	45
  5623  000CF4  6F60               	movwf	_efgtoa$2114& (0+255),b
  5624  000CF6                     l5007:
  5625                           
  5626                           ; BSR set to: 0
  5627  000CF6  C060  F200         	movff	_efgtoa$2114,_dbuf
  5628  000CFA                     
  5629                           ; BSR set to: 0
  5630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5631  000CFA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  5632  000CFC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  5633  000CFE                     
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  5636  000CFE  0778               	decf	efgtoa@w& (0+255),f,b
  5637  000D00  A0D8               	btfss	status,0,c
  5638  000D02  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  5639  000D04                     l5013:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  5643  000D04  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  5644  000D08  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5645  000D0C  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5646  000D10  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5647  000D14  EC8A  F022         	call	___fpclassifyf	;wreg free
  5648  000D18  0401               	decf	?___fpclassifyf^0,w,c
  5649  000D1A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5650  000D1C  A4D8               	btfss	status,2,c
  5651  000D1E  EF93  F006         	goto	u4891
  5652  000D22  EF95  F006         	goto	u4890
  5653  000D26                     u4891:
  5654  000D26  EFE0  F006         	goto	l5031
  5655  000D2A                     u4890:
  5656  000D2A  0EBF               	movlw	191
  5657  000D2C  6E43               	movwf	??_efgtoa^0,c
  5658  000D2E  0EFF               	movlw	255
  5659  000D30  6E44               	movwf	(??_efgtoa+1)^0,c
  5660  000D32  5042               	movf	efgtoa@c^0,w,c
  5661  000D34  6E45               	movwf	(??_efgtoa+2)^0,c
  5662  000D36  6A46               	clrf	(??_efgtoa+3)^0,c
  5663  000D38  5043               	movf	??_efgtoa^0,w,c
  5664  000D3A  2645               	addwf	(??_efgtoa+2)^0,f,c
  5665  000D3C  5044               	movf	(??_efgtoa+1)^0,w,c
  5666  000D3E  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5667  000D40  5046               	movf	(??_efgtoa+3)^0,w,c
  5668  000D42  E107               	bnz	u4901
  5669  000D44  0E1A               	movlw	26
  5670  000D46  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5671  000D48  B0D8               	btfsc	status,0,c
  5672  000D4A  EFA9  F006         	goto	u4901
  5673  000D4E  EFAB  F006         	goto	u4900
  5674  000D52                     u4901:
  5675  000D52  EFBA  F006         	goto	l5023
  5676  000D56                     u4900:
  5677  000D56                     
  5678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  5679  000D56  0E00               	movlw	low _dbuf
  5680  000D58  0100               	movlb	0	; () banked
  5681  000D5A  258C               	addwf	efgtoa@n& (0+255),w,b
  5682  000D5C  6E01               	movwf	strcpy@dest^0,c
  5683  000D5E  0E02               	movlw	high _dbuf
  5684  000D60  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5685  000D62  6E02               	movwf	(strcpy@dest+1)^0,c
  5686  000D64  0EE7               	movlw	low STR_44
  5687  000D66  6E03               	movwf	strcpy@src^0,c
  5688  000D68  0E7F               	movlw	high STR_44
  5689  000D6A  6E04               	movwf	(strcpy@src+1)^0,c
  5690  000D6C  ECAC  F029         	call	_strcpy	;wreg free
  5691                           
  5692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  5693  000D70  EFC7  F006         	goto	l5025
  5694  000D74                     l5023:
  5695                           
  5696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  5697  000D74  0E00               	movlw	low _dbuf
  5698  000D76  0100               	movlb	0	; () banked
  5699  000D78  258C               	addwf	efgtoa@n& (0+255),w,b
  5700  000D7A  6E01               	movwf	strcpy@dest^0,c
  5701  000D7C  0E02               	movlw	high _dbuf
  5702  000D7E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5703  000D80  6E02               	movwf	(strcpy@dest+1)^0,c
  5704  000D82  0EEF               	movlw	low STR_45
  5705  000D84  6E03               	movwf	strcpy@src^0,c
  5706  000D86  0E7F               	movlw	high STR_45
  5707  000D88  6E04               	movwf	(strcpy@src+1)^0,c
  5708  000D8A  ECAC  F029         	call	_strcpy	;wreg free
  5709  000D8E                     l5025:
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5712  000D8E  0100               	movlb	0	; () banked
  5713  000D90  0EFD               	movlw	253
  5714  000D92  2778               	addwf	efgtoa@w& (0+255),f,b
  5715  000D94  0EFF               	movlw	255
  5716  000D96  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5717  000D98                     l5027:
  5718                           
  5719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5720  000D98  C03C  F012         	movff	efgtoa@fp,pad@fp
  5721  000D9C  C03D  F013         	movff	efgtoa@fp+1,pad@fp+1
  5722  000DA0  0E00               	movlw	low _dbuf
  5723  000DA2  6E14               	movwf	pad@buf^0,c
  5724  000DA4  0E02               	movlw	high _dbuf
  5725  000DA6  6E15               	movwf	(pad@buf+1)^0,c
  5726  000DA8  C078  F016         	movff	efgtoa@w,pad@p
  5727  000DAC  C079  F017         	movff	efgtoa@w+1,pad@p+1
  5728  000DB0  EC35  F025         	call	_pad	;wreg free
  5729  000DB4  C012  F03C         	movff	?_pad,?_efgtoa
  5730  000DB8  C013  F03D         	movff	?_pad+1,?_efgtoa+1
  5731  000DBC  EF2B  F00C         	goto	l1316
  5732  000DC0                     l5031:
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  5735  000DC0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  5736  000DC4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5737  000DC8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5738  000DCC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5739  000DD0  EC8A  F022         	call	___fpclassifyf	;wreg free
  5740  000DD4  5001               	movf	?___fpclassifyf^0,w,c
  5741  000DD6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5742  000DD8  A4D8               	btfss	status,2,c
  5743  000DDA  EFF1  F006         	goto	u4911
  5744  000DDE  EFF3  F006         	goto	u4910
  5745  000DE2                     u4911:
  5746  000DE2  EF27  F007         	goto	l5049
  5747  000DE6                     u4910:
  5748  000DE6  0EBF               	movlw	191
  5749  000DE8  6E43               	movwf	??_efgtoa^0,c
  5750  000DEA  0EFF               	movlw	255
  5751  000DEC  6E44               	movwf	(??_efgtoa+1)^0,c
  5752  000DEE  5042               	movf	efgtoa@c^0,w,c
  5753  000DF0  6E45               	movwf	(??_efgtoa+2)^0,c
  5754  000DF2  6A46               	clrf	(??_efgtoa+3)^0,c
  5755  000DF4  5043               	movf	??_efgtoa^0,w,c
  5756  000DF6  2645               	addwf	(??_efgtoa+2)^0,f,c
  5757  000DF8  5044               	movf	(??_efgtoa+1)^0,w,c
  5758  000DFA  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5759  000DFC  5046               	movf	(??_efgtoa+3)^0,w,c
  5760  000DFE  E107               	bnz	u4921
  5761  000E00  0E1A               	movlw	26
  5762  000E02  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5763  000E04  B0D8               	btfsc	status,0,c
  5764  000E06  EF07  F007         	goto	u4921
  5765  000E0A  EF09  F007         	goto	u4920
  5766  000E0E                     u4921:
  5767  000E0E  EF18  F007         	goto	l5041
  5768  000E12                     u4920:
  5769  000E12                     
  5770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5771  000E12  0E00               	movlw	low _dbuf
  5772  000E14  0100               	movlb	0	; () banked
  5773  000E16  258C               	addwf	efgtoa@n& (0+255),w,b
  5774  000E18  6E01               	movwf	strcpy@dest^0,c
  5775  000E1A  0E02               	movlw	high _dbuf
  5776  000E1C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5777  000E1E  6E02               	movwf	(strcpy@dest+1)^0,c
  5778  000E20  0EEB               	movlw	low STR_48
  5779  000E22  6E03               	movwf	strcpy@src^0,c
  5780  000E24  0E7F               	movlw	high STR_48
  5781  000E26  6E04               	movwf	(strcpy@src+1)^0,c
  5782  000E28  ECAC  F029         	call	_strcpy	;wreg free
  5783                           
  5784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5785  000E2C  EFC7  F006         	goto	l5025
  5786  000E30                     l5041:
  5787                           
  5788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5789  000E30  0E00               	movlw	low _dbuf
  5790  000E32  0100               	movlb	0	; () banked
  5791  000E34  258C               	addwf	efgtoa@n& (0+255),w,b
  5792  000E36  6E01               	movwf	strcpy@dest^0,c
  5793  000E38  0E02               	movlw	high _dbuf
  5794  000E3A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5795  000E3C  6E02               	movwf	(strcpy@dest+1)^0,c
  5796  000E3E  0EF3               	movlw	low STR_49
  5797  000E40  6E03               	movwf	strcpy@src^0,c
  5798  000E42  0E7F               	movlw	high STR_49
  5799  000E44  6E04               	movwf	(strcpy@src+1)^0,c
  5800  000E46  ECAC  F029         	call	_strcpy	;wreg free
  5801  000E4A  EFC7  F006         	goto	l5025
  5802  000E4E                     l5049:
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5805  000E4E  0E00               	movlw	0
  5806  000E50  0100               	movlb	0	; () banked
  5807  000E52  6F8E               	movwf	efgtoa@u& (0+255),b
  5808  000E54  0E00               	movlw	0
  5809  000E56  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  5810  000E58  0E80               	movlw	128
  5811  000E5A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  5812  000E5C  0E3F               	movlw	63
  5813  000E5E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  5814                           
  5815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5816  000E60  0E00               	movlw	0
  5817  000E62  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  5818  000E64  0E00               	movlw	0
  5819  000E66  6F8A               	movwf	efgtoa@e& (0+255),b
  5820  000E68                     
  5821                           ; BSR set to: 0
  5822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5823  000E68  C086  F001         	movff	efgtoa@g,___fleq@ff1
  5824  000E6C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5825  000E70  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5826  000E74  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5827  000E78  0E00               	movlw	0
  5828  000E7A  6E05               	movwf	___fleq@ff2^0,c
  5829  000E7C  0E00               	movlw	0
  5830  000E7E  6E06               	movwf	(___fleq@ff2+1)^0,c
  5831  000E80  0E00               	movlw	0
  5832  000E82  6E07               	movwf	(___fleq@ff2+2)^0,c
  5833  000E84  0E00               	movlw	0
  5834  000E86  6E08               	movwf	(___fleq@ff2+3)^0,c
  5835  000E88  ECAD  F026         	call	___fleq	;wreg free
  5836  000E8C  B0D8               	btfsc	status,0,c
  5837  000E8E  EF4B  F007         	goto	u4931
  5838  000E92  EF4D  F007         	goto	u4930
  5839  000E96                     u4931:
  5840  000E96  EFD0  F007         	goto	l5067
  5841  000E9A                     u4930:
  5842  000E9A  EF6C  F007         	goto	l5059
  5843  000E9E                     l5055:
  5844                           
  5845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5846  000E9E  C08E  F00F         	movff	efgtoa@u,___flmul@b
  5847  000EA2  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  5848  000EA6  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  5849  000EAA  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  5850  000EAE  0E00               	movlw	0
  5851  000EB0  6E13               	movwf	___flmul@a^0,c
  5852  000EB2  0E00               	movlw	0
  5853  000EB4  6E14               	movwf	(___flmul@a+1)^0,c
  5854  000EB6  0E20               	movlw	32
  5855  000EB8  6E15               	movwf	(___flmul@a+2)^0,c
  5856  000EBA  0E41               	movlw	65
  5857  000EBC  6E16               	movwf	(___flmul@a+3)^0,c
  5858  000EBE  ECD6  F014         	call	___flmul	;wreg free
  5859  000EC2  C00F  F08E         	movff	?___flmul,efgtoa@u
  5860  000EC6  C010  F08F         	movff	?___flmul+1,efgtoa@u+1
  5861  000ECA  C011  F090         	movff	?___flmul+2,efgtoa@u+2
  5862  000ECE  C012  F091         	movff	?___flmul+3,efgtoa@u+3
  5863  000ED2                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5865  000ED2  0100               	movlb	0	; () banked
  5866  000ED4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  5867  000ED6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  5868  000ED8                     l5059:
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5871  000ED8  C086  F028         	movff	efgtoa@g,___flge@ff1
  5872  000EDC  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5873  000EE0  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5874  000EE4  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5875  000EE8  0E00               	movlw	0
  5876  000EEA  6E13               	movwf	___flmul@a^0,c
  5877  000EEC  0E00               	movlw	0
  5878  000EEE  6E14               	movwf	(___flmul@a+1)^0,c
  5879  000EF0  0E20               	movlw	32
  5880  000EF2  6E15               	movwf	(___flmul@a+2)^0,c
  5881  000EF4  0E41               	movlw	65
  5882  000EF6  6E16               	movwf	(___flmul@a+3)^0,c
  5883  000EF8  C08E  F00F         	movff	efgtoa@u,___flmul@b
  5884  000EFC  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  5885  000F00  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  5886  000F04  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  5887  000F08  ECD6  F014         	call	___flmul	;wreg free
  5888  000F0C  C00F  F02C         	movff	?___flmul,___flge@ff2
  5889  000F10  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5890  000F14  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5891  000F18  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5892  000F1C  EC88  F021         	call	___flge	;wreg free
  5893  000F20  B0D8               	btfsc	status,0,c
  5894  000F22  EF95  F007         	goto	u4941
  5895  000F26  EF97  F007         	goto	u4940
  5896  000F2A                     u4941:
  5897  000F2A  EF4F  F007         	goto	l5055
  5898  000F2E                     u4940:
  5899  000F2E  EFB7  F007         	goto	l5065
  5900  000F32                     l5061:
  5901                           
  5902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5903  000F32  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  5904  000F36  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5905  000F3A  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5906  000F3E  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5907  000F42  0E00               	movlw	0
  5908  000F44  6E13               	movwf	___fldiv@a^0,c
  5909  000F46  0E00               	movlw	0
  5910  000F48  6E14               	movwf	(___fldiv@a+1)^0,c
  5911  000F4A  0E20               	movlw	32
  5912  000F4C  6E15               	movwf	(___fldiv@a+2)^0,c
  5913  000F4E  0E41               	movlw	65
  5914  000F50  6E16               	movwf	(___fldiv@a+3)^0,c
  5915  000F52  ECEB  F016         	call	___fldiv	;wreg free
  5916  000F56  C00F  F08E         	movff	?___fldiv,efgtoa@u
  5917  000F5A  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  5918  000F5E  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  5919  000F62  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  5920  000F66                     
  5921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5922  000F66  0100               	movlb	0	; () banked
  5923  000F68  078A               	decf	efgtoa@e& (0+255),f,b
  5924  000F6A  A0D8               	btfss	status,0,c
  5925  000F6C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  5926  000F6E                     l5065:
  5927                           
  5928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5929  000F6E  C086  F028         	movff	efgtoa@g,___flge@ff1
  5930  000F72  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5931  000F76  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5932  000F7A  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5933  000F7E  C08E  F02C         	movff	efgtoa@u,___flge@ff2
  5934  000F82  C08F  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  5935  000F86  C090  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  5936  000F8A  C091  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  5937  000F8E  EC88  F021         	call	___flge	;wreg free
  5938  000F92  A0D8               	btfss	status,0,c
  5939  000F94  EFCE  F007         	goto	u4951
  5940  000F98  EFD0  F007         	goto	u4950
  5941  000F9C                     u4951:
  5942  000F9C  EF99  F007         	goto	l5061
  5943  000FA0                     u4950:
  5944  000FA0                     l5067:
  5945                           
  5946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5947  000FA0  C042  F007         	movff	efgtoa@c,tolower@c
  5948  000FA4  6A08               	clrf	(tolower@c+1)^0,c
  5949  000FA6  EC7A  F02A         	call	_tolower	;wreg free
  5950  000FAA  5007               	movf	?_tolower^0,w,c
  5951  000FAC  0100               	movlb	0	; () banked
  5952  000FAE  6F7B               	movwf	efgtoa@mode& (0+255),b
  5953  000FB0                     
  5954                           ; BSR set to: 0
  5955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5956  000FB0  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  5957  000FB4                     
  5958                           ; BSR set to: 0
  5959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5960  000FB4  0E67               	movlw	103
  5961  000FB6  197B               	xorwf	efgtoa@mode& (0+255),w,b
  5962  000FB8  A4D8               	btfss	status,2,c
  5963  000FBA  EFE1  F007         	goto	u4961
  5964  000FBE  EFE3  F007         	goto	u4960
  5965  000FC2                     u4961:
  5966  000FC2  EF09  F008         	goto	l5081
  5967  000FC6                     u4960:
  5968  000FC6                     
  5969                           ; BSR set to: 0
  5970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5971  000FC6  51DF               	movf	_prec& (0+255),w,b
  5972  000FC8  11E0               	iorwf	(_prec+1)& (0+255),w,b
  5973  000FCA  A4D8               	btfss	status,2,c
  5974  000FCC  EFEA  F007         	goto	u4971
  5975  000FD0  EFEC  F007         	goto	u4970
  5976  000FD4                     u4971:
  5977  000FD4  EFF0  F007         	goto	l5077
  5978  000FD8                     u4970:
  5979  000FD8                     
  5980                           ; BSR set to: 0
  5981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5982  000FD8  0E00               	movlw	0
  5983  000FDA  6FE0               	movwf	(_prec+1)& (0+255),b
  5984  000FDC  0E01               	movlw	1
  5985  000FDE  6FDF               	movwf	_prec& (0+255),b
  5986  000FE0                     l5077:
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5990  000FE0  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  5991  000FE2  EFFD  F007         	goto	u4980
  5992  000FE6  51E0               	movf	(_prec+1)& (0+255),w,b
  5993  000FE8  E106               	bnz	u4981
  5994  000FEA  05DF               	decf	_prec& (0+255),w,b
  5995  000FEC  B0D8               	btfsc	status,0,c
  5996  000FEE  EFFB  F007         	goto	u4981
  5997  000FF2  EFFD  F007         	goto	u4980
  5998  000FF6                     u4981:
  5999  000FF6  EF03  F008         	goto	l1332
  6000  000FFA                     u4980:
  6001  000FFA                     l5079:
  6002                           
  6003                           ; BSR set to: 0
  6004  000FFA  0E00               	movlw	0
  6005  000FFC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  6006  000FFE  0E06               	movlw	6
  6007  001000  6F76               	movwf	efgtoa@p& (0+255),b
  6008  001002  EF12  F008         	goto	l5087
  6009  001006                     l1332:
  6010                           
  6011                           ; BSR set to: 0
  6012  001006  C0DF  F076         	movff	_prec,efgtoa@p
  6013  00100A  C0E0  F077         	movff	_prec+1,efgtoa@p+1
  6014  00100E  EF12  F008         	goto	l5087
  6015  001012                     l5081:
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6019  001012  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  6020  001014  EF0E  F008         	goto	u4991
  6021  001018  EF10  F008         	goto	u4990
  6022  00101C                     u4991:
  6023  00101C  EFFD  F007         	goto	l5079
  6024  001020                     u4990:
  6025  001020  EF03  F008         	goto	l1332
  6026  001024                     l5087:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6030  001024  0E67               	movlw	103
  6031  001026  197B               	xorwf	efgtoa@mode& (0+255),w,b
  6032  001028  A4D8               	btfss	status,2,c
  6033  00102A  EF19  F008         	goto	u5001
  6034  00102E  EF1B  F008         	goto	u5000
  6035  001032                     u5001:
  6036  001032  EF4A  F008         	goto	l5097
  6037  001036                     u5000:
  6038  001036                     
  6039                           ; BSR set to: 0
  6040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6041  001036  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  6042  001038  EF29  F008         	goto	u5010
  6043  00103C  0EFC               	movlw	252
  6044  00103E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  6045  001040  0EFF               	movlw	255
  6046  001042  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6047  001044  A0D8               	btfss	status,0,c
  6048  001046  EF27  F008         	goto	u5011
  6049  00104A  EF29  F008         	goto	u5010
  6050  00104E                     u5011:
  6051  00104E  EF48  F008         	goto	l5095
  6052  001052                     u5010:
  6053  001052                     
  6054                           ; BSR set to: 0
  6055  001052  0EFF               	movlw	255
  6056  001054  6E43               	movwf	??_efgtoa^0,c
  6057  001056  0EFF               	movlw	255
  6058  001058  6E44               	movwf	(??_efgtoa+1)^0,c
  6059  00105A  C076  F045         	movff	efgtoa@p,??_efgtoa+2
  6060  00105E  C077  F046         	movff	efgtoa@p+1,??_efgtoa+3
  6061  001062  5043               	movf	??_efgtoa^0,w,c
  6062  001064  2645               	addwf	(??_efgtoa+2)^0,f,c
  6063  001066  5044               	movf	(??_efgtoa+1)^0,w,c
  6064  001068  2246               	addwfc	(??_efgtoa+3)^0,f,c
  6065  00106A  518A               	movf	efgtoa@e& (0+255),w,b
  6066  00106C  5C45               	subwf	(??_efgtoa+2)^0,w,c
  6067  00106E  5046               	movf	(??_efgtoa+3)^0,w,c
  6068  001070  0A80               	xorlw	128
  6069  001072  6E47               	movwf	(??_efgtoa+4)^0,c
  6070  001074  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  6071  001076  0A80               	xorlw	128
  6072  001078  5847               	subwfb	(??_efgtoa+4)^0,w,c
  6073  00107A  A0D8               	btfss	status,0,c
  6074  00107C  EF42  F008         	goto	u5021
  6075  001080  EF44  F008         	goto	u5020
  6076  001084                     u5021:
  6077  001084  EF48  F008         	goto	l5095
  6078  001088                     u5020:
  6079  001088                     
  6080                           ; BSR set to: 0
  6081                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6082  001088  0E66               	movlw	102
  6083  00108A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  6084                           
  6085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6086  00108C  EF4A  F008         	goto	l5097
  6087  001090                     l5095:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6091  001090  0E65               	movlw	101
  6092  001092  6F7A               	movwf	efgtoa@nmode& (0+255),b
  6093  001094                     l5097:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6097  001094  C076  F06C         	movff	efgtoa@p,efgtoa@m
  6098  001098  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  6099  00109C                     
  6100                           ; BSR set to: 0
  6101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6102  00109C  0E67               	movlw	103
  6103  00109E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  6104  0010A0  A4D8               	btfss	status,2,c
  6105  0010A2  EF55  F008         	goto	u5031
  6106  0010A6  EF57  F008         	goto	u5030
  6107  0010AA                     u5031:
  6108  0010AA  EF67  F008         	goto	l5105
  6109  0010AE                     u5030:
  6110  0010AE                     
  6111                           ; BSR set to: 0
  6112  0010AE  0E66               	movlw	102
  6113  0010B0  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  6114  0010B2  A4D8               	btfss	status,2,c
  6115  0010B4  EF5E  F008         	goto	u5041
  6116  0010B8  EF60  F008         	goto	u5040
  6117  0010BC                     u5041:
  6118  0010BC  EF69  F008         	goto	l5107
  6119  0010C0                     u5040:
  6120  0010C0                     
  6121                           ; BSR set to: 0
  6122  0010C0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6123  0010C2  EF67  F008         	goto	u5050
  6124  0010C6  EF65  F008         	goto	u5051
  6125  0010CA                     u5051:
  6126  0010CA  EF69  F008         	goto	l5107
  6127  0010CE                     u5050:
  6128  0010CE                     l5105:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6132  0010CE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  6133  0010D0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  6134  0010D2                     l5107:
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6138  0010D2  0E66               	movlw	102
  6139  0010D4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  6140  0010D6  A4D8               	btfss	status,2,c
  6141  0010D8  EF70  F008         	goto	u5061
  6142  0010DC  EF72  F008         	goto	u5060
  6143  0010E0                     u5061:
  6144  0010E0  EF92  F008         	goto	l5117
  6145  0010E4                     u5060:
  6146  0010E4                     
  6147                           ; BSR set to: 0
  6148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6149  0010E4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6150  0010E6  EF79  F008         	goto	u5070
  6151  0010EA  EF77  F008         	goto	u5071
  6152  0010EE                     u5071:
  6153  0010EE  EF85  F008         	goto	l5113
  6154  0010F2                     u5070:
  6155  0010F2                     
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6158  0010F2  0E00               	movlw	0
  6159  0010F4  6F8E               	movwf	efgtoa@u& (0+255),b
  6160  0010F6  0E00               	movlw	0
  6161  0010F8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  6162  0010FA  0E80               	movlw	128
  6163  0010FC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  6164  0010FE  0E3F               	movlw	63
  6165  001100  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  6166                           
  6167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6168  001102  0E00               	movlw	0
  6169  001104  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  6170  001106  0E00               	movlw	0
  6171  001108  6F8A               	movwf	efgtoa@e& (0+255),b
  6172  00110A                     l5113:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6176  00110A  0E67               	movlw	103
  6177  00110C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  6178  00110E  B4D8               	btfsc	status,2,c
  6179  001110  EF8C  F008         	goto	u5081
  6180  001114  EF8E  F008         	goto	u5080
  6181  001118                     u5081:
  6182  001118  EF92  F008         	goto	l5117
  6183  00111C                     u5080:
  6184  00111C                     
  6185                           ; BSR set to: 0
  6186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6187  00111C  518A               	movf	efgtoa@e& (0+255),w,b
  6188  00111E  276C               	addwf	efgtoa@m& (0+255),f,b
  6189  001120  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  6190  001122  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6191  001124                     l5117:
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6195  001124  0E00               	movlw	0
  6196  001126  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  6197  001128  0E00               	movlw	0
  6198  00112A  6F84               	movwf	efgtoa@i& (0+255),b
  6199  00112C                     
  6200                           ; BSR set to: 0
  6201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6202  00112C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  6203  001130  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  6204  001134  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  6205  001138  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  6206  00113C                     
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6209  00113C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  6210  001140  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  6211  001144  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  6212  001148  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6215  00114C  EF23  F009         	goto	l5131
  6216  001150                     l5123:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6220  001150  C07C  F00F         	movff	efgtoa@h,___fldiv@b
  6221  001154  C07D  F010         	movff	efgtoa@h+1,___fldiv@b+1
  6222  001158  C07E  F011         	movff	efgtoa@h+2,___fldiv@b+2
  6223  00115C  C07F  F012         	movff	efgtoa@h+3,___fldiv@b+3
  6224  001160  C08E  F013         	movff	efgtoa@u,___fldiv@a
  6225  001164  C08F  F014         	movff	efgtoa@u+1,___fldiv@a+1
  6226  001168  C090  F015         	movff	efgtoa@u+2,___fldiv@a+2
  6227  00116C  C091  F016         	movff	efgtoa@u+3,___fldiv@a+3
  6228  001170  ECEB  F016         	call	___fldiv	;wreg free
  6229  001174  C00F  F028         	movff	?___fldiv,floorf@x
  6230  001178  C010  F029         	movff	?___fldiv+1,floorf@x+1
  6231  00117C  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  6232  001180  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  6233  001184  ECF6  F019         	call	_floorf	;wreg free
  6234  001188  C028  F080         	movff	?_floorf,efgtoa@l
  6235  00118C  C029  F081         	movff	?_floorf+1,efgtoa@l+1
  6236  001190  C02A  F082         	movff	?_floorf+2,efgtoa@l+2
  6237  001194  C02B  F083         	movff	?_floorf+3,efgtoa@l+3
  6238                           
  6239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6240  001198  C080  F001         	movff	efgtoa@l,___fltol@f1
  6241  00119C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6242  0011A0  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6243  0011A4  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6244  0011A8  EC05  F021         	call	___fltol	;wreg free
  6245  0011AC  C001  F072         	movff	?___fltol,efgtoa@d
  6246  0011B0  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  6247  0011B4                     
  6248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6249  0011B4  C07C  F028         	movff	efgtoa@h,___flsub@b
  6250  0011B8  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  6251  0011BC  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  6252  0011C0  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  6253  0011C4  C08E  F013         	movff	efgtoa@u,___flmul@a
  6254  0011C8  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  6255  0011CC  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  6256  0011D0  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  6257  0011D4  C080  F00F         	movff	efgtoa@l,___flmul@b
  6258  0011D8  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  6259  0011DC  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  6260  0011E0  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  6261  0011E4  ECD6  F014         	call	___flmul	;wreg free
  6262  0011E8  C00F  F02C         	movff	?___flmul,___flsub@a
  6263  0011EC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  6264  0011F0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  6265  0011F4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  6266  0011F8  EC9D  F02A         	call	___flsub	;wreg free
  6267  0011FC  C028  F07C         	movff	?___flsub,efgtoa@h
  6268  001200  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  6269  001204  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  6270  001208  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  6271  00120C                     
  6272                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6273  00120C  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  6274  001210  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  6275  001214  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  6276  001218  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  6277  00121C  0E00               	movlw	0
  6278  00121E  6E13               	movwf	___fldiv@a^0,c
  6279  001220  0E00               	movlw	0
  6280  001222  6E14               	movwf	(___fldiv@a+1)^0,c
  6281  001224  0E20               	movlw	32
  6282  001226  6E15               	movwf	(___fldiv@a+2)^0,c
  6283  001228  0E41               	movlw	65
  6284  00122A  6E16               	movwf	(___fldiv@a+3)^0,c
  6285  00122C  ECEB  F016         	call	___fldiv	;wreg free
  6286  001230  C00F  F08E         	movff	?___fldiv,efgtoa@u
  6287  001234  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  6288  001238  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  6289  00123C  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  6290  001240                     
  6291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6292  001240  0100               	movlb	0	; () banked
  6293  001242  4B84               	infsnz	efgtoa@i& (0+255),f,b
  6294  001244  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  6295  001246                     l5131:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6299  001246  516C               	movf	efgtoa@m& (0+255),w,b
  6300  001248  5D84               	subwf	efgtoa@i& (0+255),w,b
  6301  00124A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  6302  00124C  0A80               	xorlw	128
  6303  00124E  6E43               	movwf	??_efgtoa^0,c
  6304  001250  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  6305  001252  0A80               	xorlw	128
  6306  001254  5843               	subwfb	??_efgtoa^0,w,c
  6307  001256  A0D8               	btfss	status,0,c
  6308  001258  EF30  F009         	goto	u5091
  6309  00125C  EF32  F009         	goto	u5090
  6310  001260                     u5091:
  6311  001260  EFA8  F008         	goto	l5123
  6312  001264                     u5090:
  6313  001264                     
  6314                           ; BSR set to: 0
  6315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6316  001264  C08E  F00F         	movff	efgtoa@u,___flmul@b
  6317  001268  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  6318  00126C  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  6319  001270  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  6320  001274  0E00               	movlw	0
  6321  001276  6E13               	movwf	___flmul@a^0,c
  6322  001278  0E00               	movlw	0
  6323  00127A  6E14               	movwf	(___flmul@a+1)^0,c
  6324  00127C  0EA0               	movlw	160
  6325  00127E  6E15               	movwf	(___flmul@a+2)^0,c
  6326  001280  0E40               	movlw	64
  6327  001282  6E16               	movwf	(___flmul@a+3)^0,c
  6328  001284  ECD6  F014         	call	___flmul	;wreg free
  6329  001288  C00F  F080         	movff	?___flmul,efgtoa@l
  6330  00128C  C010  F081         	movff	?___flmul+1,efgtoa@l+1
  6331  001290  C011  F082         	movff	?___flmul+2,efgtoa@l+2
  6332  001294  C012  F083         	movff	?___flmul+3,efgtoa@l+3
  6333  001298                     
  6334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  6335  001298  C07C  F028         	movff	efgtoa@h,___flge@ff1
  6336  00129C  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  6337  0012A0  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  6338  0012A4  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  6339  0012A8  C080  F02C         	movff	efgtoa@l,___flge@ff2
  6340  0012AC  C081  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  6341  0012B0  C082  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  6342  0012B4  C083  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  6343  0012B8  EC88  F021         	call	___flge	;wreg free
  6344  0012BC  B0D8               	btfsc	status,0,c
  6345  0012BE  EF63  F009         	goto	u5101
  6346  0012C2  EF65  F009         	goto	u5100
  6347  0012C6                     u5101:
  6348  0012C6  EF70  F009         	goto	l5139
  6349  0012CA                     u5100:
  6350  0012CA                     
  6351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  6352  0012CA  0E00               	movlw	0
  6353  0012CC  0100               	movlb	0	; () banked
  6354  0012CE  6F80               	movwf	efgtoa@l& (0+255),b
  6355  0012D0  0E00               	movlw	0
  6356  0012D2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  6357  0012D4  0E00               	movlw	0
  6358  0012D6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  6359  0012D8  0E00               	movlw	0
  6360  0012DA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  6363  0012DC  EF99  F009         	goto	l5145
  6364  0012E0                     l5139:
  6365                           
  6366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  6367  0012E0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  6368  0012E4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6369  0012E8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6370  0012EC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6371  0012F0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  6372  0012F4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6373  0012F8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6374  0012FC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6375  001300  ECAD  F026         	call	___fleq	;wreg free
  6376  001304  A0D8               	btfss	status,0,c
  6377  001306  EF87  F009         	goto	u5111
  6378  00130A  EF89  F009         	goto	u5110
  6379  00130E                     u5111:
  6380  00130E  EF99  F009         	goto	l5145
  6381  001312                     u5110:
  6382  001312  0100               	movlb	0	; () banked
  6383  001314  B172               	btfsc	efgtoa@d& (0+255),0,b
  6384  001316  EF8F  F009         	goto	u5121
  6385  00131A  EF91  F009         	goto	u5120
  6386  00131E                     u5121:
  6387  00131E  EF99  F009         	goto	l5145
  6388  001322                     u5120:
  6389  001322                     
  6390                           ; BSR set to: 0
  6391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6392  001322  0E00               	movlw	0
  6393  001324  6F80               	movwf	efgtoa@l& (0+255),b
  6394  001326  0E00               	movlw	0
  6395  001328  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  6396  00132A  0E00               	movlw	0
  6397  00132C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  6398  00132E  0E00               	movlw	0
  6399  001330  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  6400  001332                     l5145:
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6403  001332  C086  F001         	movff	efgtoa@g,___fladd@b
  6404  001336  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  6405  00133A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  6406  00133E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  6407  001342  C080  F005         	movff	efgtoa@l,___fladd@a
  6408  001346  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  6409  00134A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  6410  00134E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  6411  001352  EC76  F012         	call	___fladd	;wreg free
  6412  001356  C001  F07C         	movff	?___fladd,efgtoa@h
  6413  00135A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  6414  00135E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  6415  001362  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  6416  001366                     
  6417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6418  001366  C07C  F028         	movff	efgtoa@h,___flge@ff1
  6419  00136A  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  6420  00136E  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  6421  001372  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  6422  001376  0E00               	movlw	0
  6423  001378  6E13               	movwf	___flmul@a^0,c
  6424  00137A  0E00               	movlw	0
  6425  00137C  6E14               	movwf	(___flmul@a+1)^0,c
  6426  00137E  0E20               	movlw	32
  6427  001380  6E15               	movwf	(___flmul@a+2)^0,c
  6428  001382  0E41               	movlw	65
  6429  001384  6E16               	movwf	(___flmul@a+3)^0,c
  6430  001386  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  6431  00138A  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  6432  00138E  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  6433  001392  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  6434  001396  ECD6  F014         	call	___flmul	;wreg free
  6435  00139A  C00F  F02C         	movff	?___flmul,___flge@ff2
  6436  00139E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  6437  0013A2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  6438  0013A6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  6439  0013AA  EC88  F021         	call	___flge	;wreg free
  6440  0013AE  A0D8               	btfss	status,0,c
  6441  0013B0  EFDC  F009         	goto	u5131
  6442  0013B4  EFDE  F009         	goto	u5130
  6443  0013B8                     u5131:
  6444  0013B8  EF07  F00A         	goto	l5157
  6445  0013BC                     u5130:
  6446  0013BC                     
  6447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  6448  0013BC  0100               	movlb	0	; () banked
  6449  0013BE  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  6450  0013C0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  6451  0013C2                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  6454  0013C2  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  6455  0013C6  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  6456  0013CA  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  6457  0013CE  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  6458  0013D2  0E00               	movlw	0
  6459  0013D4  6E13               	movwf	___flmul@a^0,c
  6460  0013D6  0E00               	movlw	0
  6461  0013D8  6E14               	movwf	(___flmul@a+1)^0,c
  6462  0013DA  0E20               	movlw	32
  6463  0013DC  6E15               	movwf	(___flmul@a+2)^0,c
  6464  0013DE  0E41               	movlw	65
  6465  0013E0  6E16               	movwf	(___flmul@a+3)^0,c
  6466  0013E2  ECD6  F014         	call	___flmul	;wreg free
  6467  0013E6  C00F  F06E         	movff	?___flmul,efgtoa@ou
  6468  0013EA  C010  F06F         	movff	?___flmul+1,efgtoa@ou+1
  6469  0013EE  C011  F070         	movff	?___flmul+2,efgtoa@ou+2
  6470  0013F2  C012  F071         	movff	?___flmul+3,efgtoa@ou+3
  6471  0013F6                     
  6472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  6473  0013F6  0E66               	movlw	102
  6474  0013F8  0100               	movlb	0	; () banked
  6475  0013FA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  6476  0013FC  A4D8               	btfss	status,2,c
  6477  0013FE  EF03  F00A         	goto	u5141
  6478  001402  EF05  F00A         	goto	u5140
  6479  001406                     u5141:
  6480  001406  EF07  F00A         	goto	l5157
  6481  00140A                     u5140:
  6482  00140A                     
  6483                           ; BSR set to: 0
  6484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  6485  00140A  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  6486  00140C  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  6487  00140E                     l5157:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  6490  00140E  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  6491  001412  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  6492  001416  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  6493  00141A  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  6494  00141E                     
  6495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  6496  00141E  0E65               	movlw	101
  6497  001420  0100               	movlb	0	; () banked
  6498  001422  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  6499  001424  B4D8               	btfsc	status,2,c
  6500  001426  EF17  F00A         	goto	u5151
  6501  00142A  EF19  F00A         	goto	u5150
  6502  00142E                     u5151:
  6503  00142E  EF1F  F00A         	goto	l5163
  6504  001432                     u5150:
  6505  001432                     
  6506                           ; BSR set to: 0
  6507  001432  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  6508  001436  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  6509  00143A  EF23  F00A         	goto	l1360
  6510  00143E                     l5163:
  6511                           
  6512                           ; BSR set to: 0
  6513  00143E  0E00               	movlw	0
  6514  001440  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  6515  001442  0E00               	movlw	0
  6516  001444  6F6A               	movwf	efgtoa@ne& (0+255),b
  6517  001446                     l1360:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  6521  001446  0E00               	movlw	0
  6522  001448  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  6523  00144A  0E00               	movlw	0
  6524  00144C  6F68               	movwf	efgtoa@pp& (0+255),b
  6525                           
  6526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  6527  00144E  0E00               	movlw	0
  6528  001450  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  6529  001452  0E00               	movlw	0
  6530  001454  6F66               	movwf	efgtoa@t& (0+255),b
  6531                           
  6532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  6533  001456  0E00               	movlw	0
  6534  001458  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  6535  00145A  0E00               	movlw	0
  6536  00145C  6F84               	movwf	efgtoa@i& (0+255),b
  6537                           
  6538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6539  00145E  EF1E  F00B         	goto	l5213
  6540  001462                     l5165:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  6544  001462  C07C  F00F         	movff	efgtoa@h,___fldiv@b
  6545  001466  C07D  F010         	movff	efgtoa@h+1,___fldiv@b+1
  6546  00146A  C07E  F011         	movff	efgtoa@h+2,___fldiv@b+2
  6547  00146E  C07F  F012         	movff	efgtoa@h+3,___fldiv@b+3
  6548  001472  C08E  F013         	movff	efgtoa@u,___fldiv@a
  6549  001476  C08F  F014         	movff	efgtoa@u+1,___fldiv@a+1
  6550  00147A  C090  F015         	movff	efgtoa@u+2,___fldiv@a+2
  6551  00147E  C091  F016         	movff	efgtoa@u+3,___fldiv@a+3
  6552  001482  ECEB  F016         	call	___fldiv	;wreg free
  6553  001486  C00F  F028         	movff	?___fldiv,floorf@x
  6554  00148A  C010  F029         	movff	?___fldiv+1,floorf@x+1
  6555  00148E  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  6556  001492  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  6557  001496  ECF6  F019         	call	_floorf	;wreg free
  6558  00149A  C028  F080         	movff	?_floorf,efgtoa@l
  6559  00149E  C029  F081         	movff	?_floorf+1,efgtoa@l+1
  6560  0014A2  C02A  F082         	movff	?_floorf+2,efgtoa@l+2
  6561  0014A6  C02B  F083         	movff	?_floorf+3,efgtoa@l+3
  6562                           
  6563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  6564  0014AA  C080  F001         	movff	efgtoa@l,___fltol@f1
  6565  0014AE  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6566  0014B2  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6567  0014B6  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6568  0014BA  EC05  F021         	call	___fltol	;wreg free
  6569  0014BE  C001  F072         	movff	?___fltol,efgtoa@d
  6570  0014C2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  6571  0014C6                     
  6572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6573  0014C6  0100               	movlb	0	; () banked
  6574  0014C8  B9E1               	btfsc	_flags& (0+255),4,b
  6575  0014CA  EF69  F00A         	goto	u5161
  6576  0014CE  EF6B  F00A         	goto	u5160
  6577  0014D2                     u5161:
  6578  0014D2  EF88  F00A         	goto	l5177
  6579  0014D6                     u5160:
  6580  0014D6                     
  6581                           ; BSR set to: 0
  6582  0014D6  5172               	movf	efgtoa@d& (0+255),w,b
  6583  0014D8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6584  0014DA  A4D8               	btfss	status,2,c
  6585  0014DC  EF72  F00A         	goto	u5171
  6586  0014E0  EF74  F00A         	goto	u5170
  6587  0014E4                     u5171:
  6588  0014E4  EF88  F00A         	goto	l5177
  6589  0014E8                     u5170:
  6590  0014E8                     
  6591                           ; BSR set to: 0
  6592  0014E8  0E67               	movlw	103
  6593  0014EA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  6594  0014EC  A4D8               	btfss	status,2,c
  6595  0014EE  EF7B  F00A         	goto	u5181
  6596  0014F2  EF7D  F00A         	goto	u5180
  6597  0014F6                     u5181:
  6598  0014F6  EF88  F00A         	goto	l5177
  6599  0014FA                     u5180:
  6600  0014FA                     
  6601                           ; BSR set to: 0
  6602  0014FA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6603  0014FC  EF84  F00A         	goto	u5190
  6604  001500  EF82  F00A         	goto	u5191
  6605  001504                     u5191:
  6606  001504  EF88  F00A         	goto	l5177
  6607  001508                     u5190:
  6608  001508                     
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  6611  001508  4B66               	infsnz	efgtoa@t& (0+255),f,b
  6612  00150A  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  6613                           
  6614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  6615  00150C  EFD2  F00A         	goto	l5205
  6616  001510                     l5177:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  6620  001510  5168               	movf	efgtoa@pp& (0+255),w,b
  6621  001512  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6622  001514  A4D8               	btfss	status,2,c
  6623  001516  EF8F  F00A         	goto	u5201
  6624  00151A  EF91  F00A         	goto	u5200
  6625  00151E                     u5201:
  6626  00151E  EFBB  F00A         	goto	l5197
  6627  001522                     u5200:
  6628  001522                     
  6629                           ; BSR set to: 0
  6630  001522  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6631  001524  EF98  F00A         	goto	u5210
  6632  001528  EF96  F00A         	goto	u5211
  6633  00152C                     u5211:
  6634  00152C  EFBB  F00A         	goto	l5197
  6635  001530                     u5210:
  6636  001530                     
  6637                           ; BSR set to: 0
  6638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  6639  001530  0E00               	movlw	low _dbuf
  6640  001532  258C               	addwf	efgtoa@n& (0+255),w,b
  6641  001534  6ED9               	movwf	fsr2l,c
  6642  001536  0E02               	movlw	high _dbuf
  6643  001538  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6644  00153A  6EDA               	movwf	fsr2h,c
  6645  00153C  0E2E               	movlw	46
  6646  00153E  6EDF               	movwf	indf2,c
  6647  001540                     
  6648                           ; BSR set to: 0
  6649  001540  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  6650  001542  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  6651  001544                     
  6652                           ; BSR set to: 0
  6653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  6654  001544  0778               	decf	efgtoa@w& (0+255),f,b
  6655  001546  A0D8               	btfss	status,0,c
  6656  001548  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  6657  00154A                     
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  6660  00154A  0E00               	movlw	0
  6661  00154C  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  6662  00154E  0E01               	movlw	1
  6663  001550  6F68               	movwf	efgtoa@pp& (0+255),b
  6664  001552  EFBB  F00A         	goto	l5197
  6665  001556                     l5189:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6669  001556  0E00               	movlw	low _dbuf
  6670  001558  258C               	addwf	efgtoa@n& (0+255),w,b
  6671  00155A  6ED9               	movwf	fsr2l,c
  6672  00155C  0E02               	movlw	high _dbuf
  6673  00155E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6674  001560  6EDA               	movwf	fsr2h,c
  6675  001562  0E30               	movlw	48
  6676  001564  6EDF               	movwf	indf2,c
  6677  001566                     
  6678                           ; BSR set to: 0
  6679  001566  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  6680  001568  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  6681  00156A                     
  6682                           ; BSR set to: 0
  6683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6684  00156A  0778               	decf	efgtoa@w& (0+255),f,b
  6685  00156C  A0D8               	btfss	status,0,c
  6686  00156E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  6687  001570                     
  6688                           ; BSR set to: 0
  6689                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6690  001570  0766               	decf	efgtoa@t& (0+255),f,b
  6691  001572  A0D8               	btfss	status,0,c
  6692  001574  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  6693  001576                     l5197:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6697  001576  5166               	movf	efgtoa@t& (0+255),w,b
  6698  001578  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6699  00157A  A4D8               	btfss	status,2,c
  6700  00157C  EFC2  F00A         	goto	u5221
  6701  001580  EFC4  F00A         	goto	u5220
  6702  001584                     u5221:
  6703  001584  EFAB  F00A         	goto	l5189
  6704  001588                     u5220:
  6705  001588                     
  6706                           ; BSR set to: 0
  6707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6708  001588  0E00               	movlw	low _dbuf
  6709  00158A  258C               	addwf	efgtoa@n& (0+255),w,b
  6710  00158C  6ED9               	movwf	fsr2l,c
  6711  00158E  0E02               	movlw	high _dbuf
  6712  001590  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6713  001592  6EDA               	movwf	fsr2h,c
  6714  001594  5172               	movf	efgtoa@d& (0+255),w,b
  6715  001596  0F30               	addlw	48
  6716  001598  6EDF               	movwf	indf2,c
  6717  00159A                     
  6718                           ; BSR set to: 0
  6719  00159A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  6720  00159C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  6721  00159E                     
  6722                           ; BSR set to: 0
  6723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6724  00159E  0778               	decf	efgtoa@w& (0+255),f,b
  6725  0015A0  A0D8               	btfss	status,0,c
  6726  0015A2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  6727  0015A4                     l5205:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6731  0015A4  C07C  F028         	movff	efgtoa@h,___flsub@b
  6732  0015A8  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  6733  0015AC  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  6734  0015B0  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  6735  0015B4  C08E  F013         	movff	efgtoa@u,___flmul@a
  6736  0015B8  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  6737  0015BC  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  6738  0015C0  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  6739  0015C4  C080  F00F         	movff	efgtoa@l,___flmul@b
  6740  0015C8  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  6741  0015CC  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  6742  0015D0  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  6743  0015D4  ECD6  F014         	call	___flmul	;wreg free
  6744  0015D8  C00F  F02C         	movff	?___flmul,___flsub@a
  6745  0015DC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  6746  0015E0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  6747  0015E4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  6748  0015E8  EC9D  F02A         	call	___flsub	;wreg free
  6749  0015EC  C028  F07C         	movff	?___flsub,efgtoa@h
  6750  0015F0  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  6751  0015F4  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  6752  0015F8  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  6753  0015FC                     
  6754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6755  0015FC  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  6756  001600  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  6757  001604  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  6758  001608  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  6759  00160C  0E00               	movlw	0
  6760  00160E  6E13               	movwf	___fldiv@a^0,c
  6761  001610  0E00               	movlw	0
  6762  001612  6E14               	movwf	(___fldiv@a+1)^0,c
  6763  001614  0E20               	movlw	32
  6764  001616  6E15               	movwf	(___fldiv@a+2)^0,c
  6765  001618  0E41               	movlw	65
  6766  00161A  6E16               	movwf	(___fldiv@a+3)^0,c
  6767  00161C  ECEB  F016         	call	___fldiv	;wreg free
  6768  001620  C00F  F08E         	movff	?___fldiv,efgtoa@u
  6769  001624  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  6770  001628  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  6771  00162C  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  6772  001630                     
  6773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6774  001630  0100               	movlb	0	; () banked
  6775  001632  076A               	decf	efgtoa@ne& (0+255),f,b
  6776  001634  A0D8               	btfss	status,0,c
  6777  001636  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  6778  001638                     
  6779                           ; BSR set to: 0
  6780                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6781  001638  4B84               	infsnz	efgtoa@i& (0+255),f,b
  6782  00163A  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  6783  00163C                     l5213:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6787  00163C  516C               	movf	efgtoa@m& (0+255),w,b
  6788  00163E  5D84               	subwf	efgtoa@i& (0+255),w,b
  6789  001640  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  6790  001642  0A80               	xorlw	128
  6791  001644  6E43               	movwf	??_efgtoa^0,c
  6792  001646  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  6793  001648  0A80               	xorlw	128
  6794  00164A  5843               	subwfb	??_efgtoa^0,w,c
  6795  00164C  B0D8               	btfsc	status,0,c
  6796  00164E  EF2B  F00B         	goto	u5231
  6797  001652  EF2D  F00B         	goto	u5230
  6798  001656                     u5231:
  6799  001656  EF3B  F00B         	goto	l5217
  6800  00165A                     u5230:
  6801  00165A                     
  6802                           ; BSR set to: 0
  6803  00165A  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6804  00165C  EF39  F00B         	goto	u5241
  6805  001660  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  6806  001662  E109               	bnz	u5240
  6807  001664  0E4B               	movlw	75
  6808  001666  5D8C               	subwf	efgtoa@n& (0+255),w,b
  6809  001668  A0D8               	btfss	status,0,c
  6810  00166A  EF39  F00B         	goto	u5241
  6811  00166E  EF3B  F00B         	goto	u5240
  6812  001672                     u5241:
  6813  001672  EF31  F00A         	goto	l5165
  6814  001676                     u5240:
  6815  001676                     l5217:
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6819  001676  5168               	movf	efgtoa@pp& (0+255),w,b
  6820  001678  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6821  00167A  A4D8               	btfss	status,2,c
  6822  00167C  EF42  F00B         	goto	u5251
  6823  001680  EF44  F00B         	goto	u5250
  6824  001684                     u5251:
  6825  001684  EF55  F00B         	goto	l5225
  6826  001688                     u5250:
  6827  001688                     
  6828                           ; BSR set to: 0
  6829  001688  A9E1               	btfss	_flags& (0+255),4,b
  6830  00168A  EF49  F00B         	goto	u5261
  6831  00168E  EF4B  F00B         	goto	u5260
  6832  001692                     u5261:
  6833  001692  EF55  F00B         	goto	l5225
  6834  001696                     u5260:
  6835  001696                     
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6838  001696  0E00               	movlw	low _dbuf
  6839  001698  258C               	addwf	efgtoa@n& (0+255),w,b
  6840  00169A  6ED9               	movwf	fsr2l,c
  6841  00169C  0E02               	movlw	high _dbuf
  6842  00169E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6843  0016A0  6EDA               	movwf	fsr2h,c
  6844  0016A2  0E2E               	movlw	46
  6845  0016A4  6EDF               	movwf	indf2,c
  6846  0016A6                     
  6847                           ; BSR set to: 0
  6848  0016A6  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  6849  0016A8  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  6850  0016AA                     l5225:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6854  0016AA  0E00               	movlw	low _dbuf
  6855  0016AC  258C               	addwf	efgtoa@n& (0+255),w,b
  6856  0016AE  6ED9               	movwf	fsr2l,c
  6857  0016B0  0E02               	movlw	high _dbuf
  6858  0016B2  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6859  0016B4  6EDA               	movwf	fsr2h,c
  6860  0016B6  0E00               	movlw	0
  6861  0016B8  6EDF               	movwf	indf2,c
  6862  0016BA                     
  6863                           ; BSR set to: 0
  6864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6865  0016BA  0E65               	movlw	101
  6866  0016BC  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  6867  0016BE  A4D8               	btfss	status,2,c
  6868  0016C0  EF64  F00B         	goto	u5271
  6869  0016C4  EF66  F00B         	goto	u5270
  6870  0016C8                     u5271:
  6871  0016C8  EFCC  F006         	goto	l5027
  6872  0016CC                     u5270:
  6873  0016CC                     
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6876  0016CC  0E00               	movlw	0
  6877  0016CE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  6878  0016D0  0E4F               	movlw	79
  6879  0016D2  6F84               	movwf	efgtoa@i& (0+255),b
  6880  0016D4                     
  6881                           ; BSR set to: 0
  6882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6883  0016D4  0E00               	movlw	low _dbuf
  6884  0016D6  2584               	addwf	efgtoa@i& (0+255),w,b
  6885  0016D8  6ED9               	movwf	fsr2l,c
  6886  0016DA  0E02               	movlw	high _dbuf
  6887  0016DC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6888  0016DE  6EDA               	movwf	fsr2h,c
  6889  0016E0  0E00               	movlw	0
  6890  0016E2  6EDF               	movwf	indf2,c
  6891  0016E4                     
  6892                           ; BSR set to: 0
  6893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6894  0016E4  0E00               	movlw	0
  6895  0016E6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  6896  0016E8  0E00               	movlw	0
  6897  0016EA  6F74               	movwf	efgtoa@sign& (0+255),b
  6898  0016EC                     
  6899                           ; BSR set to: 0
  6900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6901  0016EC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6902  0016EE  EF7D  F00B         	goto	u5280
  6903  0016F2  EF7B  F00B         	goto	u5281
  6904  0016F6                     u5281:
  6905  0016F6  EF85  F00B         	goto	l5241
  6906  0016FA                     u5280:
  6907  0016FA                     
  6908                           ; BSR set to: 0
  6909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6910  0016FA  0E00               	movlw	0
  6911  0016FC  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  6912  0016FE  0E01               	movlw	1
  6913  001700  6F74               	movwf	efgtoa@sign& (0+255),b
  6914  001702                     
  6915                           ; BSR set to: 0
  6916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6917  001702  6D8A               	negf	efgtoa@e& (0+255),b
  6918  001704  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  6919  001706  B0D8               	btfsc	status,0,c
  6920  001708  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  6921  00170A                     l5241:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6925  00170A  0E00               	movlw	0
  6926  00170C  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  6927  00170E  0E02               	movlw	2
  6928  001710  6F76               	movwf	efgtoa@p& (0+255),b
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6931  001712  EFB6  F00B         	goto	l5253
  6932  001716                     l5243:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6936  001716  0784               	decf	efgtoa@i& (0+255),f,b
  6937  001718  A0D8               	btfss	status,0,c
  6938  00171A  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  6939  00171C                     
  6940                           ; BSR set to: 0
  6941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6942  00171C  0E00               	movlw	low _dbuf
  6943  00171E  2584               	addwf	efgtoa@i& (0+255),w,b
  6944  001720  6ED9               	movwf	fsr2l,c
  6945  001722  0E02               	movlw	high _dbuf
  6946  001724  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6947  001726  6EDA               	movwf	fsr2h,c
  6948  001728  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  6949  00172C  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6950  001730  0E00               	movlw	0
  6951  001732  6E04               	movwf	(___awmod@divisor+1)^0,c
  6952  001734  0E0A               	movlw	10
  6953  001736  6E03               	movwf	___awmod@divisor^0,c
  6954  001738  EC55  F026         	call	___awmod	;wreg free
  6955  00173C  5001               	movf	?___awmod^0,w,c
  6956  00173E  0F30               	addlw	48
  6957  001740  6EDF               	movwf	indf2,c
  6958  001742                     
  6959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6960  001742  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  6961  001746  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6962  00174A  0E00               	movlw	0
  6963  00174C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6964  00174E  0E0A               	movlw	10
  6965  001750  6E03               	movwf	___awdiv@divisor^0,c
  6966  001752  EC98  F025         	call	___awdiv	;wreg free
  6967  001756  C001  F08A         	movff	?___awdiv,efgtoa@e
  6968  00175A  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  6969  00175E                     
  6970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6971  00175E  0100               	movlb	0	; () banked
  6972  001760  0776               	decf	efgtoa@p& (0+255),f,b
  6973  001762  A0D8               	btfss	status,0,c
  6974  001764  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  6975  001766                     
  6976                           ; BSR set to: 0
  6977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6978  001766  0778               	decf	efgtoa@w& (0+255),f,b
  6979  001768  A0D8               	btfss	status,0,c
  6980  00176A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  6981  00176C                     l5253:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6985  00176C  518A               	movf	efgtoa@e& (0+255),w,b
  6986  00176E  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6987  001770  A4D8               	btfss	status,2,c
  6988  001772  EFBD  F00B         	goto	u5291
  6989  001776  EFBF  F00B         	goto	u5290
  6990  00177A                     u5291:
  6991  00177A  EF8B  F00B         	goto	l5243
  6992  00177E                     u5290:
  6993  00177E                     
  6994                           ; BSR set to: 0
  6995  00177E  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6996  001780  EFCC  F00B         	goto	u5300
  6997  001784  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  6998  001786  E106               	bnz	u5301
  6999  001788  0576               	decf	efgtoa@p& (0+255),w,b
  7000  00178A  B0D8               	btfsc	status,0,c
  7001  00178C  EFCA  F00B         	goto	u5301
  7002  001790  EFCC  F00B         	goto	u5300
  7003  001794                     u5301:
  7004  001794  EF8B  F00B         	goto	l5243
  7005  001798                     u5300:
  7006  001798                     
  7007                           ; BSR set to: 0
  7008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  7009  001798  0784               	decf	efgtoa@i& (0+255),f,b
  7010  00179A  A0D8               	btfss	status,0,c
  7011  00179C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  7012  00179E                     
  7013                           ; BSR set to: 0
  7014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7015  00179E  5174               	movf	efgtoa@sign& (0+255),w,b
  7016  0017A0  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7017  0017A2  A4D8               	btfss	status,2,c
  7018  0017A4  EFD6  F00B         	goto	u5311
  7019  0017A8  EFD8  F00B         	goto	u5310
  7020  0017AC                     u5311:
  7021  0017AC  EFDE  F00B         	goto	l5263
  7022  0017B0                     u5310:
  7023  0017B0                     
  7024                           ; BSR set to: 0
  7025  0017B0  0E00               	movlw	0
  7026  0017B2  6F63               	movwf	(_efgtoa$2122+1)& (0+255),b
  7027  0017B4  0E2B               	movlw	43
  7028  0017B6  6F62               	movwf	_efgtoa$2122& (0+255),b
  7029  0017B8  EFE2  F00B         	goto	l5265
  7030  0017BC                     l5263:
  7031                           
  7032                           ; BSR set to: 0
  7033  0017BC  0E00               	movlw	0
  7034  0017BE  6F63               	movwf	(_efgtoa$2122+1)& (0+255),b
  7035  0017C0  0E2D               	movlw	45
  7036  0017C2  6F62               	movwf	_efgtoa$2122& (0+255),b
  7037  0017C4                     l5265:
  7038                           
  7039                           ; BSR set to: 0
  7040  0017C4  0E00               	movlw	low _dbuf
  7041  0017C6  2584               	addwf	efgtoa@i& (0+255),w,b
  7042  0017C8  6ED9               	movwf	fsr2l,c
  7043  0017CA  0E02               	movlw	high _dbuf
  7044  0017CC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7045  0017CE  6EDA               	movwf	fsr2h,c
  7046  0017D0  C062  FFDF         	movff	_efgtoa$2122,indf2
  7047  0017D4                     
  7048                           ; BSR set to: 0
  7049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  7050  0017D4  0778               	decf	efgtoa@w& (0+255),f,b
  7051  0017D6  A0D8               	btfss	status,0,c
  7052  0017D8  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  7053  0017DA                     
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  7056  0017DA  0784               	decf	efgtoa@i& (0+255),f,b
  7057  0017DC  A0D8               	btfss	status,0,c
  7058  0017DE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  7059  0017E0                     
  7060                           ; BSR set to: 0
  7061  0017E0  0EBF               	movlw	191
  7062  0017E2  6E43               	movwf	??_efgtoa^0,c
  7063  0017E4  0EFF               	movlw	255
  7064  0017E6  6E44               	movwf	(??_efgtoa+1)^0,c
  7065  0017E8  5042               	movf	efgtoa@c^0,w,c
  7066  0017EA  6E45               	movwf	(??_efgtoa+2)^0,c
  7067  0017EC  6A46               	clrf	(??_efgtoa+3)^0,c
  7068  0017EE  5043               	movf	??_efgtoa^0,w,c
  7069  0017F0  2645               	addwf	(??_efgtoa+2)^0,f,c
  7070  0017F2  5044               	movf	(??_efgtoa+1)^0,w,c
  7071  0017F4  2246               	addwfc	(??_efgtoa+3)^0,f,c
  7072  0017F6  5046               	movf	(??_efgtoa+3)^0,w,c
  7073  0017F8  E109               	bnz	u5320
  7074  0017FA  0E1A               	movlw	26
  7075  0017FC  5C45               	subwf	(??_efgtoa+2)^0,w,c
  7076  0017FE  A0D8               	btfss	status,0,c
  7077  001800  EF04  F00C         	goto	u5321
  7078  001804  EF06  F00C         	goto	u5320
  7079  001808                     u5321:
  7080  001808  EF0C  F00C         	goto	l5277
  7081  00180C                     u5320:
  7082  00180C                     
  7083                           ; BSR set to: 0
  7084  00180C  0E00               	movlw	0
  7085  00180E  6F65               	movwf	(_efgtoa$2123+1)& (0+255),b
  7086  001810  0E65               	movlw	101
  7087  001812  6F64               	movwf	_efgtoa$2123& (0+255),b
  7088  001814  EF10  F00C         	goto	l5279
  7089  001818                     l5277:
  7090                           
  7091                           ; BSR set to: 0
  7092  001818  0E00               	movlw	0
  7093  00181A  6F65               	movwf	(_efgtoa$2123+1)& (0+255),b
  7094  00181C  0E45               	movlw	69
  7095  00181E  6F64               	movwf	_efgtoa$2123& (0+255),b
  7096  001820                     l5279:
  7097                           
  7098                           ; BSR set to: 0
  7099  001820  0E00               	movlw	low _dbuf
  7100  001822  2584               	addwf	efgtoa@i& (0+255),w,b
  7101  001824  6ED9               	movwf	fsr2l,c
  7102  001826  0E02               	movlw	high _dbuf
  7103  001828  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7104  00182A  6EDA               	movwf	fsr2h,c
  7105  00182C  C064  FFDF         	movff	_efgtoa$2123,indf2
  7106  001830                     
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  7109  001830  0778               	decf	efgtoa@w& (0+255),f,b
  7110  001832  A0D8               	btfss	status,0,c
  7111  001834  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  7112  001836                     
  7113                           ; BSR set to: 0
  7114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7115  001836  0E00               	movlw	low _dbuf
  7116  001838  258C               	addwf	efgtoa@n& (0+255),w,b
  7117  00183A  6E01               	movwf	strcpy@dest^0,c
  7118  00183C  0E02               	movlw	high _dbuf
  7119  00183E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7120  001840  6E02               	movwf	(strcpy@dest+1)^0,c
  7121  001842  0E00               	movlw	low _dbuf
  7122  001844  2584               	addwf	efgtoa@i& (0+255),w,b
  7123  001846  6E03               	movwf	strcpy@src^0,c
  7124  001848  0E02               	movlw	high _dbuf
  7125  00184A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7126  00184C  6E04               	movwf	(strcpy@src+1)^0,c
  7127  00184E  ECAC  F029         	call	_strcpy	;wreg free
  7128  001852  EFCC  F006         	goto	l5027
  7129  001856                     l1316:
  7130  001856  0012               	return		;funcret
  7131  001858                     __end_of_efgtoa:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _tolower *****************
  7135 ;; Defined at:
  7136 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  c               2    6[COMRAM] int 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  2    6[COMRAM] int 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7150 ;;      Params:         2       0       0       0       0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7152 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7153 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7154 ;;Total ram usage:        6 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 2
  7157 ;; This function calls:
  7158 ;;		_isupper
  7159 ;; This function is called by:
  7160 ;;		_efgtoa
  7161 ;;		_vfpfcnvrt
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text8
  7166  0054F4                     __ptext8:
  7167                           	callstack 0
  7168  0054F4                     _tolower:
  7169                           	callstack 25
  7170  0054F4  0EBF               	movlw	191
  7171  0054F6  6E09               	movwf	??_tolower^0,c
  7172  0054F8  0EFF               	movlw	255
  7173  0054FA  6E0A               	movwf	(??_tolower+1)^0,c
  7174  0054FC  C007  F00B         	movff	tolower@c,??_tolower+2
  7175  005500  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7176  005504  5009               	movf	??_tolower^0,w,c
  7177  005506  260B               	addwf	(??_tolower+2)^0,f,c
  7178  005508  500A               	movf	(??_tolower+1)^0,w,c
  7179  00550A  220C               	addwfc	(??_tolower+3)^0,f,c
  7180  00550C  500C               	movf	(??_tolower+3)^0,w,c
  7181  00550E  E107               	bnz	u4651
  7182  005510  0E1A               	movlw	26
  7183  005512  5C0B               	subwf	(??_tolower+2)^0,w,c
  7184  005514  B0D8               	btfsc	status,0,c
  7185  005516  EF8F  F02A         	goto	u4651
  7186  00551A  EF91  F02A         	goto	u4650
  7187  00551E                     u4651:
  7188  00551E  EF98  F02A         	goto	l1575
  7189  005522                     u4650:
  7190  005522  0E20               	movlw	32
  7191  005524  1007               	iorwf	tolower@c^0,w,c
  7192  005526  6E07               	movwf	?_tolower^0,c
  7193  005528  5008               	movf	(tolower@c+1)^0,w,c
  7194  00552A  6E08               	movwf	(?_tolower+1)^0,c
  7195  00552C  EF9C  F02A         	goto	l1578
  7196  005530                     l1575:
  7197  005530  C007  F007         	movff	tolower@c,?_tolower
  7198  005534  C008  F008         	movff	tolower@c+1,?_tolower+1
  7199  005538                     l1578:
  7200  005538  0012               	return		;funcret
  7201  00553A                     __end_of_tolower:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function _isupper *****************
  7205 ;; Defined at:
  7206 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  c               2    0[COMRAM] int 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  2    0[COMRAM] int 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7220 ;;      Params:         2       0       0       0       0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7222 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7223 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7224 ;;Total ram usage:        6 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; Hardware stack levels required when called: 1
  7227 ;; This function calls:
  7228 ;;		Nothing
  7229 ;; This function is called by:
  7230 ;;		_efgtoa
  7231 ;;		_vfpfcnvrt
  7232 ;;		_tolower
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text9
  7237  005640                     __ptext9:
  7238                           	callstack 0
  7239  005640                     _isupper:
  7240                           	callstack 25
  7241  005640  0EBF               	movlw	191
  7242  005642  6E03               	movwf	??_isupper^0,c
  7243  005644  0EFF               	movlw	255
  7244  005646  6E04               	movwf	(??_isupper+1)^0,c
  7245  005648  C001  F005         	movff	isupper@c,??_isupper+2
  7246  00564C  C002  F006         	movff	isupper@c+1,??_isupper+3
  7247  005650  5003               	movf	??_isupper^0,w,c
  7248  005652  2605               	addwf	(??_isupper+2)^0,f,c
  7249  005654  5004               	movf	(??_isupper+1)^0,w,c
  7250  005656  2206               	addwfc	(??_isupper+3)^0,f,c
  7251  005658  5006               	movf	(??_isupper+3)^0,w,c
  7252  00565A  E10A               	bnz	u3770
  7253  00565C  0E1A               	movlw	26
  7254  00565E  5C05               	subwf	(??_isupper+2)^0,w,c
  7255  005660  A0D8               	btfss	status,0,c
  7256  005662  EF35  F02B         	goto	u3771
  7257  005666  EF38  F02B         	goto	u3770
  7258  00566A                     u3771:
  7259  00566A  0E01               	movlw	1
  7260  00566C  EF39  F02B         	goto	u3780
  7261  005670                     u3770:
  7262  005670  0E00               	movlw	0
  7263  005672                     u3780:
  7264  005672  6E01               	movwf	?_isupper^0,c
  7265  005674  6A02               	clrf	(?_isupper+1)^0,c
  7266  005676  0012               	return		;funcret
  7267  005678                     __end_of_isupper:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _strcpy *****************
  7271 ;; Defined at:
  7272 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7275 ;;		 -> dbuf(80), 
  7276 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7277 ;;		 -> STR_49(4), STR_48(4), STR_45(4), STR_44(4), 
  7278 ;;		 -> dbuf(80), 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  d               2    8[COMRAM] PTR unsigned char 
  7281 ;;		 -> dbuf(80), 
  7282 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7283 ;;		 -> STR_49(4), STR_48(4), STR_45(4), STR_44(4), 
  7284 ;;		 -> dbuf(80), 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  2    0[COMRAM] PTR unsigned char 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7294 ;;      Params:         4       0       0       0       0       0       0       0       0
  7295 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7296 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7297 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7298 ;;Total ram usage:       10 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 1
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_efgtoa
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text10
  7309  005358                     __ptext10:
  7310                           	callstack 0
  7311  005358                     _strcpy:
  7312                           	callstack 25
  7313  005358  C003  F007         	movff	strcpy@src,strcpy@s
  7314  00535C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7315  005360  C001  F009         	movff	strcpy@dest,strcpy@d
  7316  005364  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7317  005368                     l4891:
  7318  005368  5007               	movf	strcpy@s^0,w,c
  7319  00536A  6E05               	movwf	??_strcpy^0,c
  7320  00536C  5008               	movf	(strcpy@s+1)^0,w,c
  7321  00536E  6E06               	movwf	(??_strcpy+1)^0,c
  7322  005370  4A07               	infsnz	strcpy@s^0,f,c
  7323  005372  2A08               	incf	(strcpy@s+1)^0,f,c
  7324  005374  C005  FFF6         	movff	??_strcpy,tblptrl
  7325  005378  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7326  00537C  6AF8               	clrf	tblptru,c
  7327  00537E  C009  FFD9         	movff	strcpy@d,fsr2l
  7328  005382  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7329  005386  4A09               	infsnz	strcpy@d^0,f,c
  7330  005388  2A0A               	incf	(strcpy@d+1)^0,f,c
  7331  00538A  0E07               	movlw	(high __ramtop+-1)
  7332  00538C  64F7               	cpfsgt	tblptrh,c
  7333  00538E  D003               	bra	u4637
  7334  005390  0008               	tblrd		*
  7335  005392  50F5               	movf	tablat,w,c
  7336  005394  D005               	bra	u4630
  7337  005396                     u4637:
  7338  005396  CFF6 FFE1          	movff	tblptrl,fsr1l
  7339  00539A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7340  00539E  50E7               	movf	indf1,w,c
  7341  0053A0                     u4630:
  7342  0053A0  6EDF               	movwf	indf2,c
  7343  0053A2  50DF               	movf	indf2,w,c
  7344  0053A4  A4D8               	btfss	status,2,c
  7345  0053A6  EFD7  F029         	goto	u4641
  7346  0053AA  EFD9  F029         	goto	u4640
  7347  0053AE                     u4641:
  7348  0053AE  EFB4  F029         	goto	l4891
  7349  0053B2                     u4640:
  7350  0053B2  0012               	return		;funcret
  7351  0053B4                     __end_of_strcpy:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _pad *****************
  7355 ;; Defined at:
  7356 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7359 ;;		 -> NULL(0), sprintf@f(11), 
  7360 ;;  buf             2   19[COMRAM] PTR unsigned char 
  7361 ;;		 -> dbuf(80), 
  7362 ;;  p               2   21[COMRAM] int 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  w               2   26[COMRAM] int 
  7365 ;;  i               2   24[COMRAM] int 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  2   17[COMRAM] int 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7375 ;;      Params:         6       0       0       0       0       0       0       0       0
  7376 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7378 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7379 ;;Total ram usage:       11 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 4
  7382 ;; This function calls:
  7383 ;;		_fputc
  7384 ;;		_fputs
  7385 ;;		_strlen
  7386 ;; This function is called by:
  7387 ;;		_efgtoa
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text11
  7392  004A6A                     __ptext11:
  7393                           	callstack 0
  7394  004A6A                     _pad:
  7395                           	callstack 22
  7396  004A6A                     
  7397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7398  004A6A  0100               	movlb	0	; () banked
  7399  004A6C  A1E1               	btfss	_flags& (0+255),0,b
  7400  004A6E  EF3B  F025         	goto	u4521
  7401  004A72  EF3D  F025         	goto	u4520
  7402  004A76                     u4521:
  7403  004A76  EF47  F025         	goto	l4849
  7404  004A7A                     u4520:
  7405  004A7A                     
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7408  004A7A  C014  F00B         	movff	pad@buf,fputs@s
  7409  004A7E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7410  004A82  C012  F00D         	movff	pad@fp,fputs@fp
  7411  004A86  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7412  004A8A  ECC0  F02A         	call	_fputs	;wreg free
  7413  004A8E                     l4849:
  7414                           
  7415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7416  004A8E  BE17               	btfsc	(pad@p+1)^0,7,c
  7417  004A90  EF4C  F025         	goto	u4531
  7418  004A94  EF4E  F025         	goto	u4530
  7419  004A98                     u4531:
  7420  004A98  EF54  F025         	goto	l4853
  7421  004A9C                     u4530:
  7422  004A9C  C016  F01B         	movff	pad@p,pad@w
  7423  004AA0  C017  F01C         	movff	pad@p+1,pad@w+1
  7424  004AA4  EF58  F025         	goto	l1279
  7425  004AA8                     l4853:
  7426  004AA8  0E00               	movlw	0
  7427  004AAA  6E1C               	movwf	(pad@w+1)^0,c
  7428  004AAC  0E00               	movlw	0
  7429  004AAE  6E1B               	movwf	pad@w^0,c
  7430  004AB0                     l1279:
  7431                           
  7432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7433  004AB0  0E00               	movlw	0
  7434  004AB2  6E1A               	movwf	(pad@i+1)^0,c
  7435  004AB4  0E00               	movlw	0
  7436  004AB6  6E19               	movwf	pad@i^0,c
  7437                           
  7438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7439  004AB8  EF6A  F025         	goto	l4859
  7440  004ABC                     l4855:
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7443  004ABC  0E00               	movlw	0
  7444  004ABE  6E03               	movwf	(fputc@c+1)^0,c
  7445  004AC0  0E20               	movlw	32
  7446  004AC2  6E02               	movwf	fputc@c^0,c
  7447  004AC4  C012  F004         	movff	pad@fp,fputc@fp
  7448  004AC8  C013  F005         	movff	pad@fp+1,fputc@fp+1
  7449  004ACC  ECD0  F024         	call	_fputc	;wreg free
  7450  004AD0                     
  7451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7452  004AD0  4A19               	infsnz	pad@i^0,f,c
  7453  004AD2  2A1A               	incf	(pad@i+1)^0,f,c
  7454  004AD4                     l4859:
  7455                           
  7456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7457  004AD4  501B               	movf	pad@w^0,w,c
  7458  004AD6  5C19               	subwf	pad@i^0,w,c
  7459  004AD8  501A               	movf	(pad@i+1)^0,w,c
  7460  004ADA  0A80               	xorlw	128
  7461  004ADC  6E18               	movwf	??_pad^0,c
  7462  004ADE  501C               	movf	(pad@w+1)^0,w,c
  7463  004AE0  0A80               	xorlw	128
  7464  004AE2  5818               	subwfb	??_pad^0,w,c
  7465  004AE4  A0D8               	btfss	status,0,c
  7466  004AE6  EF77  F025         	goto	u4541
  7467  004AEA  EF79  F025         	goto	u4540
  7468  004AEE                     u4541:
  7469  004AEE  EF5E  F025         	goto	l4855
  7470  004AF2                     u4540:
  7471  004AF2                     
  7472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7473  004AF2  0100               	movlb	0	; () banked
  7474  004AF4  B1E1               	btfsc	_flags& (0+255),0,b
  7475  004AF6  EF7F  F025         	goto	u4551
  7476  004AFA  EF81  F025         	goto	u4550
  7477  004AFE                     u4551:
  7478  004AFE  EF8B  F025         	goto	l4863
  7479  004B02                     u4550:
  7480  004B02                     
  7481                           ; BSR set to: 0
  7482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7483  004B02  C014  F00B         	movff	pad@buf,fputs@s
  7484  004B06  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7485  004B0A  C012  F00D         	movff	pad@fp,fputs@fp
  7486  004B0E  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7487  004B12  ECC0  F02A         	call	_fputs	;wreg free
  7488  004B16                     l4863:
  7489                           
  7490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7491  004B16  C014  F001         	movff	pad@buf,strlen@s
  7492  004B1A  C015  F002         	movff	pad@buf+1,strlen@s+1
  7493  004B1E  EC74  F02B         	call	_strlen	;wreg free
  7494  004B22  501B               	movf	pad@w^0,w,c
  7495  004B24  2401               	addwf	?_strlen^0,w,c
  7496  004B26  6E12               	movwf	?_pad^0,c
  7497  004B28  501C               	movf	(pad@w+1)^0,w,c
  7498  004B2A  2002               	addwfc	(?_strlen+1)^0,w,c
  7499  004B2C  6E13               	movwf	(?_pad+1)^0,c
  7500  004B2E  0012               	return		;funcret
  7501  004B30                     __end_of_pad:
  7502                           	callstack 0
  7503                           
  7504 ;; *************** function _strlen *****************
  7505 ;; Defined at:
  7506 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7509 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(80), ?_sprintf(2), 
  7510 ;;		 -> BMP280_calib(24), description(20), satel(4), alt(10), 
  7511 ;;		 -> course(8), speed(8), 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7514 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(80), ?_sprintf(2), 
  7515 ;;		 -> BMP280_calib(24), description(20), satel(4), alt(10), 
  7516 ;;		 -> course(8), speed(8), 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2    0[COMRAM] unsigned int 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7526 ;;      Params:         2       0       0       0       0       0       0       0       0
  7527 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7529 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7530 ;;Total ram usage:        4 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 1
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_pad
  7537 ;;		_stoa
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text12
  7542  0056E8                     __ptext12:
  7543                           	callstack 0
  7544  0056E8                     _strlen:
  7545                           	callstack 25
  7546  0056E8  C001  F003         	movff	strlen@s,strlen@a
  7547  0056EC  C002  F004         	movff	strlen@s+1,strlen@a+1
  7548  0056F0  EF7C  F02B         	goto	l4377
  7549  0056F4                     l4375:
  7550  0056F4  4A01               	infsnz	strlen@s^0,f,c
  7551  0056F6  2A02               	incf	(strlen@s+1)^0,f,c
  7552  0056F8                     l4377:
  7553  0056F8  C001  FFD9         	movff	strlen@s,fsr2l
  7554  0056FC  C002  FFDA         	movff	strlen@s+1,fsr2h
  7555  005700  50DF               	movf	indf2,w,c
  7556  005702  A4D8               	btfss	status,2,c
  7557  005704  EF86  F02B         	goto	u3761
  7558  005708  EF88  F02B         	goto	u3760
  7559  00570C                     u3761:
  7560  00570C  EF7A  F02B         	goto	l4375
  7561  005710                     u3760:
  7562  005710  5003               	movf	strlen@a^0,w,c
  7563  005712  5C01               	subwf	strlen@s^0,w,c
  7564  005714  6E01               	movwf	?_strlen^0,c
  7565  005716  5004               	movf	(strlen@a+1)^0,w,c
  7566  005718  5802               	subwfb	(strlen@s+1)^0,w,c
  7567  00571A  6E02               	movwf	(?_strlen+1)^0,c
  7568  00571C  0012               	return		;funcret
  7569  00571E                     __end_of_strlen:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _fputs *****************
  7573 ;; Defined at:
  7574 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7577 ;;		 -> dbuf(80), 
  7578 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7579 ;;		 -> NULL(0), sprintf@f(11), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  i               2   15[COMRAM] int 
  7582 ;;  c               1   14[COMRAM] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  2   10[COMRAM] int 
  7585 ;; Registers used:
  7586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7592 ;;      Params:         4       0       0       0       0       0       0       0       0
  7593 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7595 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7596 ;;Total ram usage:        7 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 3
  7599 ;; This function calls:
  7600 ;;		_fputc
  7601 ;; This function is called by:
  7602 ;;		_pad
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text13
  7607  005580                     __ptext13:
  7608                           	callstack 0
  7609  005580                     _fputs:
  7610                           	callstack 22
  7611  005580  0E00               	movlw	0
  7612  005582  6E11               	movwf	(fputs@i+1)^0,c
  7613  005584  0E00               	movlw	0
  7614  005586  6E10               	movwf	fputs@i^0,c
  7615  005588  EFD1  F02A         	goto	l4371
  7616  00558C                     l4367:
  7617  00558C  C00F  F002         	movff	fputs@c,fputc@c
  7618  005590  6A03               	clrf	(fputc@c+1)^0,c
  7619  005592  C00D  F004         	movff	fputs@fp,fputc@fp
  7620  005596  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  7621  00559A  ECD0  F024         	call	_fputc	;wreg free
  7622  00559E  4A10               	infsnz	fputs@i^0,f,c
  7623  0055A0  2A11               	incf	(fputs@i+1)^0,f,c
  7624  0055A2                     l4371:
  7625  0055A2  5010               	movf	fputs@i^0,w,c
  7626  0055A4  240B               	addwf	fputs@s^0,w,c
  7627  0055A6  6ED9               	movwf	fsr2l,c
  7628  0055A8  5011               	movf	(fputs@i+1)^0,w,c
  7629  0055AA  200C               	addwfc	(fputs@s+1)^0,w,c
  7630  0055AC  6EDA               	movwf	fsr2h,c
  7631  0055AE  50DF               	movf	indf2,w,c
  7632  0055B0  6E0F               	movwf	fputs@c^0,c
  7633  0055B2  500F               	movf	fputs@c^0,w,c
  7634  0055B4  A4D8               	btfss	status,2,c
  7635  0055B6  EFDF  F02A         	goto	u3751
  7636  0055BA  EFE1  F02A         	goto	u3750
  7637  0055BE                     u3751:
  7638  0055BE  EFC6  F02A         	goto	l4367
  7639  0055C2                     u3750:
  7640  0055C2  0012               	return		;funcret
  7641  0055C4                     __end_of_fputs:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function _floorf *****************
  7645 ;; Defined at:
  7646 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  x               4   39[COMRAM] float 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  u               4   55[COMRAM] struct .
  7651 ;;  m               4   49[COMRAM] unsigned long 
  7652 ;;  e               2   53[COMRAM] int 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  4   39[COMRAM] float 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7662 ;;      Params:         4       0       0       0       0       0       0       0       0
  7663 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7664 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7665 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7666 ;;Total ram usage:       20 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_efgtoa
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text14
  7677  0033EC                     __ptext14:
  7678                           	callstack 0
  7679  0033EC                     _floorf:
  7680                           	callstack 25
  7681  0033EC  C100  F038         	movff	floorf@F526,floorf@u
  7682  0033F0  C101  F039         	movff	floorf@F526+1,floorf@u+1
  7683  0033F4  C102  F03A         	movff	floorf@F526+2,floorf@u+2
  7684  0033F8  C103  F03B         	movff	floorf@F526+3,floorf@u+3
  7685  0033FC  C028  F038         	movff	floorf@x,floorf@u
  7686  003400  C029  F039         	movff	floorf@x+1,floorf@u+1
  7687  003404  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  7688  003408  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  7689  00340C  0E81               	movlw	129
  7690  00340E  6E2C               	movwf	??_floorf^0,c
  7691  003410  0EFF               	movlw	255
  7692  003412  6E2D               	movwf	(??_floorf+1)^0,c
  7693  003414  C038  F02E         	movff	floorf@u,??_floorf+2
  7694  003418  C039  F02F         	movff	floorf@u+1,??_floorf+3
  7695  00341C  C03A  F030         	movff	floorf@u+2,??_floorf+4
  7696  003420  C03B  F031         	movff	floorf@u+3,??_floorf+5
  7697  003424  0E18               	movlw	24
  7698  003426  EF1A  F01A         	goto	u4660
  7699  00342A                     u4665:
  7700  00342A  90D8               	bcf	status,0,c
  7701  00342C  3231               	rrcf	(??_floorf+5)^0,f,c
  7702  00342E  3230               	rrcf	(??_floorf+4)^0,f,c
  7703  003430  322F               	rrcf	(??_floorf+3)^0,f,c
  7704  003432  322E               	rrcf	(??_floorf+2)^0,f,c
  7705  003434                     u4660:
  7706  003434  2EE8               	decfsz	wreg,f,c
  7707  003436  EF15  F01A         	goto	u4665
  7708  00343A  502E               	movf	(??_floorf+2)^0,w,c
  7709  00343C  242C               	addwf	??_floorf^0,w,c
  7710  00343E  6E36               	movwf	floorf@e^0,c
  7711  003440  0E00               	movlw	0
  7712  003442  202D               	addwfc	(??_floorf+1)^0,w,c
  7713  003444  6E37               	movwf	(floorf@e+1)^0,c
  7714  003446  BE37               	btfsc	(floorf@e+1)^0,7,c
  7715  003448  EF2F  F01A         	goto	u4671
  7716  00344C  5037               	movf	(floorf@e+1)^0,w,c
  7717  00344E  E109               	bnz	u4670
  7718  003450  0E17               	movlw	23
  7719  003452  5C36               	subwf	floorf@e^0,w,c
  7720  003454  A0D8               	btfss	status,0,c
  7721  003456  EF2F  F01A         	goto	u4671
  7722  00345A  EF31  F01A         	goto	u4670
  7723  00345E                     u4671:
  7724  00345E  EF3B  F01A         	goto	l4909
  7725  003462                     u4670:
  7726  003462                     l4907:
  7727  003462  C028  F028         	movff	floorf@x,?_floorf
  7728  003466  C029  F029         	movff	floorf@x+1,?_floorf+1
  7729  00346A  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  7730  00346E  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  7731  003472  EFFE  F01A         	goto	l1487
  7732  003476                     l4909:
  7733  003476  BE37               	btfsc	(floorf@e+1)^0,7,c
  7734  003478  EF40  F01A         	goto	u4681
  7735  00347C  EF42  F01A         	goto	u4680
  7736  003480                     u4681:
  7737  003480  EFB2  F01A         	goto	l4919
  7738  003484                     u4680:
  7739  003484  C036  F02C         	movff	floorf@e,??_floorf
  7740  003488  0EFF               	movlw	255
  7741  00348A  6E2D               	movwf	(??_floorf+1)^0,c
  7742  00348C  0EFF               	movlw	255
  7743  00348E  6E2E               	movwf	(??_floorf+2)^0,c
  7744  003490  0E7F               	movlw	127
  7745  003492  6E2F               	movwf	(??_floorf+3)^0,c
  7746  003494  0E00               	movlw	0
  7747  003496  6E30               	movwf	(??_floorf+4)^0,c
  7748  003498                     u4695:
  7749  003498  662C               	tstfsz	??_floorf^0,c
  7750  00349A  EF51  F01A         	goto	u4696
  7751  00349E  EF59  F01A         	goto	u4697
  7752  0034A2                     u4696:
  7753  0034A2  3430               	rlcf	(??_floorf+4)^0,w,c
  7754  0034A4  3230               	rrcf	(??_floorf+4)^0,f,c
  7755  0034A6  322F               	rrcf	(??_floorf+3)^0,f,c
  7756  0034A8  322E               	rrcf	(??_floorf+2)^0,f,c
  7757  0034AA  322D               	rrcf	(??_floorf+1)^0,f,c
  7758  0034AC  2E2C               	decfsz	??_floorf^0,f,c
  7759  0034AE  EF4C  F01A         	goto	u4695
  7760  0034B2                     u4697:
  7761  0034B2  C02D  F032         	movff	??_floorf+1,floorf@m
  7762  0034B6  C02E  F033         	movff	??_floorf+2,floorf@m+1
  7763  0034BA  C02F  F034         	movff	??_floorf+3,floorf@m+2
  7764  0034BE  C030  F035         	movff	??_floorf+4,floorf@m+3
  7765  0034C2  5032               	movf	floorf@m^0,w,c
  7766  0034C4  1438               	andwf	floorf@u^0,w,c
  7767  0034C6  6E2C               	movwf	??_floorf^0,c
  7768  0034C8  5033               	movf	(floorf@m+1)^0,w,c
  7769  0034CA  1439               	andwf	(floorf@u+1)^0,w,c
  7770  0034CC  6E2D               	movwf	(??_floorf+1)^0,c
  7771  0034CE  5034               	movf	(floorf@m+2)^0,w,c
  7772  0034D0  143A               	andwf	(floorf@u+2)^0,w,c
  7773  0034D2  6E2E               	movwf	(??_floorf+2)^0,c
  7774  0034D4  5035               	movf	(floorf@m+3)^0,w,c
  7775  0034D6  143B               	andwf	(floorf@u+3)^0,w,c
  7776  0034D8  6E2F               	movwf	(??_floorf+3)^0,c
  7777  0034DA  502C               	movf	??_floorf^0,w,c
  7778  0034DC  102D               	iorwf	(??_floorf+1)^0,w,c
  7779  0034DE  102E               	iorwf	(??_floorf+2)^0,w,c
  7780  0034E0  102F               	iorwf	(??_floorf+3)^0,w,c
  7781  0034E2  A4D8               	btfss	status,2,c
  7782  0034E4  EF76  F01A         	goto	u4701
  7783  0034E8  EF78  F01A         	goto	u4700
  7784  0034EC                     u4701:
  7785  0034EC  EF7A  F01A         	goto	l4915
  7786  0034F0                     u4700:
  7787  0034F0  EF31  F01A         	goto	l4907
  7788  0034F4                     l4915:
  7789  0034F4  C038  F02C         	movff	floorf@u,??_floorf
  7790  0034F8  C039  F02D         	movff	floorf@u+1,??_floorf+1
  7791  0034FC  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  7792  003500  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  7793  003504  0E20               	movlw	32
  7794  003506  EF8A  F01A         	goto	u4710
  7795  00350A                     u4715:
  7796  00350A  90D8               	bcf	status,0,c
  7797  00350C  322F               	rrcf	(??_floorf+3)^0,f,c
  7798  00350E  322E               	rrcf	(??_floorf+2)^0,f,c
  7799  003510  322D               	rrcf	(??_floorf+1)^0,f,c
  7800  003512  322C               	rrcf	??_floorf^0,f,c
  7801  003514                     u4710:
  7802  003514  2EE8               	decfsz	wreg,f,c
  7803  003516  EF85  F01A         	goto	u4715
  7804  00351A  502C               	movf	??_floorf^0,w,c
  7805  00351C  102D               	iorwf	(??_floorf+1)^0,w,c
  7806  00351E  102E               	iorwf	(??_floorf+2)^0,w,c
  7807  003520  102F               	iorwf	(??_floorf+3)^0,w,c
  7808  003522  B4D8               	btfsc	status,2,c
  7809  003524  EF96  F01A         	goto	u4721
  7810  003528  EF98  F01A         	goto	u4720
  7811  00352C                     u4721:
  7812  00352C  EFA0  F01A         	goto	l1490
  7813  003530                     u4720:
  7814  003530  5032               	movf	floorf@m^0,w,c
  7815  003532  2638               	addwf	floorf@u^0,f,c
  7816  003534  5033               	movf	(floorf@m+1)^0,w,c
  7817  003536  2239               	addwfc	(floorf@u+1)^0,f,c
  7818  003538  5034               	movf	(floorf@m+2)^0,w,c
  7819  00353A  223A               	addwfc	(floorf@u+2)^0,f,c
  7820  00353C  5035               	movf	(floorf@m+3)^0,w,c
  7821  00353E  223B               	addwfc	(floorf@u+3)^0,f,c
  7822  003540                     l1490:
  7823  003540  1C32               	comf	floorf@m^0,w,c
  7824  003542  6E2C               	movwf	??_floorf^0,c
  7825  003544  1C33               	comf	(floorf@m+1)^0,w,c
  7826  003546  6E2D               	movwf	(??_floorf+1)^0,c
  7827  003548  1C34               	comf	(floorf@m+2)^0,w,c
  7828  00354A  6E2E               	movwf	(??_floorf+2)^0,c
  7829  00354C  1C35               	comf	(floorf@m+3)^0,w,c
  7830  00354E  6E2F               	movwf	(??_floorf+3)^0,c
  7831  003550  502C               	movf	??_floorf^0,w,c
  7832  003552  1638               	andwf	floorf@u^0,f,c
  7833  003554  502D               	movf	(??_floorf+1)^0,w,c
  7834  003556  1639               	andwf	(floorf@u+1)^0,f,c
  7835  003558  502E               	movf	(??_floorf+2)^0,w,c
  7836  00355A  163A               	andwf	(floorf@u+2)^0,f,c
  7837  00355C  502F               	movf	(??_floorf+3)^0,w,c
  7838  00355E  163B               	andwf	(floorf@u+3)^0,f,c
  7839  003560  EFF6  F01A         	goto	l4927
  7840  003564                     l4919:
  7841  003564  C038  F02C         	movff	floorf@u,??_floorf
  7842  003568  C039  F02D         	movff	floorf@u+1,??_floorf+1
  7843  00356C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  7844  003570  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  7845  003574  0E20               	movlw	32
  7846  003576  EFC2  F01A         	goto	u4730
  7847  00357A                     u4735:
  7848  00357A  90D8               	bcf	status,0,c
  7849  00357C  322F               	rrcf	(??_floorf+3)^0,f,c
  7850  00357E  322E               	rrcf	(??_floorf+2)^0,f,c
  7851  003580  322D               	rrcf	(??_floorf+1)^0,f,c
  7852  003582  322C               	rrcf	??_floorf^0,f,c
  7853  003584                     u4730:
  7854  003584  2EE8               	decfsz	wreg,f,c
  7855  003586  EFBD  F01A         	goto	u4735
  7856  00358A  502C               	movf	??_floorf^0,w,c
  7857  00358C  102D               	iorwf	(??_floorf+1)^0,w,c
  7858  00358E  102E               	iorwf	(??_floorf+2)^0,w,c
  7859  003590  102F               	iorwf	(??_floorf+3)^0,w,c
  7860  003592  A4D8               	btfss	status,2,c
  7861  003594  EFCE  F01A         	goto	u4741
  7862  003598  EFD0  F01A         	goto	u4740
  7863  00359C                     u4741:
  7864  00359C  EFDA  F01A         	goto	l4923
  7865  0035A0                     u4740:
  7866  0035A0  0E00               	movlw	0
  7867  0035A2  6E38               	movwf	floorf@u^0,c
  7868  0035A4  0E00               	movlw	0
  7869  0035A6  6E39               	movwf	(floorf@u+1)^0,c
  7870  0035A8  0E00               	movlw	0
  7871  0035AA  6E3A               	movwf	(floorf@u+2)^0,c
  7872  0035AC  0E00               	movlw	0
  7873  0035AE  6E3B               	movwf	(floorf@u+3)^0,c
  7874  0035B0  EFF6  F01A         	goto	l4927
  7875  0035B4                     l4923:
  7876  0035B4  90D8               	bcf	status,0,c
  7877  0035B6  3438               	rlcf	floorf@u^0,w,c
  7878  0035B8  6E2C               	movwf	??_floorf^0,c
  7879  0035BA  3439               	rlcf	(floorf@u+1)^0,w,c
  7880  0035BC  6E2D               	movwf	(??_floorf+1)^0,c
  7881  0035BE  343A               	rlcf	(floorf@u+2)^0,w,c
  7882  0035C0  6E2E               	movwf	(??_floorf+2)^0,c
  7883  0035C2  343B               	rlcf	(floorf@u+3)^0,w,c
  7884  0035C4  6E2F               	movwf	(??_floorf+3)^0,c
  7885  0035C6  502C               	movf	??_floorf^0,w,c
  7886  0035C8  102D               	iorwf	(??_floorf+1)^0,w,c
  7887  0035CA  102E               	iorwf	(??_floorf+2)^0,w,c
  7888  0035CC  102F               	iorwf	(??_floorf+3)^0,w,c
  7889  0035CE  B4D8               	btfsc	status,2,c
  7890  0035D0  EFEC  F01A         	goto	u4751
  7891  0035D4  EFEE  F01A         	goto	u4750
  7892  0035D8                     u4751:
  7893  0035D8  EFF6  F01A         	goto	l4927
  7894  0035DC                     u4750:
  7895  0035DC  0E00               	movlw	0
  7896  0035DE  6E38               	movwf	floorf@u^0,c
  7897  0035E0  0E00               	movlw	0
  7898  0035E2  6E39               	movwf	(floorf@u+1)^0,c
  7899  0035E4  0E80               	movlw	128
  7900  0035E6  6E3A               	movwf	(floorf@u+2)^0,c
  7901  0035E8  0EBF               	movlw	191
  7902  0035EA  6E3B               	movwf	(floorf@u+3)^0,c
  7903  0035EC                     l4927:
  7904  0035EC  C038  F028         	movff	floorf@u,?_floorf
  7905  0035F0  C039  F029         	movff	floorf@u+1,?_floorf+1
  7906  0035F4  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  7907  0035F8  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  7908  0035FC                     l1487:
  7909  0035FC  0012               	return		;funcret
  7910  0035FE                     __end_of_floorf:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function ___fpclassifyf *****************
  7914 ;; Defined at:
  7915 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  x               4    0[COMRAM] float 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  u               4   10[COMRAM] struct .
  7920 ;;  e               2    8[COMRAM] int 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    0[COMRAM] int 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7930 ;;      Params:         4       0       0       0       0       0       0       0       0
  7931 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7933 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7934 ;;Total ram usage:       14 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 1
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_efgtoa
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text15
  7945  004514                     __ptext15:
  7946                           	callstack 0
  7947  004514                     ___fpclassifyf:
  7948                           	callstack 25
  7949  004514  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7950  004518  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7951  00451C  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7952  004520  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7953  004524  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7954  004528  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7955  00452C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7956  004530  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7957  004534  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7958  004538  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7959  00453C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7960  004540  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7961  004544  0E18               	movlw	24
  7962  004546  EFAA  F022         	goto	u4560
  7963  00454A                     u4565:
  7964  00454A  90D8               	bcf	status,0,c
  7965  00454C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7966  00454E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7967  004550  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7968  004552  3205               	rrcf	??___fpclassifyf^0,f,c
  7969  004554                     u4560:
  7970  004554  2EE8               	decfsz	wreg,f,c
  7971  004556  EFA5  F022         	goto	u4565
  7972  00455A  5005               	movf	??___fpclassifyf^0,w,c
  7973  00455C  6E09               	movwf	___fpclassifyf@e^0,c
  7974  00455E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7975  004560  5009               	movf	___fpclassifyf@e^0,w,c
  7976  004562  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7977  004564  A4D8               	btfss	status,2,c
  7978  004566  EFB7  F022         	goto	u4571
  7979  00456A  EFB9  F022         	goto	u4570
  7980  00456E                     u4571:
  7981  00456E  EFD9  F022         	goto	l4879
  7982  004572                     u4570:
  7983  004572  90D8               	bcf	status,0,c
  7984  004574  340B               	rlcf	___fpclassifyf@u^0,w,c
  7985  004576  6E05               	movwf	??___fpclassifyf^0,c
  7986  004578  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7987  00457A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7988  00457C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7989  00457E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7990  004580  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7991  004582  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7992  004584  5005               	movf	??___fpclassifyf^0,w,c
  7993  004586  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7994  004588  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7995  00458A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7996  00458C  A4D8               	btfss	status,2,c
  7997  00458E  EFCB  F022         	goto	u4581
  7998  004592  EFCD  F022         	goto	u4580
  7999  004596                     u4581:
  8000  004596  EFD3  F022         	goto	l4875
  8001  00459A                     u4580:
  8002  00459A  0E00               	movlw	0
  8003  00459C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8004  00459E  0E02               	movlw	2
  8005  0045A0  6E01               	movwf	?___fpclassifyf^0,c
  8006  0045A2  EF08  F023         	goto	l1455
  8007  0045A6                     l4875:
  8008  0045A6  0E00               	movlw	0
  8009  0045A8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8010  0045AA  0E03               	movlw	3
  8011  0045AC  6E01               	movwf	?___fpclassifyf^0,c
  8012  0045AE  EF08  F023         	goto	l1455
  8013  0045B2                     l4879:
  8014  0045B2  2809               	incf	___fpclassifyf@e^0,w,c
  8015  0045B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8016  0045B6  A4D8               	btfss	status,2,c
  8017  0045B8  EFE0  F022         	goto	u4591
  8018  0045BC  EFE2  F022         	goto	u4590
  8019  0045C0                     u4591:
  8020  0045C0  EF04  F023         	goto	l4885
  8021  0045C4                     u4590:
  8022  0045C4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8023  0045C8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8024  0045CC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8025  0045D0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8026  0045D4  0E09               	movlw	9
  8027  0045D6                     u4605:
  8028  0045D6  90D8               	bcf	status,0,c
  8029  0045D8  3605               	rlcf	??___fpclassifyf^0,f,c
  8030  0045DA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8031  0045DC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8032  0045DE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8033  0045E0  2EE8               	decfsz	wreg,f,c
  8034  0045E2  EFEB  F022         	goto	u4605
  8035  0045E6  5005               	movf	??___fpclassifyf^0,w,c
  8036  0045E8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8037  0045EA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8038  0045EC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8039  0045EE  B4D8               	btfsc	status,2,c
  8040  0045F0  EFFC  F022         	goto	u4611
  8041  0045F4  EFFF  F022         	goto	u4610
  8042  0045F8                     u4611:
  8043  0045F8  0E01               	movlw	1
  8044  0045FA  EF00  F023         	goto	u4620
  8045  0045FE                     u4610:
  8046  0045FE  0E00               	movlw	0
  8047  004600                     u4620:
  8048  004600  6E01               	movwf	?___fpclassifyf^0,c
  8049  004602  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8050  004604  EF08  F023         	goto	l1455
  8051  004608                     l4885:
  8052  004608  0E00               	movlw	0
  8053  00460A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8054  00460C  0E04               	movlw	4
  8055  00460E  6E01               	movwf	?___fpclassifyf^0,c
  8056  004610                     l1455:
  8057  004610  0012               	return		;funcret
  8058  004612                     __end_of___fpclassifyf:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function ___fltol *****************
  8062 ;; Defined at:
  8063 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  f1              4    0[COMRAM] int 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  exp1            1    9[COMRAM] unsigned char 
  8068 ;;  sign1           1    8[COMRAM] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  4    0[COMRAM] long 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8078 ;;      Params:         4       0       0       0       0       0       0       0       0
  8079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8080 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8081 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8082 ;;Total ram usage:       10 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; Hardware stack levels required when called: 1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_efgtoa
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text16
  8093  00420A                     __ptext16:
  8094                           	callstack 0
  8095  00420A                     ___fltol:
  8096                           	callstack 25
  8097  00420A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8098  00420C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8099  00420E  6E0A               	movwf	___fltol@exp1^0,c
  8100  004210  500A               	movf	___fltol@exp1^0,w,c
  8101  004212  A4D8               	btfss	status,2,c
  8102  004214  EF0E  F021         	goto	u4451
  8103  004218  EF10  F021         	goto	u4450
  8104  00421C                     u4451:
  8105  00421C  EF1A  F021         	goto	l4807
  8106  004220                     u4450:
  8107  004220                     l4803:
  8108  004220  0E00               	movlw	0
  8109  004222  6E01               	movwf	?___fltol^0,c
  8110  004224  0E00               	movlw	0
  8111  004226  6E02               	movwf	(?___fltol+1)^0,c
  8112  004228  0E00               	movlw	0
  8113  00422A  6E03               	movwf	(?___fltol+2)^0,c
  8114  00422C  0E00               	movlw	0
  8115  00422E  6E04               	movwf	(?___fltol+3)^0,c
  8116  004230  EF87  F021         	goto	l851
  8117  004234                     l4807:
  8118  004234  C001  F005         	movff	___fltol@f1,??___fltol
  8119  004238  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  8120  00423C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  8121  004240  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  8122  004244  0E20               	movlw	32
  8123  004246  EF2A  F021         	goto	u4460
  8124  00424A                     u4465:
  8125  00424A  90D8               	bcf	status,0,c
  8126  00424C  3208               	rrcf	(??___fltol+3)^0,f,c
  8127  00424E  3207               	rrcf	(??___fltol+2)^0,f,c
  8128  004250  3206               	rrcf	(??___fltol+1)^0,f,c
  8129  004252  3205               	rrcf	??___fltol^0,f,c
  8130  004254                     u4460:
  8131  004254  2EE8               	decfsz	wreg,f,c
  8132  004256  EF25  F021         	goto	u4465
  8133  00425A  5005               	movf	??___fltol^0,w,c
  8134  00425C  6E09               	movwf	___fltol@sign1^0,c
  8135  00425E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8136  004260  0EFF               	movlw	255
  8137  004262  1601               	andwf	___fltol@f1^0,f,c
  8138  004264  0EFF               	movlw	255
  8139  004266  1602               	andwf	(___fltol@f1+1)^0,f,c
  8140  004268  0EFF               	movlw	255
  8141  00426A  1603               	andwf	(___fltol@f1+2)^0,f,c
  8142  00426C  0E00               	movlw	0
  8143  00426E  1604               	andwf	(___fltol@f1+3)^0,f,c
  8144  004270  0E96               	movlw	150
  8145  004272  5E0A               	subwf	___fltol@exp1^0,f,c
  8146  004274  BE0A               	btfsc	___fltol@exp1^0,7,c
  8147  004276  EF41  F021         	goto	u4470
  8148  00427A  EF3F  F021         	goto	u4471
  8149  00427E                     u4471:
  8150  00427E  EF57  F021         	goto	l4827
  8151  004282                     u4470:
  8152  004282  500A               	movf	___fltol@exp1^0,w,c
  8153  004284  0A80               	xorlw	128
  8154  004286  0F97               	addlw	151
  8155  004288  B0D8               	btfsc	status,0,c
  8156  00428A  EF49  F021         	goto	u4481
  8157  00428E  EF4B  F021         	goto	u4480
  8158  004292                     u4481:
  8159  004292  EF4D  F021         	goto	l4823
  8160  004296                     u4480:
  8161  004296  EF10  F021         	goto	l4803
  8162  00429A                     l4823:
  8163  00429A  90D8               	bcf	status,0,c
  8164  00429C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8165  00429E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8166  0042A0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8167  0042A2  3201               	rrcf	___fltol@f1^0,f,c
  8168  0042A4  3E0A               	incfsz	___fltol@exp1^0,f,c
  8169  0042A6  EF4D  F021         	goto	l4823
  8170  0042AA  EF6F  F021         	goto	l4837
  8171  0042AE                     l4827:
  8172  0042AE  0E1F               	movlw	31
  8173  0042B0  640A               	cpfsgt	___fltol@exp1^0,c
  8174  0042B2  EF5D  F021         	goto	u4491
  8175  0042B6  EF5F  F021         	goto	u4490
  8176  0042BA                     u4491:
  8177  0042BA  EF67  F021         	goto	l4835
  8178  0042BE                     u4490:
  8179  0042BE  EF10  F021         	goto	l4803
  8180  0042C2                     l4833:
  8181  0042C2  90D8               	bcf	status,0,c
  8182  0042C4  3601               	rlcf	___fltol@f1^0,f,c
  8183  0042C6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8184  0042C8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8185  0042CA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8186  0042CC  060A               	decf	___fltol@exp1^0,f,c
  8187  0042CE                     l4835:
  8188  0042CE  500A               	movf	___fltol@exp1^0,w,c
  8189  0042D0  A4D8               	btfss	status,2,c
  8190  0042D2  EF6D  F021         	goto	u4501
  8191  0042D6  EF6F  F021         	goto	u4500
  8192  0042DA                     u4501:
  8193  0042DA  EF61  F021         	goto	l4833
  8194  0042DE                     u4500:
  8195  0042DE                     l4837:
  8196  0042DE  5009               	movf	___fltol@sign1^0,w,c
  8197  0042E0  B4D8               	btfsc	status,2,c
  8198  0042E2  EF75  F021         	goto	u4511
  8199  0042E6  EF77  F021         	goto	u4510
  8200  0042EA                     u4511:
  8201  0042EA  EF7F  F021         	goto	l4841
  8202  0042EE                     u4510:
  8203  0042EE  1E04               	comf	(___fltol@f1+3)^0,f,c
  8204  0042F0  1E03               	comf	(___fltol@f1+2)^0,f,c
  8205  0042F2  1E02               	comf	(___fltol@f1+1)^0,f,c
  8206  0042F4  6C01               	negf	___fltol@f1^0,c
  8207  0042F6  0E00               	movlw	0
  8208  0042F8  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8209  0042FA  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8210  0042FC  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8211  0042FE                     l4841:
  8212  0042FE  C001  F001         	movff	___fltol@f1,?___fltol
  8213  004302  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  8214  004306  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  8215  00430A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  8216  00430E                     l851:
  8217  00430E  0012               	return		;funcret
  8218  004310                     __end_of___fltol:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function ___flsub *****************
  8222 ;; Defined at:
  8223 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  b               4   39[COMRAM] long 
  8226 ;;  a               4   43[COMRAM] long 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  4   39[COMRAM] long 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8238 ;;      Params:         8       0       0       0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8241 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8242 ;;Total ram usage:        8 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 2
  8245 ;; This function calls:
  8246 ;;		___fladd
  8247 ;; This function is called by:
  8248 ;;		_efgtoa
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text17
  8253  00553A                     __ptext17:
  8254                           	callstack 0
  8255  00553A                     ___flsub:
  8256                           	callstack 24
  8257  00553A  0E00               	movlw	0
  8258  00553C  1A2C               	xorwf	___flsub@a^0,f,c
  8259  00553E  0E00               	movlw	0
  8260  005540  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  8261  005542  0E00               	movlw	0
  8262  005544  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  8263  005546  0E80               	movlw	128
  8264  005548  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  8265  00554A  C028  F001         	movff	___flsub@b,___fladd@b
  8266  00554E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8267  005552  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8268  005556  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8269  00555A  C02C  F005         	movff	___flsub@a,___fladd@a
  8270  00555E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8271  005562  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8272  005566  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8273  00556A  EC76  F012         	call	___fladd	;wreg free
  8274  00556E  C001  F028         	movff	?___fladd,?___flsub
  8275  005572  C002  F029         	movff	?___fladd+1,?___flsub+1
  8276  005576  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8277  00557A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8278  00557E  0012               	return		;funcret
  8279  005580                     __end_of___flsub:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function ___fladd *****************
  8283 ;; Defined at:
  8284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  b               4    0[COMRAM] long 
  8287 ;;  a               4    4[COMRAM] long 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  grs             1   15[COMRAM] unsigned char 
  8290 ;;  bexp            1   14[COMRAM] unsigned char 
  8291 ;;  aexp            1   13[COMRAM] unsigned char 
  8292 ;;  signs           1   12[COMRAM] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  4    0[COMRAM] unsigned char 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8302 ;;      Params:         8       0       0       0       0       0       0       0       0
  8303 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8304 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8305 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8306 ;;Total ram usage:       16 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 1
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		___flsub
  8313 ;;		_efgtoa
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text18
  8318  0024EC                     __ptext18:
  8319                           	callstack 0
  8320  0024EC                     ___fladd:
  8321                           	callstack 24
  8322  0024EC  5004               	movf	(___fladd@b+3)^0,w,c
  8323  0024EE  0B80               	andlw	128
  8324  0024F0  6E0D               	movwf	___fladd@signs^0,c
  8325  0024F2  5004               	movf	(___fladd@b+3)^0,w,c
  8326  0024F4  2404               	addwf	(___fladd@b+3)^0,w,c
  8327  0024F6  6E0F               	movwf	___fladd@bexp^0,c
  8328  0024F8  AE03               	btfss	(___fladd@b+2)^0,7,c
  8329  0024FA  EF81  F012         	goto	u3361
  8330  0024FE  EF83  F012         	goto	u3360
  8331  002502                     u3361:
  8332  002502  EF84  F012         	goto	l4169
  8333  002506                     u3360:
  8334  002506  800F               	bsf	___fladd@bexp^0,0,c
  8335  002508                     l4169:
  8336  002508  500F               	movf	___fladd@bexp^0,w,c
  8337  00250A  B4D8               	btfsc	status,2,c
  8338  00250C  EF8A  F012         	goto	u3371
  8339  002510  EF8C  F012         	goto	u3370
  8340  002514                     u3371:
  8341  002514  EFA1  F012         	goto	l4179
  8342  002518                     u3370:
  8343  002518  280F               	incf	___fladd@bexp^0,w,c
  8344  00251A  A4D8               	btfss	status,2,c
  8345  00251C  EF92  F012         	goto	u3381
  8346  002520  EF94  F012         	goto	u3380
  8347  002524                     u3381:
  8348  002524  EF9C  F012         	goto	l4175
  8349  002528                     u3380:
  8350  002528  0E00               	movlw	0
  8351  00252A  6E01               	movwf	___fladd@b^0,c
  8352  00252C  0E00               	movlw	0
  8353  00252E  6E02               	movwf	(___fladd@b+1)^0,c
  8354  002530  0E00               	movlw	0
  8355  002532  6E03               	movwf	(___fladd@b+2)^0,c
  8356  002534  0E00               	movlw	0
  8357  002536  6E04               	movwf	(___fladd@b+3)^0,c
  8358  002538                     l4175:
  8359  002538  8E03               	bsf	(___fladd@b+2)^0,7,c
  8360  00253A  0E00               	movlw	0
  8361  00253C  6E04               	movwf	(___fladd@b+3)^0,c
  8362  00253E  EFA9  F012         	goto	l4181
  8363  002542                     l4179:
  8364  002542  0E00               	movlw	0
  8365  002544  6E01               	movwf	___fladd@b^0,c
  8366  002546  0E00               	movlw	0
  8367  002548  6E02               	movwf	(___fladd@b+1)^0,c
  8368  00254A  0E00               	movlw	0
  8369  00254C  6E03               	movwf	(___fladd@b+2)^0,c
  8370  00254E  0E00               	movlw	0
  8371  002550  6E04               	movwf	(___fladd@b+3)^0,c
  8372  002552                     l4181:
  8373  002552  5008               	movf	(___fladd@a+3)^0,w,c
  8374  002554  0B80               	andlw	128
  8375  002556  6E0E               	movwf	___fladd@aexp^0,c
  8376  002558  500D               	movf	___fladd@signs^0,w,c
  8377  00255A  180E               	xorwf	___fladd@aexp^0,w,c
  8378  00255C  B4D8               	btfsc	status,2,c
  8379  00255E  EFB3  F012         	goto	u3391
  8380  002562  EFB5  F012         	goto	u3390
  8381  002566                     u3391:
  8382  002566  EFB6  F012         	goto	l4187
  8383  00256A                     u3390:
  8384  00256A  8C0D               	bsf	___fladd@signs^0,6,c
  8385  00256C                     l4187:
  8386  00256C  5008               	movf	(___fladd@a+3)^0,w,c
  8387  00256E  2408               	addwf	(___fladd@a+3)^0,w,c
  8388  002570  6E0E               	movwf	___fladd@aexp^0,c
  8389  002572  AE07               	btfss	(___fladd@a+2)^0,7,c
  8390  002574  EFBE  F012         	goto	u3401
  8391  002578  EFC0  F012         	goto	u3400
  8392  00257C                     u3401:
  8393  00257C  EFC1  F012         	goto	l4193
  8394  002580                     u3400:
  8395  002580  800E               	bsf	___fladd@aexp^0,0,c
  8396  002582                     l4193:
  8397  002582  500E               	movf	___fladd@aexp^0,w,c
  8398  002584  B4D8               	btfsc	status,2,c
  8399  002586  EFC7  F012         	goto	u3411
  8400  00258A  EFC9  F012         	goto	u3410
  8401  00258E                     u3411:
  8402  00258E  EFDE  F012         	goto	l4203
  8403  002592                     u3410:
  8404  002592  280E               	incf	___fladd@aexp^0,w,c
  8405  002594  A4D8               	btfss	status,2,c
  8406  002596  EFCF  F012         	goto	u3421
  8407  00259A  EFD1  F012         	goto	u3420
  8408  00259E                     u3421:
  8409  00259E  EFD9  F012         	goto	l4199
  8410  0025A2                     u3420:
  8411  0025A2  0E00               	movlw	0
  8412  0025A4  6E05               	movwf	___fladd@a^0,c
  8413  0025A6  0E00               	movlw	0
  8414  0025A8  6E06               	movwf	(___fladd@a+1)^0,c
  8415  0025AA  0E00               	movlw	0
  8416  0025AC  6E07               	movwf	(___fladd@a+2)^0,c
  8417  0025AE  0E00               	movlw	0
  8418  0025B0  6E08               	movwf	(___fladd@a+3)^0,c
  8419  0025B2                     l4199:
  8420  0025B2  8E07               	bsf	(___fladd@a+2)^0,7,c
  8421  0025B4  0E00               	movlw	0
  8422  0025B6  6E08               	movwf	(___fladd@a+3)^0,c
  8423  0025B8  EFE6  F012         	goto	l4205
  8424  0025BC                     l4203:
  8425  0025BC  0E00               	movlw	0
  8426  0025BE  6E05               	movwf	___fladd@a^0,c
  8427  0025C0  0E00               	movlw	0
  8428  0025C2  6E06               	movwf	(___fladd@a+1)^0,c
  8429  0025C4  0E00               	movlw	0
  8430  0025C6  6E07               	movwf	(___fladd@a+2)^0,c
  8431  0025C8  0E00               	movlw	0
  8432  0025CA  6E08               	movwf	(___fladd@a+3)^0,c
  8433  0025CC                     l4205:
  8434  0025CC  500F               	movf	___fladd@bexp^0,w,c
  8435  0025CE  5C0E               	subwf	___fladd@aexp^0,w,c
  8436  0025D0  B0D8               	btfsc	status,0,c
  8437  0025D2  EFED  F012         	goto	u3431
  8438  0025D6  EFEF  F012         	goto	u3430
  8439  0025DA                     u3431:
  8440  0025DA  EF16  F013         	goto	l4241
  8441  0025DE                     u3430:
  8442  0025DE  AC0D               	btfss	___fladd@signs^0,6,c
  8443  0025E0  EFF4  F012         	goto	u3441
  8444  0025E4  EFF6  F012         	goto	u3440
  8445  0025E8                     u3441:
  8446  0025E8  EFF8  F012         	goto	l4211
  8447  0025EC                     u3440:
  8448  0025EC  0E80               	movlw	128
  8449  0025EE  1A0D               	xorwf	___fladd@signs^0,f,c
  8450  0025F0                     l4211:
  8451  0025F0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8452  0025F4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8453  0025F8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8454  0025FC  C001  F010         	movff	___fladd@b,___fladd@grs
  8455  002600  C005  F001         	movff	___fladd@a,___fladd@b
  8456  002604  C010  F005         	movff	___fladd@grs,___fladd@a
  8457  002608  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8458  00260C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8459  002610  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8460  002614  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8461  002618  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8462  00261C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8463  002620  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8464  002624  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8465  002628  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8466  00262C                     l4241:
  8467  00262C  0E00               	movlw	0
  8468  00262E  6E10               	movwf	___fladd@grs^0,c
  8469  002630  500F               	movf	___fladd@bexp^0,w,c
  8470  002632  C00E  F009         	movff	___fladd@aexp,??___fladd
  8471  002636  6A0A               	clrf	(??___fladd+1)^0,c
  8472  002638  5E09               	subwf	??___fladd^0,f,c
  8473  00263A  0E00               	movlw	0
  8474  00263C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  8475  00263E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  8476  002640  EF2B  F013         	goto	u3451
  8477  002644  500A               	movf	(??___fladd+1)^0,w,c
  8478  002646  E109               	bnz	u3450
  8479  002648  0E1A               	movlw	26
  8480  00264A  5C09               	subwf	??___fladd^0,w,c
  8481  00264C  A0D8               	btfss	status,0,c
  8482  00264E  EF2B  F013         	goto	u3451
  8483  002652  EF2D  F013         	goto	u3450
  8484  002656                     u3451:
  8485  002656  EF64  F013         	goto	l1083
  8486  00265A                     u3450:
  8487  00265A  5001               	movf	___fladd@b^0,w,c
  8488  00265C  1002               	iorwf	(___fladd@b+1)^0,w,c
  8489  00265E  1003               	iorwf	(___fladd@b+2)^0,w,c
  8490  002660  1004               	iorwf	(___fladd@b+3)^0,w,c
  8491  002662  A4D8               	btfss	status,2,c
  8492  002664  EF36  F013         	goto	u3461
  8493  002668  EF39  F013         	goto	u3460
  8494  00266C                     u3461:
  8495  00266C  0E01               	movlw	1
  8496  00266E  EF3A  F013         	goto	u3470
  8497  002672                     u3460:
  8498  002672  0E00               	movlw	0
  8499  002674                     u3470:
  8500  002674  6E10               	movwf	___fladd@grs^0,c
  8501  002676  0E00               	movlw	0
  8502  002678  6E01               	movwf	___fladd@b^0,c
  8503  00267A  0E00               	movlw	0
  8504  00267C  6E02               	movwf	(___fladd@b+1)^0,c
  8505  00267E  0E00               	movlw	0
  8506  002680  6E03               	movwf	(___fladd@b+2)^0,c
  8507  002682  0E00               	movlw	0
  8508  002684  6E04               	movwf	(___fladd@b+3)^0,c
  8509  002686  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8510  00268A  EF6D  F013         	goto	l1082
  8511  00268E                     l1084:
  8512  00268E  A010               	btfss	___fladd@grs^0,0,c
  8513  002690  EF4C  F013         	goto	u3481
  8514  002694  EF4E  F013         	goto	u3480
  8515  002698                     u3481:
  8516  002698  EF54  F013         	goto	l4253
  8517  00269C                     u3480:
  8518  00269C  90D8               	bcf	status,0,c
  8519  00269E  3010               	rrcf	___fladd@grs^0,w,c
  8520  0026A0  0901               	iorlw	1
  8521  0026A2  6E10               	movwf	___fladd@grs^0,c
  8522  0026A4  EF56  F013         	goto	l4255
  8523  0026A8                     l4253:
  8524  0026A8  90D8               	bcf	status,0,c
  8525  0026AA  3210               	rrcf	___fladd@grs^0,f,c
  8526  0026AC                     l4255:
  8527  0026AC  A001               	btfss	___fladd@b^0,0,c
  8528  0026AE  EF5B  F013         	goto	u3491
  8529  0026B2  EF5D  F013         	goto	u3490
  8530  0026B6                     u3491:
  8531  0026B6  EF5E  F013         	goto	l4259
  8532  0026BA                     u3490:
  8533  0026BA  8E10               	bsf	___fladd@grs^0,7,c
  8534  0026BC                     l4259:
  8535  0026BC  3404               	rlcf	(___fladd@b+3)^0,w,c
  8536  0026BE  3204               	rrcf	(___fladd@b+3)^0,f,c
  8537  0026C0  3203               	rrcf	(___fladd@b+2)^0,f,c
  8538  0026C2  3202               	rrcf	(___fladd@b+1)^0,f,c
  8539  0026C4  3201               	rrcf	___fladd@b^0,f,c
  8540  0026C6  2A0F               	incf	___fladd@bexp^0,f,c
  8541  0026C8                     l1083:
  8542  0026C8  500E               	movf	___fladd@aexp^0,w,c
  8543  0026CA  5C0F               	subwf	___fladd@bexp^0,w,c
  8544  0026CC  A0D8               	btfss	status,0,c
  8545  0026CE  EF6B  F013         	goto	u3501
  8546  0026D2  EF6D  F013         	goto	u3500
  8547  0026D6                     u3501:
  8548  0026D6  EF47  F013         	goto	l1084
  8549  0026DA                     u3500:
  8550  0026DA                     l1082:
  8551  0026DA  BC0D               	btfsc	___fladd@signs^0,6,c
  8552  0026DC  EF72  F013         	goto	u3511
  8553  0026E0  EF74  F013         	goto	u3510
  8554  0026E4                     u3511:
  8555  0026E4  EFB4  F013         	goto	l4287
  8556  0026E8                     u3510:
  8557  0026E8  500F               	movf	___fladd@bexp^0,w,c
  8558  0026EA  A4D8               	btfss	status,2,c
  8559  0026EC  EF7A  F013         	goto	u3521
  8560  0026F0  EF7C  F013         	goto	u3520
  8561  0026F4                     u3521:
  8562  0026F4  EF86  F013         	goto	l4269
  8563  0026F8                     u3520:
  8564  0026F8  0E00               	movlw	0
  8565  0026FA  6E01               	movwf	?___fladd^0,c
  8566  0026FC  0E00               	movlw	0
  8567  0026FE  6E02               	movwf	(?___fladd+1)^0,c
  8568  002700  0E00               	movlw	0
  8569  002702  6E03               	movwf	(?___fladd+2)^0,c
  8570  002704  0E00               	movlw	0
  8571  002706  6E04               	movwf	(?___fladd+3)^0,c
  8572  002708  EFD5  F014         	goto	l1091
  8573  00270C                     l4269:
  8574  00270C  5005               	movf	___fladd@a^0,w,c
  8575  00270E  2601               	addwf	___fladd@b^0,f,c
  8576  002710  5006               	movf	(___fladd@a+1)^0,w,c
  8577  002712  2202               	addwfc	(___fladd@b+1)^0,f,c
  8578  002714  5007               	movf	(___fladd@a+2)^0,w,c
  8579  002716  2203               	addwfc	(___fladd@b+2)^0,f,c
  8580  002718  5008               	movf	(___fladd@a+3)^0,w,c
  8581  00271A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8582  00271C  A004               	btfss	(___fladd@b+3)^0,0,c
  8583  00271E  EF93  F013         	goto	u3531
  8584  002722  EF95  F013         	goto	u3530
  8585  002726                     u3531:
  8586  002726  EF41  F014         	goto	l4323
  8587  00272A                     u3530:
  8588  00272A  A010               	btfss	___fladd@grs^0,0,c
  8589  00272C  EF9A  F013         	goto	u3541
  8590  002730  EF9C  F013         	goto	u3540
  8591  002734                     u3541:
  8592  002734  EFA2  F013         	goto	l4277
  8593  002738                     u3540:
  8594  002738  90D8               	bcf	status,0,c
  8595  00273A  3010               	rrcf	___fladd@grs^0,w,c
  8596  00273C  0901               	iorlw	1
  8597  00273E  6E10               	movwf	___fladd@grs^0,c
  8598  002740  EFA4  F013         	goto	l4279
  8599  002744                     l4277:
  8600  002744  90D8               	bcf	status,0,c
  8601  002746  3210               	rrcf	___fladd@grs^0,f,c
  8602  002748                     l4279:
  8603  002748  A001               	btfss	___fladd@b^0,0,c
  8604  00274A  EFA9  F013         	goto	u3551
  8605  00274E  EFAB  F013         	goto	u3550
  8606  002752                     u3551:
  8607  002752  EFAC  F013         	goto	l4283
  8608  002756                     u3550:
  8609  002756  8E10               	bsf	___fladd@grs^0,7,c
  8610  002758                     l4283:
  8611  002758  3404               	rlcf	(___fladd@b+3)^0,w,c
  8612  00275A  3204               	rrcf	(___fladd@b+3)^0,f,c
  8613  00275C  3203               	rrcf	(___fladd@b+2)^0,f,c
  8614  00275E  3202               	rrcf	(___fladd@b+1)^0,f,c
  8615  002760  3201               	rrcf	___fladd@b^0,f,c
  8616  002762  2A0F               	incf	___fladd@bexp^0,f,c
  8617  002764  EF41  F014         	goto	l4323
  8618  002768                     l4287:
  8619  002768  5005               	movf	___fladd@a^0,w,c
  8620  00276A  5C01               	subwf	___fladd@b^0,w,c
  8621  00276C  5006               	movf	(___fladd@a+1)^0,w,c
  8622  00276E  5802               	subwfb	(___fladd@b+1)^0,w,c
  8623  002770  5007               	movf	(___fladd@a+2)^0,w,c
  8624  002772  5803               	subwfb	(___fladd@b+2)^0,w,c
  8625  002774  5004               	movf	(___fladd@b+3)^0,w,c
  8626  002776  0A80               	xorlw	128
  8627  002778  6E09               	movwf	??___fladd^0,c
  8628  00277A  5008               	movf	(___fladd@a+3)^0,w,c
  8629  00277C  0A80               	xorlw	128
  8630  00277E  5809               	subwfb	??___fladd^0,w,c
  8631  002780  B0D8               	btfsc	status,0,c
  8632  002782  EFC5  F013         	goto	u3561
  8633  002786  EFC7  F013         	goto	u3560
  8634  00278A                     u3561:
  8635  00278A  EFF2  F013         	goto	l4297
  8636  00278E                     u3560:
  8637  00278E  5001               	movf	___fladd@b^0,w,c
  8638  002790  5C05               	subwf	___fladd@a^0,w,c
  8639  002792  6E09               	movwf	??___fladd^0,c
  8640  002794  5002               	movf	(___fladd@b+1)^0,w,c
  8641  002796  5806               	subwfb	(___fladd@a+1)^0,w,c
  8642  002798  6E0A               	movwf	(??___fladd+1)^0,c
  8643  00279A  5003               	movf	(___fladd@b+2)^0,w,c
  8644  00279C  5807               	subwfb	(___fladd@a+2)^0,w,c
  8645  00279E  6E0B               	movwf	(??___fladd+2)^0,c
  8646  0027A0  5004               	movf	(___fladd@b+3)^0,w,c
  8647  0027A2  5808               	subwfb	(___fladd@a+3)^0,w,c
  8648  0027A4  6E0C               	movwf	(??___fladd+3)^0,c
  8649  0027A6  0EFF               	movlw	255
  8650  0027A8  2409               	addwf	??___fladd^0,w,c
  8651  0027AA  6E01               	movwf	___fladd@b^0,c
  8652  0027AC  0EFF               	movlw	255
  8653  0027AE  200A               	addwfc	(??___fladd+1)^0,w,c
  8654  0027B0  6E02               	movwf	(___fladd@b+1)^0,c
  8655  0027B2  0EFF               	movlw	255
  8656  0027B4  200B               	addwfc	(??___fladd+2)^0,w,c
  8657  0027B6  6E03               	movwf	(___fladd@b+2)^0,c
  8658  0027B8  0EFF               	movlw	255
  8659  0027BA  200C               	addwfc	(??___fladd+3)^0,w,c
  8660  0027BC  6E04               	movwf	(___fladd@b+3)^0,c
  8661  0027BE  0E80               	movlw	128
  8662  0027C0  1A0D               	xorwf	___fladd@signs^0,f,c
  8663  0027C2  6C10               	negf	___fladd@grs^0,c
  8664  0027C4  5010               	movf	___fladd@grs^0,w,c
  8665  0027C6  A4D8               	btfss	status,2,c
  8666  0027C8  EFE8  F013         	goto	u3571
  8667  0027CC  EFEA  F013         	goto	u3570
  8668  0027D0                     u3571:
  8669  0027D0  EFFA  F013         	goto	l1099
  8670  0027D4                     u3570:
  8671  0027D4  0E01               	movlw	1
  8672  0027D6  2601               	addwf	___fladd@b^0,f,c
  8673  0027D8  0E00               	movlw	0
  8674  0027DA  2202               	addwfc	(___fladd@b+1)^0,f,c
  8675  0027DC  2203               	addwfc	(___fladd@b+2)^0,f,c
  8676  0027DE  2204               	addwfc	(___fladd@b+3)^0,f,c
  8677  0027E0  EFFA  F013         	goto	l1099
  8678  0027E4                     l4297:
  8679  0027E4  5005               	movf	___fladd@a^0,w,c
  8680  0027E6  5E01               	subwf	___fladd@b^0,f,c
  8681  0027E8  5006               	movf	(___fladd@a+1)^0,w,c
  8682  0027EA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8683  0027EC  5007               	movf	(___fladd@a+2)^0,w,c
  8684  0027EE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8685  0027F0  5008               	movf	(___fladd@a+3)^0,w,c
  8686  0027F2  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8687  0027F4                     l1099:
  8688  0027F4  5001               	movf	___fladd@b^0,w,c
  8689  0027F6  1002               	iorwf	(___fladd@b+1)^0,w,c
  8690  0027F8  1003               	iorwf	(___fladd@b+2)^0,w,c
  8691  0027FA  1004               	iorwf	(___fladd@b+3)^0,w,c
  8692  0027FC  A4D8               	btfss	status,2,c
  8693  0027FE  EF03  F014         	goto	u3581
  8694  002802  EF05  F014         	goto	u3580
  8695  002806                     u3581:
  8696  002806  EF3A  F014         	goto	l4321
  8697  00280A                     u3580:
  8698  00280A  5010               	movf	___fladd@grs^0,w,c
  8699  00280C  A4D8               	btfss	status,2,c
  8700  00280E  EF0B  F014         	goto	u3591
  8701  002812  EF0D  F014         	goto	u3590
  8702  002816                     u3591:
  8703  002816  EF3A  F014         	goto	l4321
  8704  00281A                     u3590:
  8705  00281A  0E00               	movlw	0
  8706  00281C  6E01               	movwf	?___fladd^0,c
  8707  00281E  0E00               	movlw	0
  8708  002820  6E02               	movwf	(?___fladd+1)^0,c
  8709  002822  0E00               	movlw	0
  8710  002824  6E03               	movwf	(?___fladd+2)^0,c
  8711  002826  0E00               	movlw	0
  8712  002828  6E04               	movwf	(?___fladd+3)^0,c
  8713  00282A  EFD5  F014         	goto	l1091
  8714  00282E                     l4305:
  8715  00282E  90D8               	bcf	status,0,c
  8716  002830  3601               	rlcf	___fladd@b^0,f,c
  8717  002832  3602               	rlcf	(___fladd@b+1)^0,f,c
  8718  002834  3603               	rlcf	(___fladd@b+2)^0,f,c
  8719  002836  3604               	rlcf	(___fladd@b+3)^0,f,c
  8720  002838  AE10               	btfss	___fladd@grs^0,7,c
  8721  00283A  EF21  F014         	goto	u3601
  8722  00283E  EF23  F014         	goto	u3600
  8723  002842                     u3601:
  8724  002842  EF24  F014         	goto	l4311
  8725  002846                     u3600:
  8726  002846  8001               	bsf	___fladd@b^0,0,c
  8727  002848                     l4311:
  8728  002848  A010               	btfss	___fladd@grs^0,0,c
  8729  00284A  EF29  F014         	goto	u3611
  8730  00284E  EF2B  F014         	goto	u3610
  8731  002852                     u3611:
  8732  002852  EF2F  F014         	goto	l4315
  8733  002856                     u3610:
  8734  002856  80D8               	bsf	status,0,c
  8735  002858  3610               	rlcf	___fladd@grs^0,f,c
  8736  00285A  EF31  F014         	goto	l4317
  8737  00285E                     l4315:
  8738  00285E  90D8               	bcf	status,0,c
  8739  002860  3610               	rlcf	___fladd@grs^0,f,c
  8740  002862                     l4317:
  8741  002862  500F               	movf	___fladd@bexp^0,w,c
  8742  002864  B4D8               	btfsc	status,2,c
  8743  002866  EF37  F014         	goto	u3621
  8744  00286A  EF39  F014         	goto	u3620
  8745  00286E                     u3621:
  8746  00286E  EF3A  F014         	goto	l4321
  8747  002872                     u3620:
  8748  002872  060F               	decf	___fladd@bexp^0,f,c
  8749  002874                     l4321:
  8750  002874  AE03               	btfss	(___fladd@b+2)^0,7,c
  8751  002876  EF3F  F014         	goto	u3631
  8752  00287A  EF41  F014         	goto	u3630
  8753  00287E                     u3631:
  8754  00287E  EF17  F014         	goto	l4305
  8755  002882                     u3630:
  8756  002882                     l4323:
  8757  002882  0E00               	movlw	0
  8758  002884  6E0E               	movwf	___fladd@aexp^0,c
  8759  002886  AE10               	btfss	___fladd@grs^0,7,c
  8760  002888  EF48  F014         	goto	u3641
  8761  00288C  EF4A  F014         	goto	u3640
  8762  002890                     u3641:
  8763  002890  EF62  F014         	goto	l1108
  8764  002894                     u3640:
  8765  002894  C010  F009         	movff	___fladd@grs,??___fladd
  8766  002898  0E7F               	movlw	127
  8767  00289A  1609               	andwf	??___fladd^0,f,c
  8768  00289C  B4D8               	btfsc	status,2,c
  8769  00289E  EF53  F014         	goto	u3651
  8770  0028A2  EF55  F014         	goto	u3650
  8771  0028A6                     u3651:
  8772  0028A6  EF59  F014         	goto	l1109
  8773  0028AA                     u3650:
  8774  0028AA                     l4329:
  8775  0028AA  0E01               	movlw	1
  8776  0028AC  6E0E               	movwf	___fladd@aexp^0,c
  8777  0028AE  EF62  F014         	goto	l1108
  8778  0028B2                     l1109:
  8779  0028B2  A001               	btfss	___fladd@b^0,0,c
  8780  0028B4  EF5E  F014         	goto	u3661
  8781  0028B8  EF60  F014         	goto	u3660
  8782  0028BC                     u3661:
  8783  0028BC  EF62  F014         	goto	l1108
  8784  0028C0                     u3660:
  8785  0028C0  EF55  F014         	goto	l4329
  8786  0028C4                     l1108:
  8787  0028C4  500E               	movf	___fladd@aexp^0,w,c
  8788  0028C6  B4D8               	btfsc	status,2,c
  8789  0028C8  EF68  F014         	goto	u3671
  8790  0028CC  EF6A  F014         	goto	u3670
  8791  0028D0                     u3671:
  8792  0028D0  EF95  F014         	goto	l4341
  8793  0028D4                     u3670:
  8794  0028D4  0E01               	movlw	1
  8795  0028D6  2601               	addwf	___fladd@b^0,f,c
  8796  0028D8  0E00               	movlw	0
  8797  0028DA  2202               	addwfc	(___fladd@b+1)^0,f,c
  8798  0028DC  2203               	addwfc	(___fladd@b+2)^0,f,c
  8799  0028DE  2204               	addwfc	(___fladd@b+3)^0,f,c
  8800  0028E0  A004               	btfss	(___fladd@b+3)^0,0,c
  8801  0028E2  EF75  F014         	goto	u3681
  8802  0028E6  EF77  F014         	goto	u3680
  8803  0028EA                     u3681:
  8804  0028EA  EF95  F014         	goto	l4341
  8805  0028EE                     u3680:
  8806  0028EE  C001  F009         	movff	___fladd@b,??___fladd
  8807  0028F2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8808  0028F6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8809  0028FA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8810  0028FE  340C               	rlcf	(??___fladd+3)^0,w,c
  8811  002900  320C               	rrcf	(??___fladd+3)^0,f,c
  8812  002902  320B               	rrcf	(??___fladd+2)^0,f,c
  8813  002904  320A               	rrcf	(??___fladd+1)^0,f,c
  8814  002906  3209               	rrcf	??___fladd^0,f,c
  8815  002908  C009  F001         	movff	??___fladd,___fladd@b
  8816  00290C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8817  002910  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8818  002914  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8819  002918  280F               	incf	___fladd@bexp^0,w,c
  8820  00291A  B4D8               	btfsc	status,2,c
  8821  00291C  EF92  F014         	goto	u3691
  8822  002920  EF94  F014         	goto	u3690
  8823  002924                     u3691:
  8824  002924  EF95  F014         	goto	l4341
  8825  002928                     u3690:
  8826  002928  2A0F               	incf	___fladd@bexp^0,f,c
  8827  00292A                     l4341:
  8828  00292A  280F               	incf	___fladd@bexp^0,w,c
  8829  00292C  B4D8               	btfsc	status,2,c
  8830  00292E  EF9B  F014         	goto	u3701
  8831  002932  EF9D  F014         	goto	u3700
  8832  002936                     u3701:
  8833  002936  EFA5  F014         	goto	l4345
  8834  00293A                     u3700:
  8835  00293A  500F               	movf	___fladd@bexp^0,w,c
  8836  00293C  A4D8               	btfss	status,2,c
  8837  00293E  EFA3  F014         	goto	u3711
  8838  002942  EFA5  F014         	goto	u3710
  8839  002946                     u3711:
  8840  002946  EFB7  F014         	goto	l4349
  8841  00294A                     u3710:
  8842  00294A                     l4345:
  8843  00294A  0E00               	movlw	0
  8844  00294C  6E01               	movwf	___fladd@b^0,c
  8845  00294E  0E00               	movlw	0
  8846  002950  6E02               	movwf	(___fladd@b+1)^0,c
  8847  002952  0E00               	movlw	0
  8848  002954  6E03               	movwf	(___fladd@b+2)^0,c
  8849  002956  0E00               	movlw	0
  8850  002958  6E04               	movwf	(___fladd@b+3)^0,c
  8851  00295A  500F               	movf	___fladd@bexp^0,w,c
  8852  00295C  A4D8               	btfss	status,2,c
  8853  00295E  EFB3  F014         	goto	u3721
  8854  002962  EFB5  F014         	goto	u3720
  8855  002966                     u3721:
  8856  002966  EFB7  F014         	goto	l4349
  8857  00296A                     u3720:
  8858  00296A  0E00               	movlw	0
  8859  00296C  6E0D               	movwf	___fladd@signs^0,c
  8860  00296E                     l4349:
  8861  00296E  A00F               	btfss	___fladd@bexp^0,0,c
  8862  002970  EFBC  F014         	goto	u3731
  8863  002974  EFBE  F014         	goto	u3730
  8864  002978                     u3731:
  8865  002978  EFC1  F014         	goto	l4353
  8866  00297C                     u3730:
  8867  00297C  8E03               	bsf	(___fladd@b+2)^0,7,c
  8868  00297E  EFC2  F014         	goto	l4355
  8869  002982                     l4353:
  8870  002982  9E03               	bcf	(___fladd@b+2)^0,7,c
  8871  002984                     l4355:
  8872  002984  90D8               	bcf	status,0,c
  8873  002986  300F               	rrcf	___fladd@bexp^0,w,c
  8874  002988  6E04               	movwf	(___fladd@b+3)^0,c
  8875  00298A  AE0D               	btfss	___fladd@signs^0,7,c
  8876  00298C  EFCA  F014         	goto	u3741
  8877  002990  EFCC  F014         	goto	u3740
  8878  002994                     u3741:
  8879  002994  EFCD  F014         	goto	l4361
  8880  002998                     u3740:
  8881  002998  8E04               	bsf	(___fladd@b+3)^0,7,c
  8882  00299A                     l4361:
  8883  00299A  C001  F001         	movff	___fladd@b,?___fladd
  8884  00299E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8885  0029A2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8886  0029A6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8887  0029AA                     l1091:
  8888  0029AA  0012               	return		;funcret
  8889  0029AC                     __end_of___fladd:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function ___flneg *****************
  8893 ;; Defined at:
  8894 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  f1              4    0[COMRAM] unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  4    0[COMRAM] unsigned char 
  8901 ;; Registers used:
  8902 ;;		wreg, status,2, status,0
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8908 ;;      Params:         4       0       0       0       0       0       0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8911 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8912 ;;Total ram usage:        4 bytes
  8913 ;; Hardware stack levels used: 1
  8914 ;; Hardware stack levels required when called: 1
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_efgtoa
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text19
  8923  005678                     __ptext19:
  8924                           	callstack 0
  8925  005678                     ___flneg:
  8926                           	callstack 25
  8927  005678  5001               	movf	___flneg@f1^0,w,c
  8928  00567A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8929  00567C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8930  00567E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8931  005680  B4D8               	btfsc	status,2,c
  8932  005682  EF45  F02B         	goto	u4441
  8933  005686  EF47  F02B         	goto	u4440
  8934  00568A                     u4441:
  8935  00568A  EF4F  F02B         	goto	l4797
  8936  00568E                     u4440:
  8937  00568E  0E00               	movlw	0
  8938  005690  1A01               	xorwf	___flneg@f1^0,f,c
  8939  005692  0E00               	movlw	0
  8940  005694  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8941  005696  0E00               	movlw	0
  8942  005698  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8943  00569A  0E80               	movlw	128
  8944  00569C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8945  00569E                     l4797:
  8946  00569E  C001  F001         	movff	___flneg@f1,?___flneg
  8947  0056A2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8948  0056A6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8949  0056AA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8950  0056AE  0012               	return		;funcret
  8951  0056B0                     __end_of___flneg:
  8952                           	callstack 0
  8953                           
  8954 ;; *************** function ___flge *****************
  8955 ;; Defined at:
  8956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  ff1             4   39[COMRAM] unsigned char 
  8959 ;;  ff2             4   43[COMRAM] unsigned char 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;		None               void
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8971 ;;      Params:         8       0       0       0       0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8973 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8974 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8975 ;;Total ram usage:       12 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 1
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_efgtoa
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text20
  8986  004310                     __ptext20:
  8987                           	callstack 0
  8988  004310                     ___flge:
  8989                           	callstack 25
  8990  004310  0E00               	movlw	0
  8991  004312  1428               	andwf	___flge@ff1^0,w,c
  8992  004314  6E30               	movwf	??___flge^0,c
  8993  004316  0E00               	movlw	0
  8994  004318  1429               	andwf	(___flge@ff1+1)^0,w,c
  8995  00431A  6E31               	movwf	(??___flge+1)^0,c
  8996  00431C  0E80               	movlw	128
  8997  00431E  142A               	andwf	(___flge@ff1+2)^0,w,c
  8998  004320  6E32               	movwf	(??___flge+2)^0,c
  8999  004322  0E7F               	movlw	127
  9000  004324  142B               	andwf	(___flge@ff1+3)^0,w,c
  9001  004326  6E33               	movwf	(??___flge+3)^0,c
  9002  004328  5030               	movf	??___flge^0,w,c
  9003  00432A  1031               	iorwf	(??___flge+1)^0,w,c
  9004  00432C  1032               	iorwf	(??___flge+2)^0,w,c
  9005  00432E  1033               	iorwf	(??___flge+3)^0,w,c
  9006  004330  A4D8               	btfss	status,2,c
  9007  004332  EF9D  F021         	goto	u4391
  9008  004336  EF9F  F021         	goto	u4390
  9009  00433A                     u4391:
  9010  00433A  EFA7  F021         	goto	l4775
  9011  00433E                     u4390:
  9012  00433E  0E00               	movlw	0
  9013  004340  6E28               	movwf	___flge@ff1^0,c
  9014  004342  0E00               	movlw	0
  9015  004344  6E29               	movwf	(___flge@ff1+1)^0,c
  9016  004346  0E00               	movlw	0
  9017  004348  6E2A               	movwf	(___flge@ff1+2)^0,c
  9018  00434A  0E00               	movlw	0
  9019  00434C  6E2B               	movwf	(___flge@ff1+3)^0,c
  9020  00434E                     l4775:
  9021  00434E  0E00               	movlw	0
  9022  004350  142C               	andwf	___flge@ff2^0,w,c
  9023  004352  6E30               	movwf	??___flge^0,c
  9024  004354  0E00               	movlw	0
  9025  004356  142D               	andwf	(___flge@ff2+1)^0,w,c
  9026  004358  6E31               	movwf	(??___flge+1)^0,c
  9027  00435A  0E80               	movlw	128
  9028  00435C  142E               	andwf	(___flge@ff2+2)^0,w,c
  9029  00435E  6E32               	movwf	(??___flge+2)^0,c
  9030  004360  0E7F               	movlw	127
  9031  004362  142F               	andwf	(___flge@ff2+3)^0,w,c
  9032  004364  6E33               	movwf	(??___flge+3)^0,c
  9033  004366  5030               	movf	??___flge^0,w,c
  9034  004368  1031               	iorwf	(??___flge+1)^0,w,c
  9035  00436A  1032               	iorwf	(??___flge+2)^0,w,c
  9036  00436C  1033               	iorwf	(??___flge+3)^0,w,c
  9037  00436E  A4D8               	btfss	status,2,c
  9038  004370  EFBC  F021         	goto	u4401
  9039  004374  EFBE  F021         	goto	u4400
  9040  004378                     u4401:
  9041  004378  EFC6  F021         	goto	l4779
  9042  00437C                     u4400:
  9043  00437C  0E00               	movlw	0
  9044  00437E  6E2C               	movwf	___flge@ff2^0,c
  9045  004380  0E00               	movlw	0
  9046  004382  6E2D               	movwf	(___flge@ff2+1)^0,c
  9047  004384  0E00               	movlw	0
  9048  004386  6E2E               	movwf	(___flge@ff2+2)^0,c
  9049  004388  0E00               	movlw	0
  9050  00438A  6E2F               	movwf	(___flge@ff2+3)^0,c
  9051  00438C                     l4779:
  9052  00438C  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  9053  00438E  EFCB  F021         	goto	u4411
  9054  004392  EFCD  F021         	goto	u4410
  9055  004396                     u4411:
  9056  004396  EFD6  F021         	goto	l4783
  9057  00439A                     u4410:
  9058  00439A  6C28               	negf	___flge@ff1^0,c
  9059  00439C  1E29               	comf	(___flge@ff1+1)^0,f,c
  9060  00439E  B0D8               	btfsc	status,0,c
  9061  0043A0  2A29               	incf	(___flge@ff1+1)^0,f,c
  9062  0043A2  1E2A               	comf	(___flge@ff1+2)^0,f,c
  9063  0043A4  B0D8               	btfsc	status,0,c
  9064  0043A6  2A2A               	incf	(___flge@ff1+2)^0,f,c
  9065  0043A8  0E80               	movlw	128
  9066  0043AA  562B               	subfwb	(___flge@ff1+3)^0,f,c
  9067  0043AC                     l4783:
  9068  0043AC  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  9069  0043AE  EFDB  F021         	goto	u4421
  9070  0043B2  EFDD  F021         	goto	u4420
  9071  0043B6                     u4421:
  9072  0043B6  EFE6  F021         	goto	l819
  9073  0043BA                     u4420:
  9074  0043BA  6C2C               	negf	___flge@ff2^0,c
  9075  0043BC  1E2D               	comf	(___flge@ff2+1)^0,f,c
  9076  0043BE  B0D8               	btfsc	status,0,c
  9077  0043C0  2A2D               	incf	(___flge@ff2+1)^0,f,c
  9078  0043C2  1E2E               	comf	(___flge@ff2+2)^0,f,c
  9079  0043C4  B0D8               	btfsc	status,0,c
  9080  0043C6  2A2E               	incf	(___flge@ff2+2)^0,f,c
  9081  0043C8  0E80               	movlw	128
  9082  0043CA  562F               	subfwb	(___flge@ff2+3)^0,f,c
  9083  0043CC                     l819:
  9084  0043CC  0E00               	movlw	0
  9085  0043CE  1A28               	xorwf	___flge@ff1^0,f,c
  9086  0043D0  0E00               	movlw	0
  9087  0043D2  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  9088  0043D4  0E00               	movlw	0
  9089  0043D6  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  9090  0043D8  0E80               	movlw	128
  9091  0043DA  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  9092  0043DC  0E00               	movlw	0
  9093  0043DE  1A2C               	xorwf	___flge@ff2^0,f,c
  9094  0043E0  0E00               	movlw	0
  9095  0043E2  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  9096  0043E4  0E00               	movlw	0
  9097  0043E6  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  9098  0043E8  0E80               	movlw	128
  9099  0043EA  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  9100  0043EC  502C               	movf	___flge@ff2^0,w,c
  9101  0043EE  5C28               	subwf	___flge@ff1^0,w,c
  9102  0043F0  502D               	movf	(___flge@ff2+1)^0,w,c
  9103  0043F2  5829               	subwfb	(___flge@ff1+1)^0,w,c
  9104  0043F4  502E               	movf	(___flge@ff2+2)^0,w,c
  9105  0043F6  582A               	subwfb	(___flge@ff1+2)^0,w,c
  9106  0043F8  502F               	movf	(___flge@ff2+3)^0,w,c
  9107  0043FA  582B               	subwfb	(___flge@ff1+3)^0,w,c
  9108  0043FC  B0D8               	btfsc	status,0,c
  9109  0043FE  EF03  F022         	goto	u4431
  9110  004402  EF05  F022         	goto	u4430
  9111  004406                     u4431:
  9112  004406  EF08  F022         	goto	l4789
  9113  00440A                     u4430:
  9114  00440A  90D8               	bcf	status,0,c
  9115  00440C  EF09  F022         	goto	l824
  9116  004410                     l4789:
  9117  004410  80D8               	bsf	status,0,c
  9118  004412                     l824:
  9119  004412  0012               	return		;funcret
  9120  004414                     __end_of___flge:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function ___fleq *****************
  9124 ;; Defined at:
  9125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  ff1             4    0[COMRAM] unsigned char 
  9128 ;;  ff2             4    4[COMRAM] unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;		None               void
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9140 ;;      Params:         8       0       0       0       0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9142 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9143 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9144 ;;Total ram usage:       12 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_efgtoa
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text21
  9155  004D5A                     __ptext21:
  9156                           	callstack 0
  9157  004D5A                     ___fleq:
  9158                           	callstack 25
  9159  004D5A  0E00               	movlw	0
  9160  004D5C  1401               	andwf	___fleq@ff1^0,w,c
  9161  004D5E  6E09               	movwf	??___fleq^0,c
  9162  004D60  0E00               	movlw	0
  9163  004D62  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9164  004D64  6E0A               	movwf	(??___fleq+1)^0,c
  9165  004D66  0E80               	movlw	128
  9166  004D68  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9167  004D6A  6E0B               	movwf	(??___fleq+2)^0,c
  9168  004D6C  0E7F               	movlw	127
  9169  004D6E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9170  004D70  6E0C               	movwf	(??___fleq+3)^0,c
  9171  004D72  5009               	movf	??___fleq^0,w,c
  9172  004D74  100A               	iorwf	(??___fleq+1)^0,w,c
  9173  004D76  100B               	iorwf	(??___fleq+2)^0,w,c
  9174  004D78  100C               	iorwf	(??___fleq+3)^0,w,c
  9175  004D7A  A4D8               	btfss	status,2,c
  9176  004D7C  EFC2  F026         	goto	u4361
  9177  004D80  EFC4  F026         	goto	u4360
  9178  004D84                     u4361:
  9179  004D84  EFCC  F026         	goto	l4759
  9180  004D88                     u4360:
  9181  004D88  0E00               	movlw	0
  9182  004D8A  6E01               	movwf	___fleq@ff1^0,c
  9183  004D8C  0E00               	movlw	0
  9184  004D8E  6E02               	movwf	(___fleq@ff1+1)^0,c
  9185  004D90  0E00               	movlw	0
  9186  004D92  6E03               	movwf	(___fleq@ff1+2)^0,c
  9187  004D94  0E00               	movlw	0
  9188  004D96  6E04               	movwf	(___fleq@ff1+3)^0,c
  9189  004D98                     l4759:
  9190  004D98  0E00               	movlw	0
  9191  004D9A  1405               	andwf	___fleq@ff2^0,w,c
  9192  004D9C  6E09               	movwf	??___fleq^0,c
  9193  004D9E  0E00               	movlw	0
  9194  004DA0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9195  004DA2  6E0A               	movwf	(??___fleq+1)^0,c
  9196  004DA4  0E80               	movlw	128
  9197  004DA6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9198  004DA8  6E0B               	movwf	(??___fleq+2)^0,c
  9199  004DAA  0E7F               	movlw	127
  9200  004DAC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9201  004DAE  6E0C               	movwf	(??___fleq+3)^0,c
  9202  004DB0  5009               	movf	??___fleq^0,w,c
  9203  004DB2  100A               	iorwf	(??___fleq+1)^0,w,c
  9204  004DB4  100B               	iorwf	(??___fleq+2)^0,w,c
  9205  004DB6  100C               	iorwf	(??___fleq+3)^0,w,c
  9206  004DB8  A4D8               	btfss	status,2,c
  9207  004DBA  EFE1  F026         	goto	u4371
  9208  004DBE  EFE3  F026         	goto	u4370
  9209  004DC2                     u4371:
  9210  004DC2  EFEB  F026         	goto	l4763
  9211  004DC6                     u4370:
  9212  004DC6  0E00               	movlw	0
  9213  004DC8  6E05               	movwf	___fleq@ff2^0,c
  9214  004DCA  0E00               	movlw	0
  9215  004DCC  6E06               	movwf	(___fleq@ff2+1)^0,c
  9216  004DCE  0E00               	movlw	0
  9217  004DD0  6E07               	movwf	(___fleq@ff2+2)^0,c
  9218  004DD2  0E00               	movlw	0
  9219  004DD4  6E08               	movwf	(___fleq@ff2+3)^0,c
  9220  004DD6                     l4763:
  9221  004DD6  5005               	movf	___fleq@ff2^0,w,c
  9222  004DD8  1801               	xorwf	___fleq@ff1^0,w,c
  9223  004DDA  E10F               	bnz	u4380
  9224  004DDC  5006               	movf	(___fleq@ff2+1)^0,w,c
  9225  004DDE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9226  004DE0  E10C               	bnz	u4380
  9227  004DE2  5007               	movf	(___fleq@ff2+2)^0,w,c
  9228  004DE4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9229  004DE6  E109               	bnz	u4380
  9230  004DE8  5008               	movf	(___fleq@ff2+3)^0,w,c
  9231  004DEA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9232  004DEC  B4D8               	btfsc	status,2,c
  9233  004DEE  EFFB  F026         	goto	u4381
  9234  004DF2  EFFD  F026         	goto	u4380
  9235  004DF6                     u4381:
  9236  004DF6  EF00  F027         	goto	l4767
  9237  004DFA                     u4380:
  9238  004DFA  90D8               	bcf	status,0,c
  9239  004DFC  EF01  F027         	goto	l813
  9240  004E00                     l4767:
  9241  004E00  80D8               	bsf	status,0,c
  9242  004E02                     l813:
  9243  004E02  0012               	return		;funcret
  9244  004E04                     __end_of___fleq:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function ___fldiv *****************
  9248 ;; Defined at:
  9249 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  b               4   14[COMRAM] unsigned char 
  9252 ;;  a               4   18[COMRAM] unsigned char 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  grs             4   33[COMRAM] unsigned long 
  9255 ;;  rem             4   26[COMRAM] unsigned long 
  9256 ;;  new_exp         2   31[COMRAM] short 
  9257 ;;  aexp            1   38[COMRAM] unsigned char 
  9258 ;;  bexp            1   37[COMRAM] unsigned char 
  9259 ;;  sign            1   30[COMRAM] unsigned char 
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  4   14[COMRAM] unsigned char 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9269 ;;      Params:         8       0       0       0       0       0       0       0       0
  9270 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9271 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9272 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9273 ;;Total ram usage:       25 bytes
  9274 ;; Hardware stack levels used: 1
  9275 ;; Hardware stack levels required when called: 1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_main
  9280 ;;		_efgtoa
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text22
  9285  002DD6                     __ptext22:
  9286                           	callstack 0
  9287  002DD6                     ___fldiv:
  9288                           	callstack 25
  9289  002DD6  5012               	movf	(___fldiv@b+3)^0,w,c
  9290  002DD8  0B80               	andlw	128
  9291  002DDA  6E1F               	movwf	___fldiv@sign^0,c
  9292  002DDC  5012               	movf	(___fldiv@b+3)^0,w,c
  9293  002DDE  2412               	addwf	(___fldiv@b+3)^0,w,c
  9294  002DE0  6E26               	movwf	___fldiv@bexp^0,c
  9295  002DE2  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9296  002DE4  EFF6  F016         	goto	u3821
  9297  002DE8  EFF8  F016         	goto	u3820
  9298  002DEC                     u3821:
  9299  002DEC  EFF9  F016         	goto	l4407
  9300  002DF0                     u3820:
  9301  002DF0  8026               	bsf	___fldiv@bexp^0,0,c
  9302  002DF2                     l4407:
  9303  002DF2  5026               	movf	___fldiv@bexp^0,w,c
  9304  002DF4  B4D8               	btfsc	status,2,c
  9305  002DF6  EFFF  F016         	goto	u3831
  9306  002DFA  EF01  F017         	goto	u3830
  9307  002DFE                     u3831:
  9308  002DFE  EF16  F017         	goto	l4417
  9309  002E02                     u3830:
  9310  002E02  2826               	incf	___fldiv@bexp^0,w,c
  9311  002E04  A4D8               	btfss	status,2,c
  9312  002E06  EF07  F017         	goto	u3841
  9313  002E0A  EF09  F017         	goto	u3840
  9314  002E0E                     u3841:
  9315  002E0E  EF11  F017         	goto	l4413
  9316  002E12                     u3840:
  9317  002E12  0E00               	movlw	0
  9318  002E14  6E0F               	movwf	___fldiv@b^0,c
  9319  002E16  0E00               	movlw	0
  9320  002E18  6E10               	movwf	(___fldiv@b+1)^0,c
  9321  002E1A  0E00               	movlw	0
  9322  002E1C  6E11               	movwf	(___fldiv@b+2)^0,c
  9323  002E1E  0E00               	movlw	0
  9324  002E20  6E12               	movwf	(___fldiv@b+3)^0,c
  9325  002E22                     l4413:
  9326  002E22  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9327  002E24  0E00               	movlw	0
  9328  002E26  6E12               	movwf	(___fldiv@b+3)^0,c
  9329  002E28  EF1E  F017         	goto	l4419
  9330  002E2C                     l4417:
  9331  002E2C  0E00               	movlw	0
  9332  002E2E  6E0F               	movwf	___fldiv@b^0,c
  9333  002E30  0E00               	movlw	0
  9334  002E32  6E10               	movwf	(___fldiv@b+1)^0,c
  9335  002E34  0E00               	movlw	0
  9336  002E36  6E11               	movwf	(___fldiv@b+2)^0,c
  9337  002E38  0E00               	movlw	0
  9338  002E3A  6E12               	movwf	(___fldiv@b+3)^0,c
  9339  002E3C                     l4419:
  9340  002E3C  5016               	movf	(___fldiv@a+3)^0,w,c
  9341  002E3E  0B80               	andlw	128
  9342  002E40  1A1F               	xorwf	___fldiv@sign^0,f,c
  9343  002E42  5016               	movf	(___fldiv@a+3)^0,w,c
  9344  002E44  2416               	addwf	(___fldiv@a+3)^0,w,c
  9345  002E46  6E27               	movwf	___fldiv@aexp^0,c
  9346  002E48  AE15               	btfss	(___fldiv@a+2)^0,7,c
  9347  002E4A  EF29  F017         	goto	u3851
  9348  002E4E  EF2B  F017         	goto	u3850
  9349  002E52                     u3851:
  9350  002E52  EF2C  F017         	goto	l4427
  9351  002E56                     u3850:
  9352  002E56  8027               	bsf	___fldiv@aexp^0,0,c
  9353  002E58                     l4427:
  9354  002E58  5027               	movf	___fldiv@aexp^0,w,c
  9355  002E5A  B4D8               	btfsc	status,2,c
  9356  002E5C  EF32  F017         	goto	u3861
  9357  002E60  EF34  F017         	goto	u3860
  9358  002E64                     u3861:
  9359  002E64  EF49  F017         	goto	l4437
  9360  002E68                     u3860:
  9361  002E68  2827               	incf	___fldiv@aexp^0,w,c
  9362  002E6A  A4D8               	btfss	status,2,c
  9363  002E6C  EF3A  F017         	goto	u3871
  9364  002E70  EF3C  F017         	goto	u3870
  9365  002E74                     u3871:
  9366  002E74  EF44  F017         	goto	l4433
  9367  002E78                     u3870:
  9368  002E78  0E00               	movlw	0
  9369  002E7A  6E13               	movwf	___fldiv@a^0,c
  9370  002E7C  0E00               	movlw	0
  9371  002E7E  6E14               	movwf	(___fldiv@a+1)^0,c
  9372  002E80  0E00               	movlw	0
  9373  002E82  6E15               	movwf	(___fldiv@a+2)^0,c
  9374  002E84  0E00               	movlw	0
  9375  002E86  6E16               	movwf	(___fldiv@a+3)^0,c
  9376  002E88                     l4433:
  9377  002E88  8E15               	bsf	(___fldiv@a+2)^0,7,c
  9378  002E8A  0E00               	movlw	0
  9379  002E8C  6E16               	movwf	(___fldiv@a+3)^0,c
  9380  002E8E  EF51  F017         	goto	l4439
  9381  002E92                     l4437:
  9382  002E92  0E00               	movlw	0
  9383  002E94  6E13               	movwf	___fldiv@a^0,c
  9384  002E96  0E00               	movlw	0
  9385  002E98  6E14               	movwf	(___fldiv@a+1)^0,c
  9386  002E9A  0E00               	movlw	0
  9387  002E9C  6E15               	movwf	(___fldiv@a+2)^0,c
  9388  002E9E  0E00               	movlw	0
  9389  002EA0  6E16               	movwf	(___fldiv@a+3)^0,c
  9390  002EA2                     l4439:
  9391  002EA2  5013               	movf	___fldiv@a^0,w,c
  9392  002EA4  1014               	iorwf	(___fldiv@a+1)^0,w,c
  9393  002EA6  1015               	iorwf	(___fldiv@a+2)^0,w,c
  9394  002EA8  1016               	iorwf	(___fldiv@a+3)^0,w,c
  9395  002EAA  A4D8               	btfss	status,2,c
  9396  002EAC  EF5A  F017         	goto	u3881
  9397  002EB0  EF5C  F017         	goto	u3880
  9398  002EB4                     u3881:
  9399  002EB4  EF74  F017         	goto	l4451
  9400  002EB8                     u3880:
  9401  002EB8  0E00               	movlw	0
  9402  002EBA  6E0F               	movwf	___fldiv@b^0,c
  9403  002EBC  0E00               	movlw	0
  9404  002EBE  6E10               	movwf	(___fldiv@b+1)^0,c
  9405  002EC0  0E00               	movlw	0
  9406  002EC2  6E11               	movwf	(___fldiv@b+2)^0,c
  9407  002EC4  0E00               	movlw	0
  9408  002EC6  6E12               	movwf	(___fldiv@b+3)^0,c
  9409  002EC8  0E80               	movlw	128
  9410  002ECA  1211               	iorwf	(___fldiv@b+2)^0,f,c
  9411  002ECC  0E7F               	movlw	127
  9412  002ECE  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9413  002ED0                     l4445:
  9414  002ED0  501F               	movf	___fldiv@sign^0,w,c
  9415  002ED2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9416  002ED4  C00F  F00F         	movff	___fldiv@b,?___fldiv
  9417  002ED8  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  9418  002EDC  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  9419  002EE0  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  9420  002EE4  EFB7  F018         	goto	l1136
  9421  002EE8                     l4451:
  9422  002EE8  5026               	movf	___fldiv@bexp^0,w,c
  9423  002EEA  A4D8               	btfss	status,2,c
  9424  002EEC  EF7A  F017         	goto	u3891
  9425  002EF0  EF7C  F017         	goto	u3890
  9426  002EF4                     u3891:
  9427  002EF4  EF86  F017         	goto	l4459
  9428  002EF8                     u3890:
  9429  002EF8  0E00               	movlw	0
  9430  002EFA  6E0F               	movwf	?___fldiv^0,c
  9431  002EFC  0E00               	movlw	0
  9432  002EFE  6E10               	movwf	(?___fldiv+1)^0,c
  9433  002F00  0E00               	movlw	0
  9434  002F02  6E11               	movwf	(?___fldiv+2)^0,c
  9435  002F04  0E00               	movlw	0
  9436  002F06  6E12               	movwf	(?___fldiv+3)^0,c
  9437  002F08  EFB7  F018         	goto	l1136
  9438  002F0C                     l4459:
  9439  002F0C  5027               	movf	___fldiv@aexp^0,w,c
  9440  002F0E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  9441  002F12  6A18               	clrf	(??___fldiv+1)^0,c
  9442  002F14  5E17               	subwf	??___fldiv^0,f,c
  9443  002F16  0E00               	movlw	0
  9444  002F18  5A18               	subwfb	(??___fldiv+1)^0,f,c
  9445  002F1A  0E7F               	movlw	127
  9446  002F1C  2417               	addwf	??___fldiv^0,w,c
  9447  002F1E  6E20               	movwf	___fldiv@new_exp^0,c
  9448  002F20  0E00               	movlw	0
  9449  002F22  2018               	addwfc	(??___fldiv+1)^0,w,c
  9450  002F24  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9451  002F26  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  9452  002F2A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  9453  002F2E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  9454  002F32  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  9455  002F36  0E00               	movlw	0
  9456  002F38  6E0F               	movwf	___fldiv@b^0,c
  9457  002F3A  0E00               	movlw	0
  9458  002F3C  6E10               	movwf	(___fldiv@b+1)^0,c
  9459  002F3E  0E00               	movlw	0
  9460  002F40  6E11               	movwf	(___fldiv@b+2)^0,c
  9461  002F42  0E00               	movlw	0
  9462  002F44  6E12               	movwf	(___fldiv@b+3)^0,c
  9463  002F46  0E00               	movlw	0
  9464  002F48  6E22               	movwf	___fldiv@grs^0,c
  9465  002F4A  0E00               	movlw	0
  9466  002F4C  6E23               	movwf	(___fldiv@grs+1)^0,c
  9467  002F4E  0E00               	movlw	0
  9468  002F50  6E24               	movwf	(___fldiv@grs+2)^0,c
  9469  002F52  0E00               	movlw	0
  9470  002F54  6E25               	movwf	(___fldiv@grs+3)^0,c
  9471  002F56  0E00               	movlw	0
  9472  002F58  6E27               	movwf	___fldiv@aexp^0,c
  9473  002F5A  EFE7  F017         	goto	l1138
  9474  002F5E                     l4469:
  9475  002F5E  5027               	movf	___fldiv@aexp^0,w,c
  9476  002F60  B4D8               	btfsc	status,2,c
  9477  002F62  EFB5  F017         	goto	u3901
  9478  002F66  EFB7  F017         	goto	u3900
  9479  002F6A                     u3901:
  9480  002F6A  EFCE  F017         	goto	l4477
  9481  002F6E                     u3900:
  9482  002F6E  90D8               	bcf	status,0,c
  9483  002F70  361B               	rlcf	___fldiv@rem^0,f,c
  9484  002F72  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  9485  002F74  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  9486  002F76  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  9487  002F78  90D8               	bcf	status,0,c
  9488  002F7A  360F               	rlcf	___fldiv@b^0,f,c
  9489  002F7C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9490  002F7E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9491  002F80  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9492  002F82  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9493  002F84  EFC6  F017         	goto	u3911
  9494  002F88  EFC8  F017         	goto	u3910
  9495  002F8C                     u3911:
  9496  002F8C  EFC9  F017         	goto	l1141
  9497  002F90                     u3910:
  9498  002F90  800F               	bsf	___fldiv@b^0,0,c
  9499  002F92                     l1141:
  9500  002F92  90D8               	bcf	status,0,c
  9501  002F94  3622               	rlcf	___fldiv@grs^0,f,c
  9502  002F96  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9503  002F98  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9504  002F9A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9505  002F9C                     l4477:
  9506  002F9C  5013               	movf	___fldiv@a^0,w,c
  9507  002F9E  5C1B               	subwf	___fldiv@rem^0,w,c
  9508  002FA0  5014               	movf	(___fldiv@a+1)^0,w,c
  9509  002FA2  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  9510  002FA4  5015               	movf	(___fldiv@a+2)^0,w,c
  9511  002FA6  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  9512  002FA8  5016               	movf	(___fldiv@a+3)^0,w,c
  9513  002FAA  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  9514  002FAC  A0D8               	btfss	status,0,c
  9515  002FAE  EFDB  F017         	goto	u3921
  9516  002FB2  EFDD  F017         	goto	u3920
  9517  002FB6                     u3921:
  9518  002FB6  EFE6  F017         	goto	l4483
  9519  002FBA                     u3920:
  9520  002FBA  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  9521  002FBC  5013               	movf	___fldiv@a^0,w,c
  9522  002FBE  5E1B               	subwf	___fldiv@rem^0,f,c
  9523  002FC0  5014               	movf	(___fldiv@a+1)^0,w,c
  9524  002FC2  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  9525  002FC4  5015               	movf	(___fldiv@a+2)^0,w,c
  9526  002FC6  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  9527  002FC8  5016               	movf	(___fldiv@a+3)^0,w,c
  9528  002FCA  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  9529  002FCC                     l4483:
  9530  002FCC  2A27               	incf	___fldiv@aexp^0,f,c
  9531  002FCE                     l1138:
  9532  002FCE  0E19               	movlw	25
  9533  002FD0  6427               	cpfsgt	___fldiv@aexp^0,c
  9534  002FD2  EFED  F017         	goto	u3931
  9535  002FD6  EFEF  F017         	goto	u3930
  9536  002FDA                     u3931:
  9537  002FDA  EFAF  F017         	goto	l4469
  9538  002FDE                     u3930:
  9539  002FDE  501B               	movf	___fldiv@rem^0,w,c
  9540  002FE0  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9541  002FE2  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9542  002FE4  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9543  002FE6  B4D8               	btfsc	status,2,c
  9544  002FE8  EFF8  F017         	goto	u3941
  9545  002FEC  EFFA  F017         	goto	u3940
  9546  002FF0                     u3941:
  9547  002FF0  EF12  F018         	goto	l4495
  9548  002FF4                     u3940:
  9549  002FF4  8022               	bsf	___fldiv@grs^0,0,c
  9550  002FF6  EF12  F018         	goto	l4495
  9551  002FFA                     l4489:
  9552  002FFA  90D8               	bcf	status,0,c
  9553  002FFC  360F               	rlcf	___fldiv@b^0,f,c
  9554  002FFE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9555  003000  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9556  003002  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9557  003004  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9558  003006  EF07  F018         	goto	u3951
  9559  00300A  EF09  F018         	goto	u3950
  9560  00300E                     u3951:
  9561  00300E  EF0A  F018         	goto	l1147
  9562  003012                     u3950:
  9563  003012  800F               	bsf	___fldiv@b^0,0,c
  9564  003014                     l1147:
  9565  003014  90D8               	bcf	status,0,c
  9566  003016  3622               	rlcf	___fldiv@grs^0,f,c
  9567  003018  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9568  00301A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9569  00301C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9570  00301E  0620               	decf	___fldiv@new_exp^0,f,c
  9571  003020  A0D8               	btfss	status,0,c
  9572  003022  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9573  003024                     l4495:
  9574  003024  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9575  003026  EF17  F018         	goto	u3961
  9576  00302A  EF19  F018         	goto	u3960
  9577  00302E                     u3961:
  9578  00302E  EFFD  F017         	goto	l4489
  9579  003032                     u3960:
  9580  003032  0E00               	movlw	0
  9581  003034  6E27               	movwf	___fldiv@aexp^0,c
  9582  003036  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9583  003038  EF20  F018         	goto	u3971
  9584  00303C  EF22  F018         	goto	u3970
  9585  003040                     u3971:
  9586  003040  EF46  F018         	goto	l1149
  9587  003044                     u3970:
  9588  003044  0EFF               	movlw	255
  9589  003046  1422               	andwf	___fldiv@grs^0,w,c
  9590  003048  6E17               	movwf	??___fldiv^0,c
  9591  00304A  0EFF               	movlw	255
  9592  00304C  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9593  00304E  6E18               	movwf	(??___fldiv+1)^0,c
  9594  003050  0EFF               	movlw	255
  9595  003052  1424               	andwf	(___fldiv@grs+2)^0,w,c
  9596  003054  6E19               	movwf	(??___fldiv+2)^0,c
  9597  003056  0E7F               	movlw	127
  9598  003058  1425               	andwf	(___fldiv@grs+3)^0,w,c
  9599  00305A  6E1A               	movwf	(??___fldiv+3)^0,c
  9600  00305C  5017               	movf	??___fldiv^0,w,c
  9601  00305E  1018               	iorwf	(??___fldiv+1)^0,w,c
  9602  003060  1019               	iorwf	(??___fldiv+2)^0,w,c
  9603  003062  101A               	iorwf	(??___fldiv+3)^0,w,c
  9604  003064  B4D8               	btfsc	status,2,c
  9605  003066  EF37  F018         	goto	u3981
  9606  00306A  EF39  F018         	goto	u3980
  9607  00306E                     u3981:
  9608  00306E  EF3D  F018         	goto	l1150
  9609  003072                     u3980:
  9610  003072                     l4503:
  9611  003072  0E01               	movlw	1
  9612  003074  6E27               	movwf	___fldiv@aexp^0,c
  9613  003076  EF46  F018         	goto	l1149
  9614  00307A                     l1150:
  9615  00307A  A00F               	btfss	___fldiv@b^0,0,c
  9616  00307C  EF42  F018         	goto	u3991
  9617  003080  EF44  F018         	goto	u3990
  9618  003084                     u3991:
  9619  003084  EF46  F018         	goto	l1149
  9620  003088                     u3990:
  9621  003088  EF39  F018         	goto	l4503
  9622  00308C                     l1149:
  9623  00308C  5027               	movf	___fldiv@aexp^0,w,c
  9624  00308E  B4D8               	btfsc	status,2,c
  9625  003090  EF4C  F018         	goto	u4001
  9626  003094  EF4E  F018         	goto	u4000
  9627  003098                     u4001:
  9628  003098  EF72  F018         	goto	l4515
  9629  00309C                     u4000:
  9630  00309C  0E01               	movlw	1
  9631  00309E  260F               	addwf	___fldiv@b^0,f,c
  9632  0030A0  0E00               	movlw	0
  9633  0030A2  2210               	addwfc	(___fldiv@b+1)^0,f,c
  9634  0030A4  2211               	addwfc	(___fldiv@b+2)^0,f,c
  9635  0030A6  2212               	addwfc	(___fldiv@b+3)^0,f,c
  9636  0030A8  A012               	btfss	(___fldiv@b+3)^0,0,c
  9637  0030AA  EF59  F018         	goto	u4011
  9638  0030AE  EF5B  F018         	goto	u4010
  9639  0030B2                     u4011:
  9640  0030B2  EF72  F018         	goto	l4515
  9641  0030B6                     u4010:
  9642  0030B6  C00F  F017         	movff	___fldiv@b,??___fldiv
  9643  0030BA  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  9644  0030BE  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  9645  0030C2  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  9646  0030C6  341A               	rlcf	(??___fldiv+3)^0,w,c
  9647  0030C8  321A               	rrcf	(??___fldiv+3)^0,f,c
  9648  0030CA  3219               	rrcf	(??___fldiv+2)^0,f,c
  9649  0030CC  3218               	rrcf	(??___fldiv+1)^0,f,c
  9650  0030CE  3217               	rrcf	??___fldiv^0,f,c
  9651  0030D0  C017  F00F         	movff	??___fldiv,___fldiv@b
  9652  0030D4  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  9653  0030D8  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  9654  0030DC  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  9655  0030E0  4A20               	infsnz	___fldiv@new_exp^0,f,c
  9656  0030E2  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  9657  0030E4                     l4515:
  9658  0030E4  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9659  0030E6  EF7D  F018         	goto	u4021
  9660  0030EA  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9661  0030EC  E108               	bnz	u4020
  9662  0030EE  2820               	incf	___fldiv@new_exp^0,w,c
  9663  0030F0  A0D8               	btfss	status,0,c
  9664  0030F2  EF7D  F018         	goto	u4021
  9665  0030F6  EF7F  F018         	goto	u4020
  9666  0030FA                     u4021:
  9667  0030FA  EF8A  F018         	goto	l4519
  9668  0030FE                     u4020:
  9669  0030FE  0E00               	movlw	0
  9670  003100  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9671  003102  6820               	setf	___fldiv@new_exp^0,c
  9672  003104  0E00               	movlw	0
  9673  003106  6E0F               	movwf	___fldiv@b^0,c
  9674  003108  0E00               	movlw	0
  9675  00310A  6E10               	movwf	(___fldiv@b+1)^0,c
  9676  00310C  0E00               	movlw	0
  9677  00310E  6E11               	movwf	(___fldiv@b+2)^0,c
  9678  003110  0E00               	movlw	0
  9679  003112  6E12               	movwf	(___fldiv@b+3)^0,c
  9680  003114                     l4519:
  9681  003114  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9682  003116  EF97  F018         	goto	u4030
  9683  00311A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9684  00311C  E106               	bnz	u4031
  9685  00311E  0420               	decf	___fldiv@new_exp^0,w,c
  9686  003120  B0D8               	btfsc	status,0,c
  9687  003122  EF95  F018         	goto	u4031
  9688  003126  EF97  F018         	goto	u4030
  9689  00312A                     u4031:
  9690  00312A  EFA5  F018         	goto	l4523
  9691  00312E                     u4030:
  9692  00312E  0E00               	movlw	0
  9693  003130  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9694  003132  0E00               	movlw	0
  9695  003134  6E20               	movwf	___fldiv@new_exp^0,c
  9696  003136  0E00               	movlw	0
  9697  003138  6E0F               	movwf	___fldiv@b^0,c
  9698  00313A  0E00               	movlw	0
  9699  00313C  6E10               	movwf	(___fldiv@b+1)^0,c
  9700  00313E  0E00               	movlw	0
  9701  003140  6E11               	movwf	(___fldiv@b+2)^0,c
  9702  003142  0E00               	movlw	0
  9703  003144  6E12               	movwf	(___fldiv@b+3)^0,c
  9704  003146  0E00               	movlw	0
  9705  003148  6E1F               	movwf	___fldiv@sign^0,c
  9706  00314A                     l4523:
  9707  00314A  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  9708  00314E  A026               	btfss	___fldiv@bexp^0,0,c
  9709  003150  EFAC  F018         	goto	u4041
  9710  003154  EFAE  F018         	goto	u4040
  9711  003158                     u4041:
  9712  003158  EFB1  F018         	goto	l4529
  9713  00315C                     u4040:
  9714  00315C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9715  00315E  EFB2  F018         	goto	l4531
  9716  003162                     l4529:
  9717  003162  9E11               	bcf	(___fldiv@b+2)^0,7,c
  9718  003164                     l4531:
  9719  003164  90D8               	bcf	status,0,c
  9720  003166  3026               	rrcf	___fldiv@bexp^0,w,c
  9721  003168  6E12               	movwf	(___fldiv@b+3)^0,c
  9722  00316A  EF68  F017         	goto	l4445
  9723  00316E                     l1136:
  9724  00316E  0012               	return		;funcret
  9725  003170                     __end_of___fldiv:
  9726                           	callstack 0
  9727                           
  9728 ;; *************** function _ctoa *****************
  9729 ;; Defined at:
  9730 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  9733 ;;		 -> NULL(0), sprintf@f(11), 
  9734 ;;  c               1   12[COMRAM] unsigned char 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  w               2   16[COMRAM] int 
  9737 ;;  l               2   14[COMRAM] int 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  2   10[COMRAM] int 
  9740 ;; Registers used:
  9741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9747 ;;      Params:         3       0       0       0       0       0       0       0       0
  9748 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9749 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9750 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:        8 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 3
  9754 ;; This function calls:
  9755 ;;		_fputc
  9756 ;; This function is called by:
  9757 ;;		_vfpfcnvrt
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text23
  9762  0048C8                     __ptext23:
  9763                           	callstack 0
  9764  0048C8                     _ctoa:
  9765                           	callstack 24
  9766  0048C8                     
  9767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9768  0048C8  0100               	movlb	0	; () banked
  9769  0048CA  51DD               	movf	_width& (0+255),w,b
  9770  0048CC  11DE               	iorwf	(_width+1)& (0+255),w,b
  9771  0048CE  A4D8               	btfss	status,2,c
  9772  0048D0  EF6C  F024         	goto	u4801
  9773  0048D4  EF6E  F024         	goto	u4800
  9774  0048D8                     u4801:
  9775  0048D8  EF74  F024         	goto	l4959
  9776  0048DC                     u4800:
  9777  0048DC                     
  9778                           ; BSR set to: 0
  9779  0048DC  C0DD  F011         	movff	_width,ctoa@w
  9780  0048E0  C0DE  F012         	movff	_width+1,ctoa@w+1
  9781  0048E4  EF7A  F024         	goto	l4961
  9782  0048E8                     l4959:
  9783                           
  9784                           ; BSR set to: 0
  9785  0048E8  0EFF               	movlw	255
  9786  0048EA  25DD               	addwf	_width& (0+255),w,b
  9787  0048EC  6E11               	movwf	ctoa@w^0,c
  9788  0048EE  0EFF               	movlw	255
  9789  0048F0  21DE               	addwfc	(_width+1)& (0+255),w,b
  9790  0048F2  6E12               	movwf	(ctoa@w+1)^0,c
  9791  0048F4                     l4961:
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9795  0048F4  A1E1               	btfss	_flags& (0+255),0,b
  9796  0048F6  EF7F  F024         	goto	u4811
  9797  0048FA  EF81  F024         	goto	u4810
  9798  0048FE                     u4811:
  9799  0048FE  EF8A  F024         	goto	l4965
  9800  004902                     u4810:
  9801  004902                     
  9802                           ; BSR set to: 0
  9803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9804  004902  C00D  F002         	movff	ctoa@c,fputc@c
  9805  004906  6A03               	clrf	(fputc@c+1)^0,c
  9806  004908  C00B  F004         	movff	ctoa@fp,fputc@fp
  9807  00490C  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  9808  004910  ECD0  F024         	call	_fputc	;wreg free
  9809  004914                     l4965:
  9810                           
  9811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9812  004914  BE12               	btfsc	(ctoa@w+1)^0,7,c
  9813  004916  EF8F  F024         	goto	u4821
  9814  00491A  EF91  F024         	goto	u4820
  9815  00491E                     u4821:
  9816  00491E  EF93  F024         	goto	l4969
  9817  004922                     u4820:
  9818  004922  EF97  F024         	goto	l1295
  9819  004926                     l4969:
  9820  004926  0E00               	movlw	0
  9821  004928  6E12               	movwf	(ctoa@w+1)^0,c
  9822  00492A  0E00               	movlw	0
  9823  00492C  6E11               	movwf	ctoa@w^0,c
  9824  00492E                     l1295:
  9825                           
  9826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9827  00492E  0E00               	movlw	0
  9828  004930  6E10               	movwf	(ctoa@l+1)^0,c
  9829  004932  0E00               	movlw	0
  9830  004934  6E0F               	movwf	ctoa@l^0,c
  9831                           
  9832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9833  004936  EFA9  F024         	goto	l4975
  9834  00493A                     l4971:
  9835                           
  9836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9837  00493A  0E00               	movlw	0
  9838  00493C  6E03               	movwf	(fputc@c+1)^0,c
  9839  00493E  0E20               	movlw	32
  9840  004940  6E02               	movwf	fputc@c^0,c
  9841  004942  C00B  F004         	movff	ctoa@fp,fputc@fp
  9842  004946  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  9843  00494A  ECD0  F024         	call	_fputc	;wreg free
  9844  00494E                     
  9845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9846  00494E  4A0F               	infsnz	ctoa@l^0,f,c
  9847  004950  2A10               	incf	(ctoa@l+1)^0,f,c
  9848  004952                     l4975:
  9849                           
  9850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9851  004952  5011               	movf	ctoa@w^0,w,c
  9852  004954  5C0F               	subwf	ctoa@l^0,w,c
  9853  004956  5010               	movf	(ctoa@l+1)^0,w,c
  9854  004958  0A80               	xorlw	128
  9855  00495A  6E0E               	movwf	??_ctoa^0,c
  9856  00495C  5012               	movf	(ctoa@w+1)^0,w,c
  9857  00495E  0A80               	xorlw	128
  9858  004960  580E               	subwfb	??_ctoa^0,w,c
  9859  004962  A0D8               	btfss	status,0,c
  9860  004964  EFB6  F024         	goto	u4831
  9861  004968  EFB8  F024         	goto	u4830
  9862  00496C                     u4831:
  9863  00496C  EF9D  F024         	goto	l4971
  9864  004970                     u4830:
  9865  004970                     
  9866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9867  004970  0100               	movlb	0	; () banked
  9868  004972  B1E1               	btfsc	_flags& (0+255),0,b
  9869  004974  EFBE  F024         	goto	u4841
  9870  004978  EFC0  F024         	goto	u4840
  9871  00497C                     u4841:
  9872  00497C  EFC9  F024         	goto	l4979
  9873  004980                     u4840:
  9874  004980                     
  9875                           ; BSR set to: 0
  9876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9877  004980  C00D  F002         	movff	ctoa@c,fputc@c
  9878  004984  6A03               	clrf	(fputc@c+1)^0,c
  9879  004986  C00B  F004         	movff	ctoa@fp,fputc@fp
  9880  00498A  C00C  F005         	movff	ctoa@fp+1,fputc@fp+1
  9881  00498E  ECD0  F024         	call	_fputc	;wreg free
  9882  004992                     l4979:
  9883                           
  9884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9885  004992  0E01               	movlw	1
  9886  004994  240F               	addwf	ctoa@l^0,w,c
  9887  004996  6E0B               	movwf	?_ctoa^0,c
  9888  004998  0E00               	movlw	0
  9889  00499A  2010               	addwfc	(ctoa@l+1)^0,w,c
  9890  00499C  6E0C               	movwf	(?_ctoa+1)^0,c
  9891  00499E  0012               	return		;funcret
  9892  0049A0                     __end_of_ctoa:
  9893                           	callstack 0
  9894                           
  9895 ;; *************** function _fputc *****************
  9896 ;; Defined at:
  9897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  c               2    1[COMRAM] int 
  9900 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  9901 ;;		 -> NULL(0), sprintf@f(11), 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  2    1[COMRAM] int 
  9906 ;; Registers used:
  9907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9913 ;;      Params:         4       0       0       0       0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9915 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9916 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9917 ;;Total ram usage:        9 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; Hardware stack levels required when called: 2
  9920 ;; This function calls:
  9921 ;;		_putch
  9922 ;; This function is called by:
  9923 ;;		_pad
  9924 ;;		_ctoa
  9925 ;;		_stoa
  9926 ;;		_vfpfcnvrt
  9927 ;;		_fputs
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text24
  9932  0049A0                     __ptext24:
  9933                           	callstack 0
  9934  0049A0                     _fputc:
  9935                           	callstack 24
  9936  0049A0  5004               	movf	fputc@fp^0,w,c
  9937  0049A2  1005               	iorwf	(fputc@fp+1)^0,w,c
  9938  0049A4  B4D8               	btfsc	status,2,c
  9939  0049A6  EFD7  F024         	goto	u3311
  9940  0049AA  EFD9  F024         	goto	u3310
  9941  0049AE                     u3311:
  9942  0049AE  EFE2  F024         	goto	l4151
  9943  0049B2                     u3310:
  9944  0049B2  5004               	movf	fputc@fp^0,w,c
  9945  0049B4  1005               	iorwf	(fputc@fp+1)^0,w,c
  9946  0049B6  A4D8               	btfss	status,2,c
  9947  0049B8  EFE0  F024         	goto	u3321
  9948  0049BC  EFE2  F024         	goto	u3320
  9949  0049C0                     u3321:
  9950  0049C0  EFE7  F024         	goto	l4153
  9951  0049C4                     u3320:
  9952  0049C4                     l4151:
  9953  0049C4  5002               	movf	fputc@c^0,w,c
  9954  0049C6  EC78  F02C         	call	_putch
  9955  0049CA  EF34  F025         	goto	l1526
  9956  0049CE                     l4153:
  9957  0049CE  EE20 F009          	lfsr	2,9
  9958  0049D2  5004               	movf	fputc@fp^0,w,c
  9959  0049D4  26D9               	addwf	fsr2l,f,c
  9960  0049D6  5005               	movf	(fputc@fp+1)^0,w,c
  9961  0049D8  22DA               	addwfc	fsr2h,f,c
  9962  0049DA  50DE               	movf	postinc2,w,c
  9963  0049DC  10DE               	iorwf	postinc2,w,c
  9964  0049DE  B4D8               	btfsc	status,2,c
  9965  0049E0  EFF4  F024         	goto	u3331
  9966  0049E4  EFF6  F024         	goto	u3330
  9967  0049E8                     u3331:
  9968  0049E8  EF11  F025         	goto	l4157
  9969  0049EC                     u3330:
  9970  0049EC  EE20 F009          	lfsr	2,9
  9971  0049F0  5004               	movf	fputc@fp^0,w,c
  9972  0049F2  26D9               	addwf	fsr2l,f,c
  9973  0049F4  5005               	movf	(fputc@fp+1)^0,w,c
  9974  0049F6  22DA               	addwfc	fsr2h,f,c
  9975  0049F8  EE10 F003          	lfsr	1,3
  9976  0049FC  5004               	movf	fputc@fp^0,w,c
  9977  0049FE  26E1               	addwf	fsr1l,f,c
  9978  004A00  5005               	movf	(fputc@fp+1)^0,w,c
  9979  004A02  22E2               	addwfc	fsr1h,f,c
  9980  004A04  50DE               	movf	postinc2,w,c
  9981  004A06  5CE6               	subwf	postinc1,w,c
  9982  004A08  50E6               	movf	postinc1,w,c
  9983  004A0A  0A80               	xorlw	128
  9984  004A0C  6E0A               	movwf	(??_fputc+4)^0,c
  9985  004A0E  50DE               	movf	postinc2,w,c
  9986  004A10  0A80               	xorlw	128
  9987  004A12  580A               	subwfb	(??_fputc+4)^0,w,c
  9988  004A14  B0D8               	btfsc	status,0,c
  9989  004A16  EF0F  F025         	goto	u3341
  9990  004A1A  EF11  F025         	goto	u3340
  9991  004A1E                     u3341:
  9992  004A1E  EF34  F025         	goto	l1526
  9993  004A22                     u3340:
  9994  004A22                     l4157:
  9995  004A22  EE20 F003          	lfsr	2,3
  9996  004A26  5004               	movf	fputc@fp^0,w,c
  9997  004A28  26D9               	addwf	fsr2l,f,c
  9998  004A2A  5005               	movf	(fputc@fp+1)^0,w,c
  9999  004A2C  22DA               	addwfc	fsr2h,f,c
 10000  004A2E  CFDE F006          	movff	postinc2,??_fputc
 10001  004A32  CFDD F007          	movff	postdec2,??_fputc+1
 10002  004A36  C004  FFD9         	movff	fputc@fp,fsr2l
 10003  004A3A  C005  FFDA         	movff	fputc@fp+1,fsr2h
 10004  004A3E  CFDE F008          	movff	postinc2,??_fputc+2
 10005  004A42  CFDD F009          	movff	postdec2,??_fputc+3
 10006  004A46  5006               	movf	??_fputc^0,w,c
 10007  004A48  2408               	addwf	(??_fputc+2)^0,w,c
 10008  004A4A  6ED9               	movwf	fsr2l,c
 10009  004A4C  5007               	movf	(??_fputc+1)^0,w,c
 10010  004A4E  2009               	addwfc	(??_fputc+3)^0,w,c
 10011  004A50  6EDA               	movwf	fsr2h,c
 10012  004A52  C002  FFDF         	movff	fputc@c,indf2
 10013  004A56  EE20 F003          	lfsr	2,3
 10014  004A5A  5004               	movf	fputc@fp^0,w,c
 10015  004A5C  26D9               	addwf	fsr2l,f,c
 10016  004A5E  5005               	movf	(fputc@fp+1)^0,w,c
 10017  004A60  22DA               	addwfc	fsr2h,f,c
 10018  004A62  2ADE               	incf	postinc2,f,c
 10019  004A64  0E00               	movlw	0
 10020  004A66  22DD               	addwfc	postdec2,f,c
 10021  004A68                     l1526:
 10022  004A68  0012               	return		;funcret
 10023  004A6A                     __end_of_fputc:
 10024                           	callstack 0
 10025                           
 10026 ;; *************** function _atoi *****************
 10027 ;; Defined at:
 10028 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10031 ;;		 -> STR_37(16), STR_35(12), STR_33(12), STR_31(10), 
 10032 ;;		 -> STR_29(26), STR_27(25), STR_25(23), STR_23(23), 
 10033 ;;		 -> STR_21(22), STR_20(18), STR_19(19), STR_18(21), 
 10034 ;;		 -> STR_17(36), STR_16(34), STR_15(28), STR_14(28), 
 10035 ;;		 -> STR_12(14), STR_11(11), STR_1(17), 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  n               2   15[COMRAM] int 
 10038 ;;  neg             2   13[COMRAM] int 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  2    7[COMRAM] int 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10048 ;;      Params:         2       0       0       0       0       0       0       0       0
 10049 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10050 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10051 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10052 ;;Total ram usage:       10 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 2
 10055 ;; This function calls:
 10056 ;;		___wmul
 10057 ;;		_isdigit
 10058 ;;		_isspace
 10059 ;; This function is called by:
 10060 ;;		_vfpfcnvrt
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           	psect	text25
 10065  003AF0                     __ptext25:
 10066                           	callstack 0
 10067  003AF0                     _atoi:
 10068                           	callstack 25
 10069  003AF0  0E00               	movlw	0
 10070  003AF2  6E11               	movwf	(atoi@n+1)^0,c
 10071  003AF4  0E00               	movlw	0
 10072  003AF6  6E10               	movwf	atoi@n^0,c
 10073  003AF8  0E00               	movlw	0
 10074  003AFA  6E0F               	movwf	(atoi@neg+1)^0,c
 10075  003AFC  0E00               	movlw	0
 10076  003AFE  6E0E               	movwf	atoi@neg^0,c
 10077  003B00  EF84  F01D         	goto	l5337
 10078  003B04                     l5333:
 10079  003B04  4A08               	infsnz	atoi@s^0,f,c
 10080  003B06  2A09               	incf	(atoi@s+1)^0,f,c
 10081  003B08                     l5337:
 10082  003B08  C008  FFF6         	movff	atoi@s,tblptrl
 10083  003B0C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10084  003B10                     	if	0	;tblptru may be non-zero
 10085  003B10                     	endif
 10086  003B10                     	if	0	;tblptru may be non-zero
 10087  003B10                     	endif
 10088  003B10  0008               	tblrd		*
 10089  003B12  50F5               	movf	tablat,w,c
 10090  003B14  0A20               	xorlw	32
 10091  003B16  B4D8               	btfsc	status,2,c
 10092  003B18  EF90  F01D         	goto	u5421
 10093  003B1C  EF92  F01D         	goto	u5420
 10094  003B20                     u5421:
 10095  003B20  EF82  F01D         	goto	l5333
 10096  003B24                     u5420:
 10097  003B24  0EF7               	movlw	247
 10098  003B26  6E0A               	movwf	??_atoi^0,c
 10099  003B28  0EFF               	movlw	255
 10100  003B2A  6E0B               	movwf	(??_atoi+1)^0,c
 10101  003B2C  C008  FFF6         	movff	atoi@s,tblptrl
 10102  003B30  C009  FFF7         	movff	atoi@s+1,tblptrh
 10103  003B34                     	if	0	;tblptru may be non-zero
 10104  003B34                     	endif
 10105  003B34                     	if	0	;tblptru may be non-zero
 10106  003B34                     	endif
 10107  003B34  0008               	tblrd		*
 10108  003B36  50F5               	movf	tablat,w,c
 10109  003B38  6E0C               	movwf	(??_atoi+2)^0,c
 10110  003B3A  6A0D               	clrf	(??_atoi+3)^0,c
 10111  003B3C  500A               	movf	??_atoi^0,w,c
 10112  003B3E  260C               	addwf	(??_atoi+2)^0,f,c
 10113  003B40  500B               	movf	(??_atoi+1)^0,w,c
 10114  003B42  220D               	addwfc	(??_atoi+3)^0,f,c
 10115  003B44  500D               	movf	(??_atoi+3)^0,w,c
 10116  003B46  E109               	bnz	u5430
 10117  003B48  0E05               	movlw	5
 10118  003B4A  5C0C               	subwf	(??_atoi+2)^0,w,c
 10119  003B4C  A0D8               	btfss	status,0,c
 10120  003B4E  EFAB  F01D         	goto	u5431
 10121  003B52  EFAD  F01D         	goto	u5430
 10122  003B56                     u5431:
 10123  003B56  EF82  F01D         	goto	l5333
 10124  003B5A                     u5430:
 10125  003B5A  EFB7  F01D         	goto	l5345
 10126  003B5E                     l5341:
 10127  003B5E  0E00               	movlw	0
 10128  003B60  6E0F               	movwf	(atoi@neg+1)^0,c
 10129  003B62  0E01               	movlw	1
 10130  003B64  6E0E               	movwf	atoi@neg^0,c
 10131  003B66                     l5343:
 10132  003B66  4A08               	infsnz	atoi@s^0,f,c
 10133  003B68  2A09               	incf	(atoi@s+1)^0,f,c
 10134  003B6A  EFEC  F01D         	goto	l5353
 10135  003B6E                     l5345:
 10136  003B6E  C008  FFF6         	movff	atoi@s,tblptrl
 10137  003B72  C009  FFF7         	movff	atoi@s+1,tblptrh
 10138  003B76                     	if	0	;tblptru may be non-zero
 10139  003B76                     	endif
 10140  003B76                     	if	0	;tblptru may be non-zero
 10141  003B76                     	endif
 10142  003B76  0008               	tblrd		*
 10143  003B78  50F5               	movf	tablat,w,c
 10144  003B7A  6E0A               	movwf	??_atoi^0,c
 10145  003B7C  6A0B               	clrf	(??_atoi+1)^0,c
 10146                           
 10147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10148                           ; Switch size 1, requested type "simple"
 10149                           ; Number of cases is 1, Range of values is 0 to 0
 10150                           ; switch strategies available:
 10151                           ; Name         Instructions Cycles
 10152                           ; simple_byte            4     3 (average)
 10153                           ;	Chosen strategy is simple_byte
 10154  003B7E  500B               	movf	(??_atoi+1)^0,w,c
 10155  003B80  0A00               	xorlw	0	; case 0
 10156  003B82  B4D8               	btfsc	status,2,c
 10157  003B84  EFC6  F01D         	goto	l6715
 10158  003B88  EFEC  F01D         	goto	l5353
 10159  003B8C                     l6715:
 10160                           
 10161                           ; Switch size 1, requested type "simple"
 10162                           ; Number of cases is 2, Range of values is 43 to 45
 10163                           ; switch strategies available:
 10164                           ; Name         Instructions Cycles
 10165                           ; simple_byte            7     4 (average)
 10166                           ;	Chosen strategy is simple_byte
 10167  003B8C  500A               	movf	??_atoi^0,w,c
 10168  003B8E  0A2B               	xorlw	43	; case 43
 10169  003B90  B4D8               	btfsc	status,2,c
 10170  003B92  EFB3  F01D         	goto	l5343
 10171  003B96  0A06               	xorlw	6	; case 45
 10172  003B98  B4D8               	btfsc	status,2,c
 10173  003B9A  EFAF  F01D         	goto	l5341
 10174  003B9E  EFEC  F01D         	goto	l5353
 10175  003BA2                     l5347:
 10176  003BA2  C010  F001         	movff	atoi@n,___wmul@multiplier
 10177  003BA6  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10178  003BAA  0E00               	movlw	0
 10179  003BAC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10180  003BAE  0E0A               	movlw	10
 10181  003BB0  6E03               	movwf	___wmul@multiplicand^0,c
 10182  003BB2  ECEA  F02B         	call	___wmul	;wreg free
 10183  003BB6  C008  FFF6         	movff	atoi@s,tblptrl
 10184  003BBA  C009  FFF7         	movff	atoi@s+1,tblptrh
 10185  003BBE                     	if	0	;tblptru may be non-zero
 10186  003BBE                     	endif
 10187  003BBE                     	if	0	;tblptru may be non-zero
 10188  003BBE                     	endif
 10189  003BBE  0008               	tblrd		*
 10190  003BC0  50F5               	movf	tablat,w,c
 10191  003BC2  5E01               	subwf	?___wmul^0,f,c
 10192  003BC4  0E00               	movlw	0
 10193  003BC6  5A02               	subwfb	(?___wmul+1)^0,f,c
 10194  003BC8  0E30               	movlw	48
 10195  003BCA  2401               	addwf	?___wmul^0,w,c
 10196  003BCC  6E10               	movwf	atoi@n^0,c
 10197  003BCE  0E00               	movlw	0
 10198  003BD0  2002               	addwfc	(?___wmul+1)^0,w,c
 10199  003BD2  6E11               	movwf	(atoi@n+1)^0,c
 10200  003BD4  EFB3  F01D         	goto	l5343
 10201  003BD8                     l5353:
 10202  003BD8  0ED0               	movlw	208
 10203  003BDA  6E0A               	movwf	??_atoi^0,c
 10204  003BDC  0EFF               	movlw	255
 10205  003BDE  6E0B               	movwf	(??_atoi+1)^0,c
 10206  003BE0  C008  FFF6         	movff	atoi@s,tblptrl
 10207  003BE4  C009  FFF7         	movff	atoi@s+1,tblptrh
 10208  003BE8                     	if	0	;tblptru may be non-zero
 10209  003BE8                     	endif
 10210  003BE8                     	if	0	;tblptru may be non-zero
 10211  003BE8                     	endif
 10212  003BE8  0008               	tblrd		*
 10213  003BEA  50F5               	movf	tablat,w,c
 10214  003BEC  6E0C               	movwf	(??_atoi+2)^0,c
 10215  003BEE  6A0D               	clrf	(??_atoi+3)^0,c
 10216  003BF0  500A               	movf	??_atoi^0,w,c
 10217  003BF2  260C               	addwf	(??_atoi+2)^0,f,c
 10218  003BF4  500B               	movf	(??_atoi+1)^0,w,c
 10219  003BF6  220D               	addwfc	(??_atoi+3)^0,f,c
 10220  003BF8  500D               	movf	(??_atoi+3)^0,w,c
 10221  003BFA  E109               	bnz	u5440
 10222  003BFC  0E0A               	movlw	10
 10223  003BFE  5C0C               	subwf	(??_atoi+2)^0,w,c
 10224  003C00  A0D8               	btfss	status,0,c
 10225  003C02  EF05  F01E         	goto	u5441
 10226  003C06  EF07  F01E         	goto	u5440
 10227  003C0A                     u5441:
 10228  003C0A  EFD1  F01D         	goto	l5347
 10229  003C0E                     u5440:
 10230  003C0E  500E               	movf	atoi@neg^0,w,c
 10231  003C10  100F               	iorwf	(atoi@neg+1)^0,w,c
 10232  003C12  A4D8               	btfss	status,2,c
 10233  003C14  EF0E  F01E         	goto	u5451
 10234  003C18  EF10  F01E         	goto	u5450
 10235  003C1C                     u5451:
 10236  003C1C  EF1E  F01E         	goto	l1478
 10237  003C20                     u5450:
 10238  003C20  C010  F00A         	movff	atoi@n,??_atoi
 10239  003C24  C011  F00B         	movff	atoi@n+1,??_atoi+1
 10240  003C28  1E0A               	comf	??_atoi^0,f,c
 10241  003C2A  1E0B               	comf	(??_atoi+1)^0,f,c
 10242  003C2C  4A0A               	infsnz	??_atoi^0,f,c
 10243  003C2E  2A0B               	incf	(??_atoi+1)^0,f,c
 10244  003C30  C00A  F008         	movff	??_atoi,?_atoi
 10245  003C34  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10246  003C38  EF22  F01E         	goto	l1481
 10247  003C3C                     l1478:
 10248  003C3C  C010  F008         	movff	atoi@n,?_atoi
 10249  003C40  C011  F009         	movff	atoi@n+1,?_atoi+1
 10250  003C44                     l1481:
 10251  003C44  0012               	return		;funcret
 10252  003C46                     __end_of_atoi:
 10253                           	callstack 0
 10254                           
 10255 ;; *************** function _isspace *****************
 10256 ;; Defined at:
 10257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  c               2    0[COMRAM] int 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  2    0[COMRAM] int 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2, status,0
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10271 ;;      Params:         2       0       0       0       0       0       0       0       0
 10272 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10273 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10274 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10275 ;;Total ram usage:        7 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; Hardware stack levels required when called: 1
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_atoi
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text26
 10286  005406                     __ptext26:
 10287                           	callstack 0
 10288  005406                     _isspace:
 10289                           	callstack 25
 10290  005406  0E01               	movlw	1
 10291  005408  6E07               	movwf	_isspace$2220^0,c
 10292  00540A  0E20               	movlw	32
 10293  00540C  1801               	xorwf	isspace@c^0,w,c
 10294  00540E  1002               	iorwf	(isspace@c+1)^0,w,c
 10295  005410  B4D8               	btfsc	status,2,c
 10296  005412  EF0D  F02A         	goto	u4781
 10297  005416  EF0F  F02A         	goto	u4780
 10298  00541A                     u4781:
 10299  00541A  EF28  F02A         	goto	l4943
 10300  00541E                     u4780:
 10301  00541E  0EF7               	movlw	247
 10302  005420  6E03               	movwf	??_isspace^0,c
 10303  005422  0EFF               	movlw	255
 10304  005424  6E04               	movwf	(??_isspace+1)^0,c
 10305  005426  C001  F005         	movff	isspace@c,??_isspace+2
 10306  00542A  C002  F006         	movff	isspace@c+1,??_isspace+3
 10307  00542E  5003               	movf	??_isspace^0,w,c
 10308  005430  2605               	addwf	(??_isspace+2)^0,f,c
 10309  005432  5004               	movf	(??_isspace+1)^0,w,c
 10310  005434  2206               	addwfc	(??_isspace+3)^0,f,c
 10311  005436  5006               	movf	(??_isspace+3)^0,w,c
 10312  005438  E109               	bnz	u4790
 10313  00543A  0E05               	movlw	5
 10314  00543C  5C05               	subwf	(??_isspace+2)^0,w,c
 10315  00543E  A0D8               	btfss	status,0,c
 10316  005440  EF24  F02A         	goto	u4791
 10317  005444  EF26  F02A         	goto	u4790
 10318  005448                     u4791:
 10319  005448  EF28  F02A         	goto	l4943
 10320  00544C                     u4790:
 10321  00544C  0E00               	movlw	0
 10322  00544E  6E07               	movwf	_isspace$2220^0,c
 10323  005450                     l4943:
 10324  005450  C007  F001         	movff	_isspace$2220,?_isspace
 10325  005454  6A02               	clrf	(?_isspace+1)^0,c
 10326  005456  0012               	return		;funcret
 10327  005458                     __end_of_isspace:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function _isdigit *****************
 10331 ;; Defined at:
 10332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  c               2    0[COMRAM] int 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;		None
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  2    0[COMRAM] int 
 10339 ;; Registers used:
 10340 ;;		wreg, status,2, status,0
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10346 ;;      Params:         2       0       0       0       0       0       0       0       0
 10347 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10348 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10349 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10350 ;;Total ram usage:        6 bytes
 10351 ;; Hardware stack levels used: 1
 10352 ;; Hardware stack levels required when called: 1
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_vfpfcnvrt
 10357 ;;		_atoi
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text27
 10362  0056B0                     __ptext27:
 10363                           	callstack 0
 10364  0056B0                     _isdigit:
 10365                           	callstack 26
 10366  0056B0  0ED0               	movlw	208
 10367  0056B2  6E03               	movwf	??_isdigit^0,c
 10368  0056B4  0EFF               	movlw	255
 10369  0056B6  6E04               	movwf	(??_isdigit+1)^0,c
 10370  0056B8  C001  F005         	movff	isdigit@c,??_isdigit+2
 10371  0056BC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10372  0056C0  5003               	movf	??_isdigit^0,w,c
 10373  0056C2  2605               	addwf	(??_isdigit+2)^0,f,c
 10374  0056C4  5004               	movf	(??_isdigit+1)^0,w,c
 10375  0056C6  2206               	addwfc	(??_isdigit+3)^0,f,c
 10376  0056C8  5006               	movf	(??_isdigit+3)^0,w,c
 10377  0056CA  E10A               	bnz	u4760
 10378  0056CC  0E0A               	movlw	10
 10379  0056CE  5C05               	subwf	(??_isdigit+2)^0,w,c
 10380  0056D0  A0D8               	btfss	status,0,c
 10381  0056D2  EF6D  F02B         	goto	u4761
 10382  0056D6  EF70  F02B         	goto	u4760
 10383  0056DA                     u4761:
 10384  0056DA  0E01               	movlw	1
 10385  0056DC  EF71  F02B         	goto	u4770
 10386  0056E0                     u4760:
 10387  0056E0  0E00               	movlw	0
 10388  0056E2                     u4770:
 10389  0056E2  6E01               	movwf	?_isdigit^0,c
 10390  0056E4  6A02               	clrf	(?_isdigit+1)^0,c
 10391  0056E6  0012               	return		;funcret
 10392  0056E8                     __end_of_isdigit:
 10393                           	callstack 0
 10394                           
 10395 ;; *************** function ___wmul *****************
 10396 ;; Defined at:
 10397 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  multiplier      2    0[COMRAM] unsigned int 
 10400 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  product         2    4[COMRAM] unsigned int 
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  2    0[COMRAM] unsigned int 
 10405 ;; Registers used:
 10406 ;;		wreg, status,2, status,0, prodl, prodh
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10412 ;;      Params:         4       0       0       0       0       0       0       0       0
 10413 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10415 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10416 ;;Total ram usage:        6 bytes
 10417 ;; Hardware stack levels used: 1
 10418 ;; Hardware stack levels required when called: 1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_atoi
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text28
 10427  0057D4                     __ptext28:
 10428                           	callstack 0
 10429  0057D4                     ___wmul:
 10430                           	callstack 25
 10431  0057D4  5001               	movf	___wmul@multiplier^0,w,c
 10432  0057D6  0203               	mulwf	___wmul@multiplicand^0,c
 10433  0057D8  CFF3 F005          	movff	prodl,___wmul@product
 10434  0057DC  CFF4 F006          	movff	prodh,___wmul@product+1
 10435  0057E0  5001               	movf	___wmul@multiplier^0,w,c
 10436  0057E2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10437  0057E4  50F3               	movf	243,w,c
 10438  0057E6  2606               	addwf	(___wmul@product+1)^0,f,c
 10439  0057E8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10440  0057EA  0203               	mulwf	___wmul@multiplicand^0,c
 10441  0057EC  50F3               	movf	243,w,c
 10442  0057EE  2606               	addwf	(___wmul@product+1)^0,f,c
 10443  0057F0  C005  F001         	movff	___wmul@product,?___wmul
 10444  0057F4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10445  0057F8  0012               	return		;funcret
 10446  0057FA                     __end_of___wmul:
 10447                           	callstack 0
 10448                           
 10449 ;; *************** function _memcpy *****************
 10450 ;; Defined at:
 10451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  d1              2    0[COMRAM] PTR void 
 10454 ;;		 -> lcd_text(18), description(20), 
 10455 ;;  s1              2    2[COMRAM] PTR const void 
 10456 ;;		 -> STR_36(17), STR_34(8), STR_32(17), STR_30(17), 
 10457 ;;		 -> STR_28(17), STR_26(17), STR_24(17), STR_22(17), 
 10458 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
 10459 ;;		 -> STR_6(17), 
 10460 ;;  n               2    4[COMRAM] unsigned int 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10463 ;;		 -> STR_36(17), STR_34(8), STR_32(17), STR_30(17), 
 10464 ;;		 -> STR_28(17), STR_26(17), STR_24(17), STR_22(17), 
 10465 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
 10466 ;;		 -> STR_6(17), 
 10467 ;;  d               2    6[COMRAM] PTR unsigned char 
 10468 ;;		 -> lcd_text(18), description(20), 
 10469 ;;  tmp             1   10[COMRAM] unsigned char 
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  2    0[COMRAM] PTR void 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10479 ;;      Params:         6       0       0       0       0       0       0       0       0
 10480 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10481 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10482 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10483 ;;Total ram usage:       11 bytes
 10484 ;; Hardware stack levels used: 1
 10485 ;; Hardware stack levels required when called: 1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		_main
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           	psect	text29
 10494  005458                     __ptext29:
 10495                           	callstack 0
 10496  005458                     _memcpy:
 10497                           	callstack 29
 10498  005458  C003  F009         	movff	memcpy@s1,memcpy@s
 10499  00545C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 10500  005460  C001  F007         	movff	memcpy@d1,memcpy@d
 10501  005464  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 10502  005468  EF47  F02A         	goto	l6267
 10503  00546C                     l6259:
 10504  00546C  C009  FFF6         	movff	memcpy@s,tblptrl
 10505  005470  C00A  FFF7         	movff	memcpy@s+1,tblptrh
 10506  005474                     	if	0	;tblptru may be non-zero
 10507  005474                     	endif
 10508  005474                     	if	0	;tblptru may be non-zero
 10509  005474                     	endif
 10510  005474  0008               	tblrd		*
 10511  005476  CFF5 F00B          	movff	tablat,memcpy@tmp
 10512  00547A  4A09               	infsnz	memcpy@s^0,f,c
 10513  00547C  2A0A               	incf	(memcpy@s+1)^0,f,c
 10514  00547E  C007  FFD9         	movff	memcpy@d,fsr2l
 10515  005482  C008  FFDA         	movff	memcpy@d+1,fsr2h
 10516  005486  C00B  FFDF         	movff	memcpy@tmp,indf2
 10517  00548A  4A07               	infsnz	memcpy@d^0,f,c
 10518  00548C  2A08               	incf	(memcpy@d+1)^0,f,c
 10519  00548E                     l6267:
 10520  00548E  0605               	decf	memcpy@n^0,f,c
 10521  005490  A0D8               	btfss	status,0,c
 10522  005492  0606               	decf	(memcpy@n+1)^0,f,c
 10523  005494  2805               	incf	memcpy@n^0,w,c
 10524  005496  E106               	bnz	u6471
 10525  005498  2806               	incf	(memcpy@n+1)^0,w,c
 10526  00549A  A4D8               	btfss	status,2,c
 10527  00549C  EF52  F02A         	goto	u6471
 10528  0054A0  EF54  F02A         	goto	u6470
 10529  0054A4                     u6471:
 10530  0054A4  EF36  F02A         	goto	l6259
 10531  0054A8                     u6470:
 10532  0054A8  0012               	return		;funcret
 10533  0054AA                     __end_of_memcpy:
 10534                           	callstack 0
 10535                           
 10536 ;; *************** function _int_ext_enable *****************
 10537 ;; Defined at:
 10538 ;;		line 5 in file "intext_lib.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		None
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10555 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used: 1
 10558 ;; Hardware stack levels required when called: 1
 10559 ;; This function calls:
 10560 ;;		Nothing
 10561 ;; This function is called by:
 10562 ;;		_main
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text30
 10567  00595A                     __ptext30:
 10568                           	callstack 0
 10569  00595A                     _int_ext_enable:
 10570                           	callstack 29
 10571  00595A                     
 10572                           ;intext_lib.c: 7:     INTCONbits.GIEH=1;
 10573  00595A  8EF2               	bsf	242,7,c	;volatile
 10574                           
 10575                           ;intext_lib.c: 8:     INTCONbits.GIEL=1;
 10576  00595C  8CF2               	bsf	242,6,c	;volatile
 10577                           
 10578                           ;intext_lib.c: 9:     RCONbits.IPEN=0;
 10579  00595E  9ED0               	bcf	208,7,c	;volatile
 10580                           
 10581                           ;intext_lib.c: 11:     TRISBbits.RB2 = 1;
 10582  005960  8493               	bsf	147,2,c	;volatile
 10583                           
 10584                           ;intext_lib.c: 12:     INTCON3bits.INT2IE = 1;
 10585  005962  88F0               	bsf	240,4,c	;volatile
 10586                           
 10587                           ;intext_lib.c: 13:     INTCON3bits.INT2IF = 0;
 10588  005964  92F0               	bcf	240,1,c	;volatile
 10589                           
 10590                           ;intext_lib.c: 14:     INTCON2bits.INTEDG2 = 0;
 10591  005966  98F1               	bcf	241,4,c	;volatile
 10592  005968  0012               	return		;funcret
 10593  00596A                     __end_of_int_ext_enable:
 10594                           	callstack 0
 10595                           
 10596 ;; *************** function _ina219Init *****************
 10597 ;; Defined at:
 10598 ;;		line 9 in file "ina219_lib.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;		None
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  reg_config      2    0        unsigned short 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10612 ;;      Params:         0       0       0       0       0       0       0       0       0
 10613 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10615 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10616 ;;Total ram usage:        0 bytes
 10617 ;; Hardware stack levels used: 1
 10618 ;; Hardware stack levels required when called: 4
 10619 ;; This function calls:
 10620 ;;		_I2C_INA_write
 10621 ;; This function is called by:
 10622 ;;		_main
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text31
 10627  00581E                     __ptext31:
 10628                           	callstack 0
 10629  00581E                     _ina219Init:
 10630                           	callstack 26
 10631  00581E                     
 10632                           ;ina219_lib.c: 11:     calibration_value = 0xFFFF;
 10633  00581E  0100               	movlb	0	; () banked
 10634  005820  69E3               	setf	_calibration_value& (0+255),b
 10635  005822  69E4               	setf	(_calibration_value+1)& (0+255),b
 10636  005824                     
 10637                           ; BSR set to: 0
 10638                           ;ina219_lib.c: 14:     I2C_INA_write(0x05,calibration_value);
 10639  005824  0EFF               	movlw	255
 10640  005826  6E03               	movwf	(I2C_INA_write@valor+1)^0,c
 10641  005828  6802               	setf	I2C_INA_write@valor^0,c
 10642  00582A  0E05               	movlw	5
 10643  00582C  EC8F  F02B         	call	_I2C_INA_write
 10644  005830                     
 10645                           ;ina219_lib.c: 24:     I2C_INA_write(0x00,reg_config);
 10646  005830  0E01               	movlw	1
 10647  005832  6E03               	movwf	(I2C_INA_write@valor+1)^0,c
 10648  005834  0E9F               	movlw	159
 10649  005836  6E02               	movwf	I2C_INA_write@valor^0,c
 10650  005838  0E00               	movlw	0
 10651  00583A  EC8F  F02B         	call	_I2C_INA_write
 10652  00583E  0012               	return		;funcret
 10653  005840                     __end_of_ina219Init:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function _I2C_INA_write *****************
 10657 ;; Defined at:
 10658 ;;		line 27 in file "ina219_lib.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  registro        1    wreg     unsigned char 
 10661 ;;  valor           2    1[COMRAM] unsigned short 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  registro        1    3[COMRAM] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, status,2, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10673 ;;      Params:         2       0       0       0       0       0       0       0       0
 10674 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10676 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10677 ;;Total ram usage:        3 bytes
 10678 ;; Hardware stack levels used: 1
 10679 ;; Hardware stack levels required when called: 3
 10680 ;; This function calls:
 10681 ;;		_I2C_Tx_data
 10682 ;;		_I2C_start
 10683 ;;		_I2C_stop
 10684 ;; This function is called by:
 10685 ;;		_ina219Init
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text32
 10690  00571E                     __ptext32:
 10691                           	callstack 0
 10692  00571E                     _I2C_INA_write:
 10693                           	callstack 26
 10694                           
 10695                           ;incstack = 0
 10696                           ;I2C_INA_write@registro stored from wreg
 10697  00571E  6E04               	movwf	I2C_INA_write@registro^0,c
 10698  005720                     
 10699                           ;ina219_lib.c: 28:     split[0] = (valor >> 8) & 0xff;
 10700  005720  5003               	movf	(I2C_INA_write@valor+1)^0,w,c
 10701  005722  0100               	movlb	0	; () banked
 10702  005724  6FE9               	movwf	_split& (0+255),b
 10703  005726                     
 10704                           ; BSR set to: 0
 10705                           ;ina219_lib.c: 29:     split[1] = valor & 0xff;
 10706  005726  C002  F0EA         	movff	I2C_INA_write@valor,_split+1
 10707  00572A                     
 10708                           ; BSR set to: 0
 10709                           ;ina219_lib.c: 31:     I2C_start();
 10710  00572A  ECA4  F02C         	call	_I2C_start	;wreg free
 10711  00572E                     
 10712                           ;ina219_lib.c: 32:     I2C_Tx_data(0x80);
 10713  00572E  0E80               	movlw	128
 10714  005730  ECC1  F02B         	call	_I2C_Tx_data
 10715  005734                     
 10716                           ;ina219_lib.c: 33:     I2C_Tx_data(registro);
 10717  005734  5004               	movf	I2C_INA_write@registro^0,w,c
 10718  005736  ECC1  F02B         	call	_I2C_Tx_data
 10719  00573A                     
 10720                           ;ina219_lib.c: 34:     I2C_Tx_data(split[0]);
 10721  00573A  0100               	movlb	0	; () banked
 10722  00573C  51E9               	movf	_split& (0+255),w,b
 10723  00573E  ECC1  F02B         	call	_I2C_Tx_data
 10724  005742                     
 10725                           ;ina219_lib.c: 35:     I2C_Tx_data(split[1]);
 10726  005742  0100               	movlb	0	; () banked
 10727  005744  51EA               	movf	(_split+1)& (0+255),w,b
 10728  005746  ECC1  F02B         	call	_I2C_Tx_data
 10729                           
 10730                           ;ina219_lib.c: 36:     I2C_stop();
 10731  00574A  EC83  F02C         	call	_I2C_stop	;wreg free
 10732  00574E  0012               	return		;funcret
 10733  005750                     __end_of_I2C_INA_write:
 10734                           	callstack 0
 10735                           
 10736 ;; *************** function _ina219GetPower_mW *****************
 10737 ;; Defined at:
 10738 ;;		line 78 in file "ina219_lib.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  4   39[COMRAM] float 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10752 ;;      Params:         4       0       0       0       0       0       0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10755 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10756 ;;Total ram usage:        4 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 4
 10759 ;; This function calls:
 10760 ;;		_I2C_INA_read
 10761 ;;		___flmul
 10762 ;;		___xxtofl
 10763 ;; This function is called by:
 10764 ;;		_main
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text33
 10769  0051C6                     __ptext33:
 10770                           	callstack 0
 10771  0051C6                     _ina219GetPower_mW:
 10772                           	callstack 26
 10773  0051C6                     
 10774                           ;ina219_lib.c: 79:     value1 = I2C_INA_read(0x03);
 10775  0051C6  0E03               	movlw	3
 10776  0051C8  EC49  F029         	call	_I2C_INA_read
 10777  0051CC  C002  F0E5         	movff	?_I2C_INA_read,_value1
 10778  0051D0  C003  F0E6         	movff	?_I2C_INA_read+1,_value1+1
 10779  0051D4                     
 10780                           ;ina219_lib.c: 81:     value2 = ((float)value1)*((float)0.126);
 10781  0051D4  C0E5  F001         	movff	_value1,___xxtofl@val
 10782  0051D8  C0E6  F002         	movff	_value1+1,___xxtofl@val+1
 10783  0051DC  6A03               	clrf	(___xxtofl@val+2)^0,c
 10784  0051DE  6A04               	clrf	(___xxtofl@val+3)^0,c
 10785  0051E0  0E00               	movlw	0
 10786  0051E2  ECDB  F01B         	call	___xxtofl
 10787  0051E6  C001  F00F         	movff	?___xxtofl,___flmul@b
 10788  0051EA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
 10789  0051EE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
 10790  0051F2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
 10791  0051F6  0E25               	movlw	37
 10792  0051F8  6E13               	movwf	___flmul@a^0,c
 10793  0051FA  0E06               	movlw	6
 10794  0051FC  6E14               	movwf	(___flmul@a+1)^0,c
 10795  0051FE  0E01               	movlw	1
 10796  005200  6E15               	movwf	(___flmul@a+2)^0,c
 10797  005202  0E3E               	movlw	62
 10798  005204  6E16               	movwf	(___flmul@a+3)^0,c
 10799  005206  ECD6  F014         	call	___flmul	;wreg free
 10800  00520A  C00F  F0D3         	movff	?___flmul,_value2
 10801  00520E  C010  F0D4         	movff	?___flmul+1,_value2+1
 10802  005212  C011  F0D5         	movff	?___flmul+2,_value2+2
 10803  005216  C012  F0D6         	movff	?___flmul+3,_value2+3
 10804  00521A                     
 10805                           ;ina219_lib.c: 82:     return value2;
 10806  00521A  C0D3  F028         	movff	_value2,?_ina219GetPower_mW
 10807  00521E  C0D4  F029         	movff	_value2+1,?_ina219GetPower_mW+1
 10808  005222  C0D5  F02A         	movff	_value2+2,?_ina219GetPower_mW+2
 10809  005226  C0D6  F02B         	movff	_value2+3,?_ina219GetPower_mW+3
 10810  00522A  0012               	return		;funcret
 10811  00522C                     __end_of_ina219GetPower_mW:
 10812                           	callstack 0
 10813                           
 10814 ;; *************** function _ina219GetCurrent_mA *****************
 10815 ;; Defined at:
 10816 ;;		line 65 in file "ina219_lib.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;		None
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  4   39[COMRAM] float 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10830 ;;      Params:         4       0       0       0       0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10833 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10834 ;;Total ram usage:        4 bytes
 10835 ;; Hardware stack levels used: 1
 10836 ;; Hardware stack levels required when called: 4
 10837 ;; This function calls:
 10838 ;;		_I2C_INA_read
 10839 ;;		___flmul
 10840 ;;		___xxtofl
 10841 ;; This function is called by:
 10842 ;;		_main
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text34
 10847  00522C                     __ptext34:
 10848                           	callstack 0
 10849  00522C                     _ina219GetCurrent_mA:
 10850                           	callstack 26
 10851  00522C                     
 10852                           ;ina219_lib.c: 66:     value1 = I2C_INA_read(0x04);
 10853  00522C  0E04               	movlw	4
 10854  00522E  EC49  F029         	call	_I2C_INA_read
 10855  005232  C002  F0E5         	movff	?_I2C_INA_read,_value1
 10856  005236  C003  F0E6         	movff	?_I2C_INA_read+1,_value1+1
 10857  00523A                     
 10858                           ;ina219_lib.c: 68:     value2 = ((float)value1)*((float)0.0063);
 10859  00523A  C0E5  F001         	movff	_value1,___xxtofl@val
 10860  00523E  C0E6  F002         	movff	_value1+1,___xxtofl@val+1
 10861  005242  6A03               	clrf	(___xxtofl@val+2)^0,c
 10862  005244  6A04               	clrf	(___xxtofl@val+3)^0,c
 10863  005246  0E00               	movlw	0
 10864  005248  ECDB  F01B         	call	___xxtofl
 10865  00524C  C001  F00F         	movff	?___xxtofl,___flmul@b
 10866  005250  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
 10867  005254  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
 10868  005258  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
 10869  00525C  0E3B               	movlw	59
 10870  00525E  6E13               	movwf	___flmul@a^0,c
 10871  005260  0E70               	movlw	112
 10872  005262  6E14               	movwf	(___flmul@a+1)^0,c
 10873  005264  0ECE               	movlw	206
 10874  005266  6E15               	movwf	(___flmul@a+2)^0,c
 10875  005268  0E3B               	movlw	59
 10876  00526A  6E16               	movwf	(___flmul@a+3)^0,c
 10877  00526C  ECD6  F014         	call	___flmul	;wreg free
 10878  005270  C00F  F0D3         	movff	?___flmul,_value2
 10879  005274  C010  F0D4         	movff	?___flmul+1,_value2+1
 10880  005278  C011  F0D5         	movff	?___flmul+2,_value2+2
 10881  00527C  C012  F0D6         	movff	?___flmul+3,_value2+3
 10882  005280                     
 10883                           ;ina219_lib.c: 69:     return value2;
 10884  005280  C0D3  F028         	movff	_value2,?_ina219GetCurrent_mA
 10885  005284  C0D4  F029         	movff	_value2+1,?_ina219GetCurrent_mA+1
 10886  005288  C0D5  F02A         	movff	_value2+2,?_ina219GetCurrent_mA+2
 10887  00528C  C0D6  F02B         	movff	_value2+3,?_ina219GetCurrent_mA+3
 10888  005290  0012               	return		;funcret
 10889  005292                     __end_of_ina219GetCurrent_mA:
 10890                           	callstack 0
 10891                           
 10892 ;; *************** function _ina219GetBusVoltage_V *****************
 10893 ;; Defined at:
 10894 ;;		line 58 in file "ina219_lib.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  4   39[COMRAM] float 
 10901 ;; Registers used:
 10902 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10908 ;;      Params:         4       0       0       0       0       0       0       0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10910 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10911 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10912 ;;Total ram usage:        6 bytes
 10913 ;; Hardware stack levels used: 1
 10914 ;; Hardware stack levels required when called: 4
 10915 ;; This function calls:
 10916 ;;		_I2C_INA_read
 10917 ;;		___flmul
 10918 ;;		___xxtofl
 10919 ;; This function is called by:
 10920 ;;		_main
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text35
 10925  004EA8                     __ptext35:
 10926                           	callstack 0
 10927  004EA8                     _ina219GetBusVoltage_V:
 10928                           	callstack 26
 10929  004EA8                     
 10930                           ;ina219_lib.c: 59:     value1 = I2C_INA_read(0x02);
 10931  004EA8  0E02               	movlw	2
 10932  004EAA  EC49  F029         	call	_I2C_INA_read
 10933  004EAE  C002  F0E5         	movff	?_I2C_INA_read,_value1
 10934  004EB2  C003  F0E6         	movff	?_I2C_INA_read+1,_value1+1
 10935  004EB6                     
 10936                           ;ina219_lib.c: 60:     value1 = (value1 >> 3);
 10937  004EB6  C0E5  F02C         	movff	_value1,??_ina219GetBusVoltage_V
 10938  004EBA  C0E6  F02D         	movff	_value1+1,??_ina219GetBusVoltage_V+1
 10939  004EBE  90D8               	bcf	status,0,c
 10940  004EC0  322D               	rrcf	(??_ina219GetBusVoltage_V+1)^0,f,c
 10941  004EC2  322C               	rrcf	??_ina219GetBusVoltage_V^0,f,c
 10942  004EC4  90D8               	bcf	status,0,c
 10943  004EC6  322D               	rrcf	(??_ina219GetBusVoltage_V+1)^0,f,c
 10944  004EC8  322C               	rrcf	??_ina219GetBusVoltage_V^0,f,c
 10945  004ECA  90D8               	bcf	status,0,c
 10946  004ECC  322D               	rrcf	(??_ina219GetBusVoltage_V+1)^0,f,c
 10947  004ECE  322C               	rrcf	??_ina219GetBusVoltage_V^0,f,c
 10948  004ED0  C02C  F0E5         	movff	??_ina219GetBusVoltage_V,_value1
 10949  004ED4  C02D  F0E6         	movff	??_ina219GetBusVoltage_V+1,_value1+1
 10950  004ED8                     
 10951                           ;ina219_lib.c: 61:     value2 = ((float)value1)*((float)0.004);
 10952  004ED8  C0E5  F001         	movff	_value1,___xxtofl@val
 10953  004EDC  C0E6  F002         	movff	_value1+1,___xxtofl@val+1
 10954  004EE0  6A03               	clrf	(___xxtofl@val+2)^0,c
 10955  004EE2  6A04               	clrf	(___xxtofl@val+3)^0,c
 10956  004EE4  0E00               	movlw	0
 10957  004EE6  ECDB  F01B         	call	___xxtofl
 10958  004EEA  C001  F00F         	movff	?___xxtofl,___flmul@b
 10959  004EEE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
 10960  004EF2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
 10961  004EF6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
 10962  004EFA  0E6F               	movlw	111
 10963  004EFC  6E13               	movwf	___flmul@a^0,c
 10964  004EFE  0E12               	movlw	18
 10965  004F00  6E14               	movwf	(___flmul@a+1)^0,c
 10966  004F02  0E83               	movlw	131
 10967  004F04  6E15               	movwf	(___flmul@a+2)^0,c
 10968  004F06  0E3B               	movlw	59
 10969  004F08  6E16               	movwf	(___flmul@a+3)^0,c
 10970  004F0A  ECD6  F014         	call	___flmul	;wreg free
 10971  004F0E  C00F  F0D3         	movff	?___flmul,_value2
 10972  004F12  C010  F0D4         	movff	?___flmul+1,_value2+1
 10973  004F16  C011  F0D5         	movff	?___flmul+2,_value2+2
 10974  004F1A  C012  F0D6         	movff	?___flmul+3,_value2+3
 10975  004F1E                     
 10976                           ;ina219_lib.c: 62:     return value2;
 10977  004F1E  C0D3  F028         	movff	_value2,?_ina219GetBusVoltage_V
 10978  004F22  C0D4  F029         	movff	_value2+1,?_ina219GetBusVoltage_V+1
 10979  004F26  C0D5  F02A         	movff	_value2+2,?_ina219GetBusVoltage_V+2
 10980  004F2A  C0D6  F02B         	movff	_value2+3,?_ina219GetBusVoltage_V+3
 10981  004F2E  0012               	return		;funcret
 10982  004F30                     __end_of_ina219GetBusVoltage_V:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function ___xxtofl *****************
 10986 ;; Defined at:
 10987 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  sign            1    wreg     unsigned char 
 10990 ;;  val             4    0[COMRAM] long 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  sign            1    8[COMRAM] unsigned char 
 10993 ;;  arg             4   10[COMRAM] unsigned long 
 10994 ;;  exp             1    9[COMRAM] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  4    0[COMRAM] unsigned char 
 10997 ;; Registers used:
 10998 ;;		wreg, status,2, status,0
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11004 ;;      Params:         4       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11007 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:       14 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 1
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_main
 11015 ;;		_ina219GetBusVoltage_V
 11016 ;;		_ina219GetCurrent_mA
 11017 ;;		_ina219GetPower_mW
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text36
 11022  0037B6                     __ptext36:
 11023                           	callstack 0
 11024  0037B6                     ___xxtofl:
 11025                           	callstack 28
 11026                           
 11027                           ;incstack = 0
 11028                           ;___xxtofl@sign stored from wreg
 11029  0037B6  6E09               	movwf	___xxtofl@sign^0,c
 11030  0037B8  5009               	movf	___xxtofl@sign^0,w,c
 11031  0037BA  B4D8               	btfsc	status,2,c
 11032  0037BC  EFE2  F01B         	goto	u6051
 11033  0037C0  EFE4  F01B         	goto	u6050
 11034  0037C4                     u6051:
 11035  0037C4  EF06  F01C         	goto	l1209
 11036  0037C8                     u6050:
 11037  0037C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11038  0037CA  EFEB  F01B         	goto	u6060
 11039  0037CE  EFE9  F01B         	goto	u6061
 11040  0037D2                     u6061:
 11041  0037D2  EF06  F01C         	goto	l1209
 11042  0037D6                     u6060:
 11043  0037D6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11044  0037DA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11045  0037DE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11046  0037E2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11047  0037E6  1E05               	comf	??___xxtofl^0,f,c
 11048  0037E8  1E06               	comf	(??___xxtofl+1)^0,f,c
 11049  0037EA  1E07               	comf	(??___xxtofl+2)^0,f,c
 11050  0037EC  1E08               	comf	(??___xxtofl+3)^0,f,c
 11051  0037EE  2A05               	incf	??___xxtofl^0,f,c
 11052  0037F0  0E00               	movlw	0
 11053  0037F2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11054  0037F4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11055  0037F6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11056  0037F8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11057  0037FC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11058  003800  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11059  003804  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11060  003808  EF0E  F01C         	goto	l5857
 11061  00380C                     l1209:
 11062  00380C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11063  003810  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11064  003814  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11065  003818  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11066  00381C                     l5857:
 11067  00381C  5001               	movf	___xxtofl@val^0,w,c
 11068  00381E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11069  003820  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11070  003822  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11071  003824  A4D8               	btfss	status,2,c
 11072  003826  EF17  F01C         	goto	u6071
 11073  00382A  EF19  F01C         	goto	u6070
 11074  00382E                     u6071:
 11075  00382E  EF23  F01C         	goto	l5863
 11076  003832                     u6070:
 11077  003832  0E00               	movlw	0
 11078  003834  6E01               	movwf	?___xxtofl^0,c
 11079  003836  0E00               	movlw	0
 11080  003838  6E02               	movwf	(?___xxtofl+1)^0,c
 11081  00383A  0E00               	movlw	0
 11082  00383C  6E03               	movwf	(?___xxtofl+2)^0,c
 11083  00383E  0E00               	movlw	0
 11084  003840  6E04               	movwf	(?___xxtofl+3)^0,c
 11085  003842  EFB4  F01C         	goto	l1212
 11086  003846                     l5863:
 11087  003846  0E96               	movlw	150
 11088  003848  6E0A               	movwf	___xxtofl@exp^0,c
 11089  00384A  EF2D  F01C         	goto	l5867
 11090  00384E                     l5865:
 11091  00384E  2A0A               	incf	___xxtofl@exp^0,f,c
 11092  003850  90D8               	bcf	status,0,c
 11093  003852  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11094  003854  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11095  003856  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11096  003858  320B               	rrcf	___xxtofl@arg^0,f,c
 11097  00385A                     l5867:
 11098  00385A  0E00               	movlw	0
 11099  00385C  140B               	andwf	___xxtofl@arg^0,w,c
 11100  00385E  6E05               	movwf	??___xxtofl^0,c
 11101  003860  0E00               	movlw	0
 11102  003862  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11103  003864  6E06               	movwf	(??___xxtofl+1)^0,c
 11104  003866  0E00               	movlw	0
 11105  003868  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11106  00386A  6E07               	movwf	(??___xxtofl+2)^0,c
 11107  00386C  0EFE               	movlw	254
 11108  00386E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11109  003870  6E08               	movwf	(??___xxtofl+3)^0,c
 11110  003872  5005               	movf	??___xxtofl^0,w,c
 11111  003874  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11112  003876  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11113  003878  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11114  00387A  A4D8               	btfss	status,2,c
 11115  00387C  EF42  F01C         	goto	u6081
 11116  003880  EF44  F01C         	goto	u6080
 11117  003884                     u6081:
 11118  003884  EF27  F01C         	goto	l5865
 11119  003888                     u6080:
 11120  003888  EF52  F01C         	goto	l1216
 11121  00388C                     l5869:
 11122  00388C  2A0A               	incf	___xxtofl@exp^0,f,c
 11123  00388E  0E01               	movlw	1
 11124  003890  260B               	addwf	___xxtofl@arg^0,f,c
 11125  003892  0E00               	movlw	0
 11126  003894  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11127  003896  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11128  003898  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11129  00389A  90D8               	bcf	status,0,c
 11130  00389C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11131  00389E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11132  0038A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11133  0038A2  320B               	rrcf	___xxtofl@arg^0,f,c
 11134  0038A4                     l1216:
 11135  0038A4  0E00               	movlw	0
 11136  0038A6  140B               	andwf	___xxtofl@arg^0,w,c
 11137  0038A8  6E05               	movwf	??___xxtofl^0,c
 11138  0038AA  0E00               	movlw	0
 11139  0038AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11140  0038AE  6E06               	movwf	(??___xxtofl+1)^0,c
 11141  0038B0  0E00               	movlw	0
 11142  0038B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11143  0038B4  6E07               	movwf	(??___xxtofl+2)^0,c
 11144  0038B6  0EFF               	movlw	255
 11145  0038B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11146  0038BA  6E08               	movwf	(??___xxtofl+3)^0,c
 11147  0038BC  5005               	movf	??___xxtofl^0,w,c
 11148  0038BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11149  0038C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11150  0038C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11151  0038C4  A4D8               	btfss	status,2,c
 11152  0038C6  EF67  F01C         	goto	u6091
 11153  0038CA  EF69  F01C         	goto	u6090
 11154  0038CE                     u6091:
 11155  0038CE  EF46  F01C         	goto	l5869
 11156  0038D2                     u6090:
 11157  0038D2  EF71  F01C         	goto	l5877
 11158  0038D6                     l5875:
 11159  0038D6  060A               	decf	___xxtofl@exp^0,f,c
 11160  0038D8  90D8               	bcf	status,0,c
 11161  0038DA  360B               	rlcf	___xxtofl@arg^0,f,c
 11162  0038DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11163  0038DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11164  0038E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11165  0038E2                     l5877:
 11166  0038E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11167  0038E4  EF76  F01C         	goto	u6101
 11168  0038E8  EF78  F01C         	goto	u6100
 11169  0038EC                     u6101:
 11170  0038EC  EF80  F01C         	goto	l1223
 11171  0038F0                     u6100:
 11172  0038F0  0E02               	movlw	2
 11173  0038F2  600A               	cpfslt	___xxtofl@exp^0,c
 11174  0038F4  EF7E  F01C         	goto	u6111
 11175  0038F8  EF80  F01C         	goto	u6110
 11176  0038FC                     u6111:
 11177  0038FC  EF6B  F01C         	goto	l5875
 11178  003900                     u6110:
 11179  003900                     l1223:
 11180  003900  B00A               	btfsc	___xxtofl@exp^0,0,c
 11181  003902  EF85  F01C         	goto	u6121
 11182  003906  EF87  F01C         	goto	u6120
 11183  00390A                     u6121:
 11184  00390A  EF88  F01C         	goto	l5883
 11185  00390E                     u6120:
 11186  00390E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 11187  003910                     l5883:
 11188  003910  90D8               	bcf	status,0,c
 11189  003912  320A               	rrcf	___xxtofl@exp^0,f,c
 11190  003914  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 11191  003918  6A06               	clrf	(??___xxtofl+1)^0,c
 11192  00391A  6A07               	clrf	(??___xxtofl+2)^0,c
 11193  00391C  6A08               	clrf	(??___xxtofl+3)^0,c
 11194  00391E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 11195  003922  6A07               	clrf	(??___xxtofl+2)^0,c
 11196  003924  6A06               	clrf	(??___xxtofl+1)^0,c
 11197  003926  6A05               	clrf	??___xxtofl^0,c
 11198  003928  5005               	movf	??___xxtofl^0,w,c
 11199  00392A  120B               	iorwf	___xxtofl@arg^0,f,c
 11200  00392C  5006               	movf	(??___xxtofl+1)^0,w,c
 11201  00392E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11202  003930  5007               	movf	(??___xxtofl+2)^0,w,c
 11203  003932  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11204  003934  5008               	movf	(??___xxtofl+3)^0,w,c
 11205  003936  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11206  003938  5009               	movf	___xxtofl@sign^0,w,c
 11207  00393A  B4D8               	btfsc	status,2,c
 11208  00393C  EFA2  F01C         	goto	u6131
 11209  003940  EFA4  F01C         	goto	u6130
 11210  003944                     u6131:
 11211  003944  EFAC  F01C         	goto	l5893
 11212  003948                     u6130:
 11213  003948  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11214  00394A  EFAB  F01C         	goto	u6140
 11215  00394E  EFA9  F01C         	goto	u6141
 11216  003952                     u6141:
 11217  003952  EFAC  F01C         	goto	l5893
 11218  003956                     u6140:
 11219  003956  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11220  003958                     l5893:
 11221  003958  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11222  00395C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11223  003960  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11224  003964  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11225  003968                     l1212:
 11226  003968  0012               	return		;funcret
 11227  00396A                     __end_of___xxtofl:
 11228                           	callstack 0
 11229                           
 11230 ;; *************** function ___flmul *****************
 11231 ;; Defined at:
 11232 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  b               4   14[COMRAM] unsigned char 
 11235 ;;  a               4   18[COMRAM] unsigned char 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  prod            4   33[COMRAM] struct .
 11238 ;;  grs             4   27[COMRAM] unsigned long 
 11239 ;;  temp            2   37[COMRAM] struct .
 11240 ;;  bexp            1   32[COMRAM] unsigned char 
 11241 ;;  aexp            1   31[COMRAM] unsigned char 
 11242 ;;  sign            1   26[COMRAM] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  4   14[COMRAM] unsigned char 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0, prodl, prodh
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11252 ;;      Params:         8       0       0       0       0       0       0       0       0
 11253 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11254 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11255 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11256 ;;Total ram usage:       25 bytes
 11257 ;; Hardware stack levels used: 1
 11258 ;; Hardware stack levels required when called: 1
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_ina219GetBusVoltage_V
 11263 ;;		_ina219GetCurrent_mA
 11264 ;;		_ina219GetPower_mW
 11265 ;;		_efgtoa
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           	psect	text37
 11270  0029AC                     __ptext37:
 11271                           	callstack 0
 11272  0029AC                     ___flmul:
 11273                           	callstack 25
 11274  0029AC  5012               	movf	(___flmul@b+3)^0,w,c
 11275  0029AE  0B80               	andlw	128
 11276  0029B0  6E1B               	movwf	___flmul@sign^0,c
 11277  0029B2  5012               	movf	(___flmul@b+3)^0,w,c
 11278  0029B4  2412               	addwf	(___flmul@b+3)^0,w,c
 11279  0029B6  6E21               	movwf	___flmul@bexp^0,c
 11280  0029B8  AE11               	btfss	(___flmul@b+2)^0,7,c
 11281  0029BA  EFE1  F014         	goto	u4051
 11282  0029BE  EFE3  F014         	goto	u4050
 11283  0029C2                     u4051:
 11284  0029C2  EFE4  F014         	goto	l4545
 11285  0029C6                     u4050:
 11286  0029C6  8021               	bsf	___flmul@bexp^0,0,c
 11287  0029C8                     l4545:
 11288  0029C8  5021               	movf	___flmul@bexp^0,w,c
 11289  0029CA  B4D8               	btfsc	status,2,c
 11290  0029CC  EFEA  F014         	goto	u4061
 11291  0029D0  EFEC  F014         	goto	u4060
 11292  0029D4                     u4061:
 11293  0029D4  EFFF  F014         	goto	l4553
 11294  0029D8                     u4060:
 11295  0029D8  2821               	incf	___flmul@bexp^0,w,c
 11296  0029DA  A4D8               	btfss	status,2,c
 11297  0029DC  EFF2  F014         	goto	u4071
 11298  0029E0  EFF4  F014         	goto	u4070
 11299  0029E4                     u4071:
 11300  0029E4  EFFC  F014         	goto	l4551
 11301  0029E8                     u4070:
 11302  0029E8  0E00               	movlw	0
 11303  0029EA  6E0F               	movwf	___flmul@b^0,c
 11304  0029EC  0E00               	movlw	0
 11305  0029EE  6E10               	movwf	(___flmul@b+1)^0,c
 11306  0029F0  0E00               	movlw	0
 11307  0029F2  6E11               	movwf	(___flmul@b+2)^0,c
 11308  0029F4  0E00               	movlw	0
 11309  0029F6  6E12               	movwf	(___flmul@b+3)^0,c
 11310  0029F8                     l4551:
 11311  0029F8  8E11               	bsf	(___flmul@b+2)^0,7,c
 11312  0029FA  EF07  F015         	goto	l4555
 11313  0029FE                     l4553:
 11314  0029FE  0E00               	movlw	0
 11315  002A00  6E0F               	movwf	___flmul@b^0,c
 11316  002A02  0E00               	movlw	0
 11317  002A04  6E10               	movwf	(___flmul@b+1)^0,c
 11318  002A06  0E00               	movlw	0
 11319  002A08  6E11               	movwf	(___flmul@b+2)^0,c
 11320  002A0A  0E00               	movlw	0
 11321  002A0C  6E12               	movwf	(___flmul@b+3)^0,c
 11322  002A0E                     l4555:
 11323  002A0E  5016               	movf	(___flmul@a+3)^0,w,c
 11324  002A10  0B80               	andlw	128
 11325  002A12  1A1B               	xorwf	___flmul@sign^0,f,c
 11326  002A14  5016               	movf	(___flmul@a+3)^0,w,c
 11327  002A16  2416               	addwf	(___flmul@a+3)^0,w,c
 11328  002A18  6E20               	movwf	___flmul@aexp^0,c
 11329  002A1A  AE15               	btfss	(___flmul@a+2)^0,7,c
 11330  002A1C  EF12  F015         	goto	u4081
 11331  002A20  EF14  F015         	goto	u4080
 11332  002A24                     u4081:
 11333  002A24  EF15  F015         	goto	l4563
 11334  002A28                     u4080:
 11335  002A28  8020               	bsf	___flmul@aexp^0,0,c
 11336  002A2A                     l4563:
 11337  002A2A  5020               	movf	___flmul@aexp^0,w,c
 11338  002A2C  B4D8               	btfsc	status,2,c
 11339  002A2E  EF1B  F015         	goto	u4091
 11340  002A32  EF1D  F015         	goto	u4090
 11341  002A36                     u4091:
 11342  002A36  EF30  F015         	goto	l4571
 11343  002A3A                     u4090:
 11344  002A3A  2820               	incf	___flmul@aexp^0,w,c
 11345  002A3C  A4D8               	btfss	status,2,c
 11346  002A3E  EF23  F015         	goto	u4101
 11347  002A42  EF25  F015         	goto	u4100
 11348  002A46                     u4101:
 11349  002A46  EF2D  F015         	goto	l4569
 11350  002A4A                     u4100:
 11351  002A4A  0E00               	movlw	0
 11352  002A4C  6E13               	movwf	___flmul@a^0,c
 11353  002A4E  0E00               	movlw	0
 11354  002A50  6E14               	movwf	(___flmul@a+1)^0,c
 11355  002A52  0E00               	movlw	0
 11356  002A54  6E15               	movwf	(___flmul@a+2)^0,c
 11357  002A56  0E00               	movlw	0
 11358  002A58  6E16               	movwf	(___flmul@a+3)^0,c
 11359  002A5A                     l4569:
 11360  002A5A  8E15               	bsf	(___flmul@a+2)^0,7,c
 11361  002A5C  EF38  F015         	goto	l1168
 11362  002A60                     l4571:
 11363  002A60  0E00               	movlw	0
 11364  002A62  6E13               	movwf	___flmul@a^0,c
 11365  002A64  0E00               	movlw	0
 11366  002A66  6E14               	movwf	(___flmul@a+1)^0,c
 11367  002A68  0E00               	movlw	0
 11368  002A6A  6E15               	movwf	(___flmul@a+2)^0,c
 11369  002A6C  0E00               	movlw	0
 11370  002A6E  6E16               	movwf	(___flmul@a+3)^0,c
 11371  002A70                     l1168:
 11372  002A70  5020               	movf	___flmul@aexp^0,w,c
 11373  002A72  B4D8               	btfsc	status,2,c
 11374  002A74  EF3E  F015         	goto	u4111
 11375  002A78  EF40  F015         	goto	u4110
 11376  002A7C                     u4111:
 11377  002A7C  EF48  F015         	goto	l4575
 11378  002A80                     u4110:
 11379  002A80  5021               	movf	___flmul@bexp^0,w,c
 11380  002A82  A4D8               	btfss	status,2,c
 11381  002A84  EF46  F015         	goto	u4121
 11382  002A88  EF48  F015         	goto	u4120
 11383  002A8C                     u4121:
 11384  002A8C  EF52  F015         	goto	l4579
 11385  002A90                     u4120:
 11386  002A90                     l4575:
 11387  002A90  0E00               	movlw	0
 11388  002A92  6E0F               	movwf	?___flmul^0,c
 11389  002A94  0E00               	movlw	0
 11390  002A96  6E10               	movwf	(?___flmul+1)^0,c
 11391  002A98  0E00               	movlw	0
 11392  002A9A  6E11               	movwf	(?___flmul+2)^0,c
 11393  002A9C  0E00               	movlw	0
 11394  002A9E  6E12               	movwf	(?___flmul+3)^0,c
 11395  002AA0  EFEA  F016         	goto	l1172
 11396  002AA4                     l4579:
 11397  002AA4  5015               	movf	(___flmul@a+2)^0,w,c
 11398  002AA6  020F               	mulwf	___flmul@b^0,c
 11399  002AA8  CFF3 F026          	movff	prodl,___flmul@temp
 11400  002AAC  CFF4 F027          	movff	prodh,___flmul@temp+1
 11401  002AB0  5026               	movf	___flmul@temp^0,w,c
 11402  002AB2  6E1C               	movwf	___flmul@grs^0,c
 11403  002AB4  6A1D               	clrf	(___flmul@grs+1)^0,c
 11404  002AB6  6A1E               	clrf	(___flmul@grs+2)^0,c
 11405  002AB8  6A1F               	clrf	(___flmul@grs+3)^0,c
 11406  002ABA  5027               	movf	(___flmul@temp+1)^0,w,c
 11407  002ABC  6E22               	movwf	___flmul@prod^0,c
 11408  002ABE  6A23               	clrf	(___flmul@prod+1)^0,c
 11409  002AC0  6A24               	clrf	(___flmul@prod+2)^0,c
 11410  002AC2  6A25               	clrf	(___flmul@prod+3)^0,c
 11411  002AC4  5014               	movf	(___flmul@a+1)^0,w,c
 11412  002AC6  0210               	mulwf	(___flmul@b+1)^0,c
 11413  002AC8  CFF3 F026          	movff	prodl,___flmul@temp
 11414  002ACC  CFF4 F027          	movff	prodh,___flmul@temp+1
 11415  002AD0  5026               	movf	___flmul@temp^0,w,c
 11416  002AD2  261C               	addwf	___flmul@grs^0,f,c
 11417  002AD4  0E00               	movlw	0
 11418  002AD6  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11419  002AD8  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11420  002ADA  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11421  002ADC  5027               	movf	(___flmul@temp+1)^0,w,c
 11422  002ADE  2622               	addwf	___flmul@prod^0,f,c
 11423  002AE0  0E00               	movlw	0
 11424  002AE2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11425  002AE4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11426  002AE6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11427  002AE8  5013               	movf	___flmul@a^0,w,c
 11428  002AEA  0211               	mulwf	(___flmul@b+2)^0,c
 11429  002AEC  CFF3 F026          	movff	prodl,___flmul@temp
 11430  002AF0  CFF4 F027          	movff	prodh,___flmul@temp+1
 11431  002AF4  5026               	movf	___flmul@temp^0,w,c
 11432  002AF6  261C               	addwf	___flmul@grs^0,f,c
 11433  002AF8  0E00               	movlw	0
 11434  002AFA  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11435  002AFC  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11436  002AFE  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11437  002B00  5027               	movf	(___flmul@temp+1)^0,w,c
 11438  002B02  2622               	addwf	___flmul@prod^0,f,c
 11439  002B04  0E00               	movlw	0
 11440  002B06  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11441  002B08  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11442  002B0A  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11443  002B0C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11444  002B10  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11445  002B14  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11446  002B18  6A1C               	clrf	___flmul@grs^0,c
 11447  002B1A  5013               	movf	___flmul@a^0,w,c
 11448  002B1C  0210               	mulwf	(___flmul@b+1)^0,c
 11449  002B1E  CFF3 F026          	movff	prodl,___flmul@temp
 11450  002B22  CFF4 F027          	movff	prodh,___flmul@temp+1
 11451  002B26  5026               	movf	___flmul@temp^0,w,c
 11452  002B28  261C               	addwf	___flmul@grs^0,f,c
 11453  002B2A  5027               	movf	(___flmul@temp+1)^0,w,c
 11454  002B2C  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11455  002B2E  0E00               	movlw	0
 11456  002B30  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11457  002B32  0E00               	movlw	0
 11458  002B34  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11459  002B36  5014               	movf	(___flmul@a+1)^0,w,c
 11460  002B38  020F               	mulwf	___flmul@b^0,c
 11461  002B3A  CFF3 F026          	movff	prodl,___flmul@temp
 11462  002B3E  CFF4 F027          	movff	prodh,___flmul@temp+1
 11463  002B42  5026               	movf	___flmul@temp^0,w,c
 11464  002B44  261C               	addwf	___flmul@grs^0,f,c
 11465  002B46  5027               	movf	(___flmul@temp+1)^0,w,c
 11466  002B48  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11467  002B4A  0E00               	movlw	0
 11468  002B4C  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11469  002B4E  0E00               	movlw	0
 11470  002B50  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11471  002B52  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11472  002B56  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11473  002B5A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11474  002B5E  6A1C               	clrf	___flmul@grs^0,c
 11475  002B60  5013               	movf	___flmul@a^0,w,c
 11476  002B62  020F               	mulwf	___flmul@b^0,c
 11477  002B64  CFF3 F026          	movff	prodl,___flmul@temp
 11478  002B68  CFF4 F027          	movff	prodh,___flmul@temp+1
 11479  002B6C  5026               	movf	___flmul@temp^0,w,c
 11480  002B6E  261C               	addwf	___flmul@grs^0,f,c
 11481  002B70  5027               	movf	(___flmul@temp+1)^0,w,c
 11482  002B72  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11483  002B74  0E00               	movlw	0
 11484  002B76  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11485  002B78  0E00               	movlw	0
 11486  002B7A  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11487  002B7C  5015               	movf	(___flmul@a+2)^0,w,c
 11488  002B7E  0210               	mulwf	(___flmul@b+1)^0,c
 11489  002B80  CFF3 F026          	movff	prodl,___flmul@temp
 11490  002B84  CFF4 F027          	movff	prodh,___flmul@temp+1
 11491  002B88  5026               	movf	___flmul@temp^0,w,c
 11492  002B8A  2622               	addwf	___flmul@prod^0,f,c
 11493  002B8C  5027               	movf	(___flmul@temp+1)^0,w,c
 11494  002B8E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11495  002B90  0E00               	movlw	0
 11496  002B92  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11497  002B94  0E00               	movlw	0
 11498  002B96  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11499  002B98  5014               	movf	(___flmul@a+1)^0,w,c
 11500  002B9A  0211               	mulwf	(___flmul@b+2)^0,c
 11501  002B9C  CFF3 F026          	movff	prodl,___flmul@temp
 11502  002BA0  CFF4 F027          	movff	prodh,___flmul@temp+1
 11503  002BA4  5026               	movf	___flmul@temp^0,w,c
 11504  002BA6  2622               	addwf	___flmul@prod^0,f,c
 11505  002BA8  5027               	movf	(___flmul@temp+1)^0,w,c
 11506  002BAA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11507  002BAC  0E00               	movlw	0
 11508  002BAE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11509  002BB0  0E00               	movlw	0
 11510  002BB2  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11511  002BB4  5015               	movf	(___flmul@a+2)^0,w,c
 11512  002BB6  0211               	mulwf	(___flmul@b+2)^0,c
 11513  002BB8  CFF3 F026          	movff	prodl,___flmul@temp
 11514  002BBC  CFF4 F027          	movff	prodh,___flmul@temp+1
 11515  002BC0  5026               	movf	___flmul@temp^0,w,c
 11516  002BC2  6E17               	movwf	??___flmul^0,c
 11517  002BC4  5027               	movf	(___flmul@temp+1)^0,w,c
 11518  002BC6  6E18               	movwf	(??___flmul+1)^0,c
 11519  002BC8  6A19               	clrf	(??___flmul+2)^0,c
 11520  002BCA  6A1A               	clrf	(??___flmul+3)^0,c
 11521  002BCC  C019  F01A         	movff	??___flmul+2,??___flmul+3
 11522  002BD0  C018  F019         	movff	??___flmul+1,??___flmul+2
 11523  002BD4  C017  F018         	movff	??___flmul,??___flmul+1
 11524  002BD8  6A17               	clrf	??___flmul^0,c
 11525  002BDA  5017               	movf	??___flmul^0,w,c
 11526  002BDC  2622               	addwf	___flmul@prod^0,f,c
 11527  002BDE  5018               	movf	(??___flmul+1)^0,w,c
 11528  002BE0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11529  002BE2  5019               	movf	(??___flmul+2)^0,w,c
 11530  002BE4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11531  002BE6  501A               	movf	(??___flmul+3)^0,w,c
 11532  002BE8  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11533  002BEA  C01C  F017         	movff	___flmul@grs,??___flmul
 11534  002BEE  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 11535  002BF2  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 11536  002BF6  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 11537  002BFA  0E19               	movlw	25
 11538  002BFC  EF05  F016         	goto	u4130
 11539  002C00                     u4135:
 11540  002C00  90D8               	bcf	status,0,c
 11541  002C02  321A               	rrcf	(??___flmul+3)^0,f,c
 11542  002C04  3219               	rrcf	(??___flmul+2)^0,f,c
 11543  002C06  3218               	rrcf	(??___flmul+1)^0,f,c
 11544  002C08  3217               	rrcf	??___flmul^0,f,c
 11545  002C0A                     u4130:
 11546  002C0A  2EE8               	decfsz	wreg,f,c
 11547  002C0C  EF00  F016         	goto	u4135
 11548  002C10  5017               	movf	??___flmul^0,w,c
 11549  002C12  2622               	addwf	___flmul@prod^0,f,c
 11550  002C14  5018               	movf	(??___flmul+1)^0,w,c
 11551  002C16  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11552  002C18  5019               	movf	(??___flmul+2)^0,w,c
 11553  002C1A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11554  002C1C  501A               	movf	(??___flmul+3)^0,w,c
 11555  002C1E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11556  002C20  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11557  002C24  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11558  002C28  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11559  002C2C  6A1C               	clrf	___flmul@grs^0,c
 11560  002C2E  5020               	movf	___flmul@aexp^0,w,c
 11561  002C30  C021  F017         	movff	___flmul@bexp,??___flmul
 11562  002C34  6A18               	clrf	(??___flmul+1)^0,c
 11563  002C36  2617               	addwf	??___flmul^0,f,c
 11564  002C38  0E00               	movlw	0
 11565  002C3A  2218               	addwfc	(??___flmul+1)^0,f,c
 11566  002C3C  0E82               	movlw	130
 11567  002C3E  2417               	addwf	??___flmul^0,w,c
 11568  002C40  6E26               	movwf	___flmul@temp^0,c
 11569  002C42  0EFF               	movlw	255
 11570  002C44  2018               	addwfc	(??___flmul+1)^0,w,c
 11571  002C46  6E27               	movwf	(___flmul@temp+1)^0,c
 11572  002C48  EF3B  F016         	goto	l4627
 11573  002C4C                     l4621:
 11574  002C4C  90D8               	bcf	status,0,c
 11575  002C4E  3622               	rlcf	___flmul@prod^0,f,c
 11576  002C50  3623               	rlcf	(___flmul@prod+1)^0,f,c
 11577  002C52  3624               	rlcf	(___flmul@prod+2)^0,f,c
 11578  002C54  3625               	rlcf	(___flmul@prod+3)^0,f,c
 11579  002C56  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11580  002C58  EF30  F016         	goto	u4141
 11581  002C5C  EF32  F016         	goto	u4140
 11582  002C60                     u4141:
 11583  002C60  EF33  F016         	goto	l1175
 11584  002C64                     u4140:
 11585  002C64  8022               	bsf	___flmul@prod^0,0,c
 11586  002C66                     l1175:
 11587  002C66  90D8               	bcf	status,0,c
 11588  002C68  361C               	rlcf	___flmul@grs^0,f,c
 11589  002C6A  361D               	rlcf	(___flmul@grs+1)^0,f,c
 11590  002C6C  361E               	rlcf	(___flmul@grs+2)^0,f,c
 11591  002C6E  361F               	rlcf	(___flmul@grs+3)^0,f,c
 11592  002C70  0626               	decf	___flmul@temp^0,f,c
 11593  002C72  A0D8               	btfss	status,0,c
 11594  002C74  0627               	decf	(___flmul@temp+1)^0,f,c
 11595  002C76                     l4627:
 11596  002C76  AE24               	btfss	(___flmul@prod+2)^0,7,c
 11597  002C78  EF40  F016         	goto	u4151
 11598  002C7C  EF42  F016         	goto	u4150
 11599  002C80                     u4151:
 11600  002C80  EF26  F016         	goto	l4621
 11601  002C84                     u4150:
 11602  002C84  0E00               	movlw	0
 11603  002C86  6E20               	movwf	___flmul@aexp^0,c
 11604  002C88  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11605  002C8A  EF49  F016         	goto	u4161
 11606  002C8E  EF4B  F016         	goto	u4160
 11607  002C92                     u4161:
 11608  002C92  EF6F  F016         	goto	l1177
 11609  002C96                     u4160:
 11610  002C96  0EFF               	movlw	255
 11611  002C98  141C               	andwf	___flmul@grs^0,w,c
 11612  002C9A  6E17               	movwf	??___flmul^0,c
 11613  002C9C  0EFF               	movlw	255
 11614  002C9E  141D               	andwf	(___flmul@grs+1)^0,w,c
 11615  002CA0  6E18               	movwf	(??___flmul+1)^0,c
 11616  002CA2  0EFF               	movlw	255
 11617  002CA4  141E               	andwf	(___flmul@grs+2)^0,w,c
 11618  002CA6  6E19               	movwf	(??___flmul+2)^0,c
 11619  002CA8  0E7F               	movlw	127
 11620  002CAA  141F               	andwf	(___flmul@grs+3)^0,w,c
 11621  002CAC  6E1A               	movwf	(??___flmul+3)^0,c
 11622  002CAE  5017               	movf	??___flmul^0,w,c
 11623  002CB0  1018               	iorwf	(??___flmul+1)^0,w,c
 11624  002CB2  1019               	iorwf	(??___flmul+2)^0,w,c
 11625  002CB4  101A               	iorwf	(??___flmul+3)^0,w,c
 11626  002CB6  B4D8               	btfsc	status,2,c
 11627  002CB8  EF60  F016         	goto	u4171
 11628  002CBC  EF62  F016         	goto	u4170
 11629  002CC0                     u4171:
 11630  002CC0  EF66  F016         	goto	l1178
 11631  002CC4                     u4170:
 11632  002CC4                     l4635:
 11633  002CC4  0E01               	movlw	1
 11634  002CC6  6E20               	movwf	___flmul@aexp^0,c
 11635  002CC8  EF6F  F016         	goto	l1177
 11636  002CCC                     l1178:
 11637  002CCC  A022               	btfss	___flmul@prod^0,0,c
 11638  002CCE  EF6B  F016         	goto	u4181
 11639  002CD2  EF6D  F016         	goto	u4180
 11640  002CD6                     u4181:
 11641  002CD6  EF6F  F016         	goto	l1177
 11642  002CDA                     u4180:
 11643  002CDA  EF62  F016         	goto	l4635
 11644  002CDE                     l1177:
 11645  002CDE  5020               	movf	___flmul@aexp^0,w,c
 11646  002CE0  B4D8               	btfsc	status,2,c
 11647  002CE2  EF75  F016         	goto	u4191
 11648  002CE6  EF77  F016         	goto	u4190
 11649  002CEA                     u4191:
 11650  002CEA  EF9B  F016         	goto	l4647
 11651  002CEE                     u4190:
 11652  002CEE  0E01               	movlw	1
 11653  002CF0  2622               	addwf	___flmul@prod^0,f,c
 11654  002CF2  0E00               	movlw	0
 11655  002CF4  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11656  002CF6  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11657  002CF8  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11658  002CFA  A025               	btfss	(___flmul@prod+3)^0,0,c
 11659  002CFC  EF82  F016         	goto	u4201
 11660  002D00  EF84  F016         	goto	u4200
 11661  002D04                     u4201:
 11662  002D04  EF9B  F016         	goto	l4647
 11663  002D08                     u4200:
 11664  002D08  C022  F017         	movff	___flmul@prod,??___flmul
 11665  002D0C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 11666  002D10  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 11667  002D14  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 11668  002D18  341A               	rlcf	(??___flmul+3)^0,w,c
 11669  002D1A  321A               	rrcf	(??___flmul+3)^0,f,c
 11670  002D1C  3219               	rrcf	(??___flmul+2)^0,f,c
 11671  002D1E  3218               	rrcf	(??___flmul+1)^0,f,c
 11672  002D20  3217               	rrcf	??___flmul^0,f,c
 11673  002D22  C017  F022         	movff	??___flmul,___flmul@prod
 11674  002D26  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 11675  002D2A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 11676  002D2E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 11677  002D32  4A26               	infsnz	___flmul@temp^0,f,c
 11678  002D34  2A27               	incf	(___flmul@temp+1)^0,f,c
 11679  002D36                     l4647:
 11680  002D36  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11681  002D38  EFA6  F016         	goto	u4211
 11682  002D3C  5027               	movf	(___flmul@temp+1)^0,w,c
 11683  002D3E  E108               	bnz	u4210
 11684  002D40  2826               	incf	___flmul@temp^0,w,c
 11685  002D42  A0D8               	btfss	status,0,c
 11686  002D44  EFA6  F016         	goto	u4211
 11687  002D48  EFA8  F016         	goto	u4210
 11688  002D4C                     u4211:
 11689  002D4C  EFB2  F016         	goto	l4651
 11690  002D50                     u4210:
 11691  002D50  0E00               	movlw	0
 11692  002D52  6E22               	movwf	___flmul@prod^0,c
 11693  002D54  0E00               	movlw	0
 11694  002D56  6E23               	movwf	(___flmul@prod+1)^0,c
 11695  002D58  0E80               	movlw	128
 11696  002D5A  6E24               	movwf	(___flmul@prod+2)^0,c
 11697  002D5C  0E7F               	movlw	127
 11698  002D5E  6E25               	movwf	(___flmul@prod+3)^0,c
 11699  002D60  EFE0  F016         	goto	l4663
 11700  002D64                     l4651:
 11701  002D64  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11702  002D66  EFBF  F016         	goto	u4220
 11703  002D6A  5027               	movf	(___flmul@temp+1)^0,w,c
 11704  002D6C  E106               	bnz	u4221
 11705  002D6E  0426               	decf	___flmul@temp^0,w,c
 11706  002D70  B0D8               	btfsc	status,0,c
 11707  002D72  EFBD  F016         	goto	u4221
 11708  002D76  EFBF  F016         	goto	u4220
 11709  002D7A                     u4221:
 11710  002D7A  EFCB  F016         	goto	l1185
 11711  002D7E                     u4220:
 11712  002D7E  0E00               	movlw	0
 11713  002D80  6E22               	movwf	___flmul@prod^0,c
 11714  002D82  0E00               	movlw	0
 11715  002D84  6E23               	movwf	(___flmul@prod+1)^0,c
 11716  002D86  0E00               	movlw	0
 11717  002D88  6E24               	movwf	(___flmul@prod+2)^0,c
 11718  002D8A  0E00               	movlw	0
 11719  002D8C  6E25               	movwf	(___flmul@prod+3)^0,c
 11720  002D8E  0E00               	movlw	0
 11721  002D90  6E1B               	movwf	___flmul@sign^0,c
 11722  002D92  EFE0  F016         	goto	l4663
 11723  002D96                     l1185:
 11724  002D96  C026  F021         	movff	___flmul@temp,___flmul@bexp
 11725  002D9A  0EFF               	movlw	255
 11726  002D9C  1622               	andwf	___flmul@prod^0,f,c
 11727  002D9E  0EFF               	movlw	255
 11728  002DA0  1623               	andwf	(___flmul@prod+1)^0,f,c
 11729  002DA2  0E7F               	movlw	127
 11730  002DA4  1624               	andwf	(___flmul@prod+2)^0,f,c
 11731  002DA6  0E00               	movlw	0
 11732  002DA8  1625               	andwf	(___flmul@prod+3)^0,f,c
 11733  002DAA  A021               	btfss	___flmul@bexp^0,0,c
 11734  002DAC  EFDA  F016         	goto	u4231
 11735  002DB0  EFDC  F016         	goto	u4230
 11736  002DB4                     u4231:
 11737  002DB4  EFDD  F016         	goto	l4661
 11738  002DB8                     u4230:
 11739  002DB8  8E24               	bsf	(___flmul@prod+2)^0,7,c
 11740  002DBA                     l4661:
 11741  002DBA  90D8               	bcf	status,0,c
 11742  002DBC  3021               	rrcf	___flmul@bexp^0,w,c
 11743  002DBE  6E25               	movwf	(___flmul@prod+3)^0,c
 11744  002DC0                     l4663:
 11745  002DC0  501B               	movf	___flmul@sign^0,w,c
 11746  002DC2  1225               	iorwf	(___flmul@prod+3)^0,f,c
 11747  002DC4  C022  F00F         	movff	___flmul@prod,?___flmul
 11748  002DC8  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 11749  002DCC  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 11750  002DD0  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 11751  002DD4                     l1172:
 11752  002DD4  0012               	return		;funcret
 11753  002DD6                     __end_of___flmul:
 11754                           	callstack 0
 11755                           
 11756 ;; *************** function _I2C_INA_read *****************
 11757 ;; Defined at:
 11758 ;;		line 39 in file "ina219_lib.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  registro        1    wreg     unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  registro        1    5[COMRAM] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  2    1[COMRAM] unsigned short 
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11772 ;;      Params:         2       0       0       0       0       0       0       0       0
 11773 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11774 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11775 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11776 ;;Total ram usage:        5 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 3
 11779 ;; This function calls:
 11780 ;;		_I2C_Rx_ack
 11781 ;;		_I2C_Rx_data
 11782 ;;		_I2C_Rx_nack
 11783 ;;		_I2C_Tx_data
 11784 ;;		_I2C_start
 11785 ;;		_I2C_stop
 11786 ;; This function is called by:
 11787 ;;		_ina219GetBusVoltage_V
 11788 ;;		_ina219GetCurrent_mA
 11789 ;;		_ina219GetPower_mW
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text38
 11794  005292                     __ptext38:
 11795                           	callstack 0
 11796  005292                     _I2C_INA_read:
 11797                           	callstack 26
 11798                           
 11799                           ;incstack = 0
 11800                           ;I2C_INA_read@registro stored from wreg
 11801  005292  6E06               	movwf	I2C_INA_read@registro^0,c
 11802  005294                     
 11803                           ;ina219_lib.c: 40:     I2C_start();
 11804  005294  ECA4  F02C         	call	_I2C_start	;wreg free
 11805  005298                     
 11806                           ;ina219_lib.c: 41:     I2C_Tx_data(0x80);
 11807  005298  0E80               	movlw	128
 11808  00529A  ECC1  F02B         	call	_I2C_Tx_data
 11809  00529E                     
 11810                           ;ina219_lib.c: 42:     I2C_Tx_data(registro);
 11811  00529E  5006               	movf	I2C_INA_read@registro^0,w,c
 11812  0052A0  ECC1  F02B         	call	_I2C_Tx_data
 11813  0052A4                     
 11814                           ;ina219_lib.c: 43:     I2C_stop();
 11815  0052A4  EC83  F02C         	call	_I2C_stop	;wreg free
 11816  0052A8                     
 11817                           ;ina219_lib.c: 44:     _delay((unsigned long)((10)*(20000000L/4000.0)));
 11818  0052A8  0E41               	movlw	65
 11819  0052AA  6E04               	movwf	??_I2C_INA_read^0,c
 11820  0052AC  0EEE               	movlw	238
 11821  0052AE                     u6787:
 11822  0052AE  2EE8               	decfsz	wreg,f,c
 11823  0052B0  D7FE               	bra	u6787
 11824  0052B2  2E04               	decfsz	??_I2C_INA_read^0,f,c
 11825  0052B4  D7FC               	bra	u6787
 11826  0052B6  D000               	nop2	
 11827  0052B8                     
 11828                           ;ina219_lib.c: 45:     I2C_start();
 11829  0052B8  ECA4  F02C         	call	_I2C_start	;wreg free
 11830  0052BC                     
 11831                           ;ina219_lib.c: 46:     I2C_Tx_data(0x81);
 11832  0052BC  0E81               	movlw	129
 11833  0052BE  ECC1  F02B         	call	_I2C_Tx_data
 11834  0052C2                     
 11835                           ;ina219_lib.c: 47:     split[0] = I2C_Rx_data();
 11836  0052C2  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 11837  0052C6  0100               	movlb	0	; () banked
 11838  0052C8  6FE9               	movwf	_split& (0+255),b
 11839  0052CA                     
 11840                           ; BSR set to: 0
 11841                           ;ina219_lib.c: 48:     I2C_Rx_ack();
 11842  0052CA  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 11843  0052CE                     
 11844                           ;ina219_lib.c: 49:     split[1] = I2C_Rx_data();
 11845  0052CE  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 11846  0052D2  0100               	movlb	0	; () banked
 11847  0052D4  6FEA               	movwf	(_split+1)& (0+255),b
 11848  0052D6                     
 11849                           ; BSR set to: 0
 11850                           ;ina219_lib.c: 50:     I2C_Rx_nack();
 11851  0052D6  EC8E  F02C         	call	_I2C_Rx_nack	;wreg free
 11852  0052DA                     
 11853                           ;ina219_lib.c: 51:     I2C_stop();
 11854  0052DA  EC83  F02C         	call	_I2C_stop	;wreg free
 11855  0052DE                     
 11856                           ;ina219_lib.c: 53:     INA_2bytes = ((uint16_t)split[0] << 8) | split[1];
 11857  0052DE  0100               	movlb	0	; () banked
 11858  0052E0  51E9               	movf	_split& (0+255),w,b
 11859  0052E2  6E04               	movwf	??_I2C_INA_read^0,c
 11860  0052E4  51EA               	movf	(_split+1)& (0+255),w,b
 11861  0052E6  6FE7               	movwf	_INA_2bytes& (0+255),b
 11862  0052E8  C004  F0E8         	movff	??_I2C_INA_read,_INA_2bytes+1
 11863  0052EC                     
 11864                           ; BSR set to: 0
 11865                           ;ina219_lib.c: 55:     return INA_2bytes;
 11866  0052EC  C0E7  F002         	movff	_INA_2bytes,?_I2C_INA_read
 11867  0052F0  C0E8  F003         	movff	_INA_2bytes+1,?_I2C_INA_read+1
 11868  0052F4                     
 11869                           ; BSR set to: 0
 11870  0052F4  0012               	return		;funcret
 11871  0052F6                     __end_of_I2C_INA_read:
 11872                           	callstack 0
 11873                           
 11874 ;; *************** function _dht11_check_humidity *****************
 11875 ;; Defined at:
 11876 ;;		line 78 in file "dht11_lib.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  ptr_h           2    8[COMRAM] PTR unsigned char 
 11879 ;;		 -> humidity(19), 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11891 ;;      Params:         2       0       0       0       0       0       0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11893 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11894 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11895 ;;Total ram usage:        4 bytes
 11896 ;; Hardware stack levels used: 1
 11897 ;; Hardware stack levels required when called: 3
 11898 ;; This function calls:
 11899 ;;		_UART_Print
 11900 ;;		___awdiv
 11901 ;;		___awmod
 11902 ;;		_check_response_dht11
 11903 ;;		_read_data_dht11
 11904 ;;		_start_signal_dht11
 11905 ;; This function is called by:
 11906 ;;		_main
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text39
 11911  003C46                     __ptext39:
 11912                           	callstack 0
 11913  003C46                     _dht11_check_humidity:
 11914                           	callstack 27
 11915  003C46                     
 11916                           ;dht11_lib.c: 80:     start_signal_dht11();
 11917  003C46  EC20  F02C         	call	_start_signal_dht11	;wreg free
 11918  003C4A                     
 11919                           ;dht11_lib.c: 82:     if(check_response_dht11())
 11920  003C4A  EC80  F023         	call	_check_response_dht11	;wreg free
 11921  003C4E  A0D8               	btfss	status,0,c
 11922  003C50  EF2C  F01E         	goto	u6281
 11923  003C54  EF2E  F01E         	goto	u6280
 11924  003C58                     u6281:
 11925  003C58  EFBE  F01E         	goto	l6117
 11926  003C5C                     u6280:
 11927  003C5C                     
 11928                           ;dht11_lib.c: 83:     {;dht11_lib.c: 85:         if(read_data_dht11(&RH_Byte1) || read_d
      +                          ata_dht11(&RH_Byte2) || read_data_dht11(&T_Byte1)
 11929  003C5C  0EFA               	movlw	low _RH_Byte1
 11930  003C5E  6E01               	movwf	read_data_dht11@dht_data^0,c
 11931  003C60  0E00               	movlw	high _RH_Byte1
 11932  003C62  6E02               	movwf	(read_data_dht11@dht_data+1)^0,c
 11933  003C64  EC0A  F022         	call	_read_data_dht11	;wreg free
 11934  003C68  B0D8               	btfsc	status,0,c
 11935  003C6A  EF39  F01E         	goto	u6291
 11936  003C6E  EF3B  F01E         	goto	u6290
 11937  003C72                     u6291:
 11938  003C72  EF6F  F01E         	goto	l6109
 11939  003C76                     u6290:
 11940  003C76  0EF9               	movlw	low _RH_Byte2
 11941  003C78  6E01               	movwf	read_data_dht11@dht_data^0,c
 11942  003C7A  0E00               	movlw	high _RH_Byte2
 11943  003C7C  6E02               	movwf	(read_data_dht11@dht_data+1)^0,c
 11944  003C7E  EC0A  F022         	call	_read_data_dht11	;wreg free
 11945  003C82  B0D8               	btfsc	status,0,c
 11946  003C84  EF46  F01E         	goto	u6301
 11947  003C88  EF48  F01E         	goto	u6300
 11948  003C8C                     u6301:
 11949  003C8C  EF6F  F01E         	goto	l6109
 11950  003C90                     u6300:
 11951  003C90  0EFC               	movlw	low _T_Byte1
 11952  003C92  6E01               	movwf	read_data_dht11@dht_data^0,c
 11953  003C94  0E00               	movlw	high _T_Byte1
 11954  003C96  6E02               	movwf	(read_data_dht11@dht_data+1)^0,c
 11955  003C98  EC0A  F022         	call	_read_data_dht11	;wreg free
 11956  003C9C  B0D8               	btfsc	status,0,c
 11957  003C9E  EF53  F01E         	goto	u6311
 11958  003CA2  EF55  F01E         	goto	u6310
 11959  003CA6                     u6311:
 11960  003CA6  EF6F  F01E         	goto	l6109
 11961  003CAA                     u6310:
 11962  003CAA  0EFB               	movlw	low _T_Byte2
 11963  003CAC  6E01               	movwf	read_data_dht11@dht_data^0,c
 11964  003CAE  0E00               	movlw	high _T_Byte2
 11965  003CB0  6E02               	movwf	(read_data_dht11@dht_data+1)^0,c
 11966  003CB2  EC0A  F022         	call	_read_data_dht11	;wreg free
 11967  003CB6  B0D8               	btfsc	status,0,c
 11968  003CB8  EF60  F01E         	goto	u6321
 11969  003CBC  EF62  F01E         	goto	u6320
 11970  003CC0                     u6321:
 11971  003CC0  EF6F  F01E         	goto	l6109
 11972  003CC4                     u6320:
 11973  003CC4  0EF8               	movlw	low _CheckSum
 11974  003CC6  6E01               	movwf	read_data_dht11@dht_data^0,c
 11975  003CC8  0E00               	movlw	high _CheckSum
 11976  003CCA  6E02               	movwf	(read_data_dht11@dht_data+1)^0,c
 11977  003CCC  EC0A  F022         	call	_read_data_dht11	;wreg free
 11978  003CD0  A0D8               	btfss	status,0,c
 11979  003CD2  EF6D  F01E         	goto	u6331
 11980  003CD6  EF6F  F01E         	goto	u6330
 11981  003CDA                     u6331:
 11982  003CDA  EF77  F01E         	goto	l6111
 11983  003CDE                     u6330:
 11984  003CDE                     l6109:
 11985                           
 11986                           ;dht11_lib.c: 87:         {;dht11_lib.c: 88:           UART_Print("Time out!\r\n");
 11987  003CDE  0EA6               	movlw	low STR_41
 11988  003CE0  6E02               	movwf	UART_Print@data^0,c
 11989  003CE2  0E7F               	movlw	high STR_41
 11990  003CE4  6E03               	movwf	(UART_Print@data+1)^0,c
 11991  003CE6  EC98  F027         	call	_UART_Print	;wreg free
 11992                           
 11993                           ;dht11_lib.c: 89:         }
 11994  003CEA  EFC4  F01E         	goto	l6119
 11995  003CEE                     l6111:
 11996                           
 11997                           ;dht11_lib.c: 92:         {;dht11_lib.c: 93:             if(CheckSum == ((RH_Byte1 + RH_
      +                          Byte2 + T_Byte1 + T_Byte2) & 0xFF))
 11998  003CEE  0100               	movlb	0	; () banked
 11999  003CF0  51F9               	movf	_RH_Byte2& (0+255),w,b
 12000  003CF2  C0FA  F00B         	movff	_RH_Byte1,??_dht11_check_humidity
 12001  003CF6  6A0C               	clrf	(??_dht11_check_humidity+1)^0,c
 12002  003CF8  260B               	addwf	??_dht11_check_humidity^0,f,c
 12003  003CFA  0E00               	movlw	0
 12004  003CFC  220C               	addwfc	(??_dht11_check_humidity+1)^0,f,c
 12005  003CFE  51FC               	movf	_T_Byte1& (0+255),w,b
 12006  003D00  260B               	addwf	??_dht11_check_humidity^0,f,c
 12007  003D02  0E00               	movlw	0
 12008  003D04  220C               	addwfc	(??_dht11_check_humidity+1)^0,f,c
 12009  003D06  51FB               	movf	_T_Byte2& (0+255),w,b
 12010  003D08  260B               	addwf	??_dht11_check_humidity^0,f,c
 12011  003D0A  0E00               	movlw	0
 12012  003D0C  220C               	addwfc	(??_dht11_check_humidity+1)^0,f,c
 12013  003D0E  500B               	movf	??_dht11_check_humidity^0,w,c
 12014  003D10  19F8               	xorwf	_CheckSum& (0+255),w,b
 12015  003D12  A4D8               	btfss	status,2,c
 12016  003D14  EF8E  F01E         	goto	u6341
 12017  003D18  EF90  F01E         	goto	u6340
 12018  003D1C                     u6341:
 12019  003D1C  EFB6  F01E         	goto	l6115
 12020  003D20                     u6340:
 12021  003D20                     
 12022                           ; BSR set to: 0
 12023                           ;dht11_lib.c: 94:             {;dht11_lib.c: 95:                 *(ptr_h+16) = RH_Byte1 
      +                          / 10 + '0';
 12024  003D20  EE20 F010          	lfsr	2,16
 12025  003D24  5009               	movf	dht11_check_humidity@ptr_h^0,w,c
 12026  003D26  26D9               	addwf	fsr2l,f,c
 12027  003D28  500A               	movf	(dht11_check_humidity@ptr_h+1)^0,w,c
 12028  003D2A  22DA               	addwfc	fsr2h,f,c
 12029  003D2C  C0FA  F001         	movff	_RH_Byte1,___awdiv@dividend
 12030  003D30  6A02               	clrf	(___awdiv@dividend+1)^0,c
 12031  003D32  0E00               	movlw	0
 12032  003D34  6E04               	movwf	(___awdiv@divisor+1)^0,c
 12033  003D36  0E0A               	movlw	10
 12034  003D38  6E03               	movwf	___awdiv@divisor^0,c
 12035  003D3A  EC98  F025         	call	___awdiv	;wreg free
 12036  003D3E  5001               	movf	?___awdiv^0,w,c
 12037  003D40  0F30               	addlw	48
 12038  003D42  6EDF               	movwf	indf2,c
 12039                           
 12040                           ;dht11_lib.c: 96:                 *(ptr_h+17) = RH_Byte1 % 10 + '0';
 12041  003D44  EE20 F011          	lfsr	2,17
 12042  003D48  5009               	movf	dht11_check_humidity@ptr_h^0,w,c
 12043  003D4A  26D9               	addwf	fsr2l,f,c
 12044  003D4C  500A               	movf	(dht11_check_humidity@ptr_h+1)^0,w,c
 12045  003D4E  22DA               	addwfc	fsr2h,f,c
 12046  003D50  C0FA  F001         	movff	_RH_Byte1,___awmod@dividend
 12047  003D54  6A02               	clrf	(___awmod@dividend+1)^0,c
 12048  003D56  0E00               	movlw	0
 12049  003D58  6E04               	movwf	(___awmod@divisor+1)^0,c
 12050  003D5A  0E0A               	movlw	10
 12051  003D5C  6E03               	movwf	___awmod@divisor^0,c
 12052  003D5E  EC55  F026         	call	___awmod	;wreg free
 12053  003D62  5001               	movf	?___awmod^0,w,c
 12054  003D64  0F30               	addlw	48
 12055  003D66  6EDF               	movwf	indf2,c
 12056                           
 12057                           ;dht11_lib.c: 97:             }
 12058  003D68  EFC4  F01E         	goto	l6119
 12059  003D6C                     l6115:
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;dht11_lib.c: 101:             {;dht11_lib.c: 102:                 UART_Print("Checksum 
      +                          Error!\r\n");
 12063  003D6C  0E54               	movlw	low STR_42
 12064  003D6E  6E02               	movwf	UART_Print@data^0,c
 12065  003D70  0E7E               	movlw	high STR_42
 12066  003D72  6E03               	movwf	(UART_Print@data+1)^0,c
 12067  003D74  EC98  F027         	call	_UART_Print	;wreg free
 12068  003D78  EFC4  F01E         	goto	l6119
 12069  003D7C                     l6117:
 12070                           
 12071                           ;dht11_lib.c: 108:     {;dht11_lib.c: 109:       UART_Print("No response from the sensor
      +                          \r\n");
 12072  003D7C  0E37               	movlw	low STR_43
 12073  003D7E  6E02               	movwf	UART_Print@data^0,c
 12074  003D80  0E7D               	movlw	high STR_43
 12075  003D82  6E03               	movwf	(UART_Print@data+1)^0,c
 12076  003D84  EC98  F027         	call	_UART_Print	;wreg free
 12077  003D88                     l6119:
 12078                           
 12079                           ;dht11_lib.c: 113:     T1CONbits.TMR1ON = 0;
 12080  003D88  90CD               	bcf	205,0,c	;volatile
 12081  003D8A  0012               	return		;funcret
 12082  003D8C                     __end_of_dht11_check_humidity:
 12083                           	callstack 0
 12084                           
 12085 ;; *************** function _start_signal_dht11 *****************
 12086 ;; Defined at:
 12087 ;;		line 7 in file "dht11_lib.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;		None
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;		None
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  1    wreg      void 
 12094 ;; Registers used:
 12095 ;;		wreg
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12101 ;;      Params:         0       0       0       0       0       0       0       0       0
 12102 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12103 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12104 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12105 ;;Total ram usage:        1 bytes
 12106 ;; Hardware stack levels used: 1
 12107 ;; Hardware stack levels required when called: 1
 12108 ;; This function calls:
 12109 ;;		Nothing
 12110 ;; This function is called by:
 12111 ;;		_dht11_check_humidity
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	text40
 12116  005840                     __ptext40:
 12117                           	callstack 0
 12118  005840                     _start_signal_dht11:
 12119                           	callstack 28
 12120  005840                     
 12121                           ;dht11_lib.c: 8:   TRISAbits.TRISA0 = 0;
 12122  005840  9092               	bcf	146,0,c	;volatile
 12123                           
 12124                           ;dht11_lib.c: 9:   PORTAbits.RA0 = 0;
 12125  005842  9080               	bcf	128,0,c	;volatile
 12126  005844                     
 12127                           ;dht11_lib.c: 11:   _delay((unsigned long)((25)*(20000000L/4000.0)));
 12128  005844  0EA3               	movlw	163
 12129  005846  6E01               	movwf	??_start_signal_dht11^0,c
 12130  005848  0E55               	movlw	85
 12131  00584A                     u6797:
 12132  00584A  2EE8               	decfsz	wreg,f,c
 12133  00584C  D7FE               	bra	u6797
 12134  00584E  2E01               	decfsz	??_start_signal_dht11^0,f,c
 12135  005850  D7FC               	bra	u6797
 12136  005852  F000               	nop	
 12137  005854                     
 12138                           ;dht11_lib.c: 12:   PORTAbits.RA0 = 1;
 12139  005854  8080               	bsf	128,0,c	;volatile
 12140                           
 12141                           ;dht11_lib.c: 14:   _delay((unsigned long)((30)*(20000000L/4000000.0)));
 12142  005856  0E32               	movlw	50
 12143  005858                     u6807:
 12144  005858  2EE8               	decfsz	wreg,f,c
 12145  00585A  D7FE               	bra	u6807
 12146  00585C                     
 12147                           ;dht11_lib.c: 15:   TRISAbits.TRISA0 = 1;
 12148  00585C  8092               	bsf	146,0,c	;volatile
 12149  00585E  0012               	return		;funcret
 12150  005860                     __end_of_start_signal_dht11:
 12151                           	callstack 0
 12152                           
 12153 ;; *************** function _read_data_dht11 *****************
 12154 ;; Defined at:
 12155 ;;		line 46 in file "dht11_lib.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  dht_data        2    0[COMRAM] PTR unsigned char 
 12158 ;;		 -> CheckSum(1), T_Byte2(1), T_Byte1(1), RH_Byte2(1), 
 12159 ;;		 -> RH_Byte1(1), 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  i               1    6[COMRAM] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;		None               void
 12164 ;; Registers used:
 12165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12171 ;;      Params:         2       0       0       0       0       0       0       0       0
 12172 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12173 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12174 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12175 ;;Total ram usage:        7 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 1
 12178 ;; This function calls:
 12179 ;;		Nothing
 12180 ;; This function is called by:
 12181 ;;		_dht11_check_humidity
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text41
 12186  004414                     __ptext41:
 12187                           	callstack 0
 12188  004414                     _read_data_dht11:
 12189                           	callstack 28
 12190  004414                     
 12191                           ;dht11_lib.c: 46: __bit read_data_dht11(unsigned char* dht_data);dht11_lib.c: 47: {;dht1
      +                          1_lib.c: 48:     *dht_data = 0;
 12192  004414  C001  FFD9         	movff	read_data_dht11@dht_data,fsr2l
 12193  004418  C002  FFDA         	movff	read_data_dht11@dht_data+1,fsr2h
 12194  00441C  0E00               	movlw	0
 12195  00441E  6EDF               	movwf	indf2,c
 12196  004420                     
 12197                           ;dht11_lib.c: 50:     for(char i = 0; i < 8; i++)
 12198  004420  0E00               	movlw	0
 12199  004422  6E07               	movwf	read_data_dht11@i^0,c
 12200  004424                     l5723:
 12201                           
 12202                           ;dht11_lib.c: 51:     {;dht11_lib.c: 52:         TMR1H = 0;
 12203  004424  0E00               	movlw	0
 12204  004426  6ECF               	movwf	207,c	;volatile
 12205                           
 12206                           ;dht11_lib.c: 53:         TMR1L = 0;
 12207  004428  0E00               	movlw	0
 12208  00442A  6ECE               	movwf	206,c	;volatile
 12209  00442C                     l403:
 12210                           
 12211                           ;dht11_lib.c: 55:         while(!PORTAbits.RA0)
 12212  00442C  A080               	btfss	128,0,c	;volatile
 12213  00442E  EF1B  F022         	goto	u5831
 12214  004432  EF1D  F022         	goto	u5830
 12215  004436                     u5831:
 12216  004436  EF16  F022         	goto	l403
 12217  00443A                     u5830:
 12218  00443A                     
 12219                           ;dht11_lib.c: 58:         if((TMR1L | ((uint16_t)TMR1H << 8)) > 300) {
 12220  00443A  50CF               	movf	207,w,c	;volatile
 12221  00443C  6E04               	movwf	(??_read_data_dht11+1)^0,c
 12222  00443E  6A03               	clrf	??_read_data_dht11^0,c
 12223  004440  50CE               	movf	206,w,c	;volatile
 12224  004442  6E05               	movwf	(??_read_data_dht11+2)^0,c
 12225  004444  6A06               	clrf	(??_read_data_dht11+3)^0,c
 12226  004446  5003               	movf	??_read_data_dht11^0,w,c
 12227  004448  1205               	iorwf	(??_read_data_dht11+2)^0,f,c
 12228  00444A  5004               	movf	(??_read_data_dht11+1)^0,w,c
 12229  00444C  1206               	iorwf	(??_read_data_dht11+3)^0,f,c
 12230  00444E  0E2D               	movlw	45
 12231  004450  5C05               	subwf	(??_read_data_dht11+2)^0,w,c
 12232  004452  0E01               	movlw	1
 12233  004454  5806               	subwfb	(??_read_data_dht11+3)^0,w,c
 12234  004456  A0D8               	btfss	status,0,c
 12235  004458  EF30  F022         	goto	u5841
 12236  00445C  EF32  F022         	goto	u5840
 12237  004460                     u5841:
 12238  004460  EF35  F022         	goto	l5731
 12239  004464                     u5840:
 12240  004464                     l5727:
 12241                           
 12242                           ;dht11_lib.c: 59:             return 1;
 12243  004464  80D8               	bsf	status,0,c
 12244  004466  EF89  F022         	goto	l407
 12245  00446A                     l5731:
 12246                           
 12247                           ;dht11_lib.c: 62:         TMR1H = 0;
 12248  00446A  0E00               	movlw	0
 12249  00446C  6ECF               	movwf	207,c	;volatile
 12250                           
 12251                           ;dht11_lib.c: 63:         TMR1L = 0;
 12252  00446E  0E00               	movlw	0
 12253  004470  6ECE               	movwf	206,c	;volatile
 12254  004472                     l408:
 12255                           
 12256                           ;dht11_lib.c: 65:         while(PORTAbits.RA0)
 12257  004472  B080               	btfsc	128,0,c	;volatile
 12258  004474  EF3E  F022         	goto	u5851
 12259  004478  EF40  F022         	goto	u5850
 12260  00447C                     u5851:
 12261  00447C  EF39  F022         	goto	l408
 12262  004480                     u5850:
 12263  004480                     
 12264                           ;dht11_lib.c: 67:         if((TMR1L | ((uint16_t)TMR1H << 8)) > 500) {
 12265  004480  50CF               	movf	207,w,c	;volatile
 12266  004482  6E04               	movwf	(??_read_data_dht11+1)^0,c
 12267  004484  6A03               	clrf	??_read_data_dht11^0,c
 12268  004486  50CE               	movf	206,w,c	;volatile
 12269  004488  6E05               	movwf	(??_read_data_dht11+2)^0,c
 12270  00448A  6A06               	clrf	(??_read_data_dht11+3)^0,c
 12271  00448C  5003               	movf	??_read_data_dht11^0,w,c
 12272  00448E  1205               	iorwf	(??_read_data_dht11+2)^0,f,c
 12273  004490  5004               	movf	(??_read_data_dht11+1)^0,w,c
 12274  004492  1206               	iorwf	(??_read_data_dht11+3)^0,f,c
 12275  004494  0EF5               	movlw	245
 12276  004496  5C05               	subwf	(??_read_data_dht11+2)^0,w,c
 12277  004498  0E01               	movlw	1
 12278  00449A  5806               	subwfb	(??_read_data_dht11+3)^0,w,c
 12279  00449C  A0D8               	btfss	status,0,c
 12280  00449E  EF53  F022         	goto	u5861
 12281  0044A2  EF55  F022         	goto	u5860
 12282  0044A6                     u5861:
 12283  0044A6  EF57  F022         	goto	l5741
 12284  0044AA                     u5860:
 12285  0044AA  EF32  F022         	goto	l5727
 12286  0044AE                     l5741:
 12287  0044AE  50CF               	movf	207,w,c	;volatile
 12288  0044B0  6E04               	movwf	(??_read_data_dht11+1)^0,c
 12289  0044B2  6A03               	clrf	??_read_data_dht11^0,c
 12290  0044B4  50CE               	movf	206,w,c	;volatile
 12291  0044B6  6E05               	movwf	(??_read_data_dht11+2)^0,c
 12292  0044B8  6A06               	clrf	(??_read_data_dht11+3)^0,c
 12293  0044BA  5003               	movf	??_read_data_dht11^0,w,c
 12294  0044BC  1205               	iorwf	(??_read_data_dht11+2)^0,f,c
 12295  0044BE  5004               	movf	(??_read_data_dht11+1)^0,w,c
 12296  0044C0  1206               	iorwf	(??_read_data_dht11+3)^0,f,c
 12297  0044C2  5006               	movf	(??_read_data_dht11+3)^0,w,c
 12298  0044C4  E109               	bnz	u5870
 12299  0044C6  0EC9               	movlw	201
 12300  0044C8  5C05               	subwf	(??_read_data_dht11+2)^0,w,c
 12301  0044CA  A0D8               	btfss	status,0,c
 12302  0044CC  EF6A  F022         	goto	u5871
 12303  0044D0  EF6C  F022         	goto	u5870
 12304  0044D4                     u5871:
 12305  0044D4  EF7F  F022         	goto	l5745
 12306  0044D8                     u5870:
 12307  0044D8                     
 12308                           ;dht11_lib.c: 72:             *dht_data |= (1 << (7 - i));
 12309  0044D8  5007               	movf	read_data_dht11@i^0,w,c
 12310  0044DA  0807               	sublw	7
 12311  0044DC  6E03               	movwf	??_read_data_dht11^0,c
 12312  0044DE  0E01               	movlw	1
 12313  0044E0  6E04               	movwf	(??_read_data_dht11+1)^0,c
 12314  0044E2  2A03               	incf	??_read_data_dht11^0,f,c
 12315  0044E4  EF76  F022         	goto	u5884
 12316  0044E8                     u5885:
 12317  0044E8  90D8               	bcf	status,0,c
 12318  0044EA  3604               	rlcf	(??_read_data_dht11+1)^0,f,c
 12319  0044EC                     u5884:
 12320  0044EC  2E03               	decfsz	??_read_data_dht11^0,f,c
 12321  0044EE  EF74  F022         	goto	u5885
 12322  0044F2  C001  FFD9         	movff	read_data_dht11@dht_data,fsr2l
 12323  0044F6  C002  FFDA         	movff	read_data_dht11@dht_data+1,fsr2h
 12324  0044FA  5004               	movf	(??_read_data_dht11+1)^0,w,c
 12325  0044FC  12DF               	iorwf	indf2,f,c
 12326  0044FE                     l5745:
 12327                           
 12328                           ;dht11_lib.c: 74:     }
 12329  0044FE  2A07               	incf	read_data_dht11@i^0,f,c
 12330  004500  0E07               	movlw	7
 12331  004502  6407               	cpfsgt	read_data_dht11@i^0,c
 12332  004504  EF86  F022         	goto	u5891
 12333  004508  EF88  F022         	goto	u5890
 12334  00450C                     u5891:
 12335  00450C  EF12  F022         	goto	l5723
 12336  004510                     u5890:
 12337  004510                     
 12338                           ;dht11_lib.c: 75:     return 0;
 12339  004510  90D8               	bcf	status,0,c
 12340  004512                     l407:
 12341  004512  0012               	return		;funcret
 12342  004514                     __end_of_read_data_dht11:
 12343                           	callstack 0
 12344                           
 12345 ;; *************** function _check_response_dht11 *****************
 12346 ;; Defined at:
 12347 ;;		line 19 in file "dht11_lib.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;		None               void
 12354 ;; Registers used:
 12355 ;;		wreg, status,2, status,0
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12363 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12364 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12365 ;;Total ram usage:        4 bytes
 12366 ;; Hardware stack levels used: 1
 12367 ;; Hardware stack levels required when called: 1
 12368 ;; This function calls:
 12369 ;;		Nothing
 12370 ;; This function is called by:
 12371 ;;		_dht11_check_humidity
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           	psect	text42
 12376  004700                     __ptext42:
 12377                           	callstack 0
 12378  004700                     _check_response_dht11:
 12379                           	callstack 28
 12380  004700                     
 12381                           ;dht11_lib.c: 20:     TMR1H = 0;
 12382  004700  0E00               	movlw	0
 12383  004702  6ECF               	movwf	207,c	;volatile
 12384                           
 12385                           ;dht11_lib.c: 21:     TMR1L = 0;
 12386  004704  0E00               	movlw	0
 12387  004706  6ECE               	movwf	206,c	;volatile
 12388  004708                     
 12389                           ;dht11_lib.c: 23:     T1CONbits.TMR1ON = 1;
 12390  004708  80CD               	bsf	205,0,c	;volatile
 12391  00470A                     l384:
 12392  00470A  B080               	btfsc	128,0,c	;volatile
 12393  00470C  EF8A  F023         	goto	u5771
 12394  004710  EF8C  F023         	goto	u5770
 12395  004714                     u5771:
 12396  004714  EFA1  F023         	goto	l5691
 12397  004718                     u5770:
 12398  004718  50CF               	movf	207,w,c	;volatile
 12399  00471A  6E02               	movwf	(??_check_response_dht11+1)^0,c
 12400  00471C  6A01               	clrf	??_check_response_dht11^0,c
 12401  00471E  50CE               	movf	206,w,c	;volatile
 12402  004720  6E03               	movwf	(??_check_response_dht11+2)^0,c
 12403  004722  6A04               	clrf	(??_check_response_dht11+3)^0,c
 12404  004724  5001               	movf	??_check_response_dht11^0,w,c
 12405  004726  1203               	iorwf	(??_check_response_dht11+2)^0,f,c
 12406  004728  5002               	movf	(??_check_response_dht11+1)^0,w,c
 12407  00472A  1204               	iorwf	(??_check_response_dht11+3)^0,f,c
 12408  00472C  0EF4               	movlw	244
 12409  00472E  5C03               	subwf	(??_check_response_dht11+2)^0,w,c
 12410  004730  0E01               	movlw	1
 12411  004732  5804               	subwfb	(??_check_response_dht11+3)^0,w,c
 12412  004734  A0D8               	btfss	status,0,c
 12413  004736  EF9F  F023         	goto	u5781
 12414  00473A  EFA1  F023         	goto	u5780
 12415  00473E                     u5781:
 12416  00473E  EF85  F023         	goto	l384
 12417  004742                     u5780:
 12418  004742                     l5691:
 12419                           
 12420                           ;dht11_lib.c: 27:     if((TMR1L | ((uint16_t)TMR1H << 8)) > 500){
 12421  004742  50CF               	movf	207,w,c	;volatile
 12422  004744  6E02               	movwf	(??_check_response_dht11+1)^0,c
 12423  004746  6A01               	clrf	??_check_response_dht11^0,c
 12424  004748  50CE               	movf	206,w,c	;volatile
 12425  00474A  6E03               	movwf	(??_check_response_dht11+2)^0,c
 12426  00474C  6A04               	clrf	(??_check_response_dht11+3)^0,c
 12427  00474E  5001               	movf	??_check_response_dht11^0,w,c
 12428  004750  1203               	iorwf	(??_check_response_dht11+2)^0,f,c
 12429  004752  5002               	movf	(??_check_response_dht11+1)^0,w,c
 12430  004754  1204               	iorwf	(??_check_response_dht11+3)^0,f,c
 12431  004756  0EF5               	movlw	245
 12432  004758  5C03               	subwf	(??_check_response_dht11+2)^0,w,c
 12433  00475A  0E01               	movlw	1
 12434  00475C  5804               	subwfb	(??_check_response_dht11+3)^0,w,c
 12435  00475E  A0D8               	btfss	status,0,c
 12436  004760  EFB4  F023         	goto	u5791
 12437  004764  EFB6  F023         	goto	u5790
 12438  004768                     u5791:
 12439  004768  EFB9  F023         	goto	l5699
 12440  00476C                     u5790:
 12441  00476C                     l5693:
 12442                           
 12443                           ;dht11_lib.c: 28:         return 0;
 12444  00476C  90D8               	bcf	status,0,c
 12445  00476E  EFF1  F023         	goto	l390
 12446  004772                     l5699:
 12447                           
 12448                           ;dht11_lib.c: 32:     {;dht11_lib.c: 33:         TMR1H = 0;
 12449  004772  0E00               	movlw	0
 12450  004774  6ECF               	movwf	207,c	;volatile
 12451                           
 12452                           ;dht11_lib.c: 34:         TMR1L = 0;
 12453  004776  0E00               	movlw	0
 12454  004778  6ECE               	movwf	206,c	;volatile
 12455  00477A                     l392:
 12456  00477A  A080               	btfss	128,0,c	;volatile
 12457  00477C  EFC2  F023         	goto	u5801
 12458  004780  EFC4  F023         	goto	u5800
 12459  004784                     u5801:
 12460  004784  EFD9  F023         	goto	l5703
 12461  004788                     u5800:
 12462  004788  50CF               	movf	207,w,c	;volatile
 12463  00478A  6E02               	movwf	(??_check_response_dht11+1)^0,c
 12464  00478C  6A01               	clrf	??_check_response_dht11^0,c
 12465  00478E  50CE               	movf	206,w,c	;volatile
 12466  004790  6E03               	movwf	(??_check_response_dht11+2)^0,c
 12467  004792  6A04               	clrf	(??_check_response_dht11+3)^0,c
 12468  004794  5001               	movf	??_check_response_dht11^0,w,c
 12469  004796  1203               	iorwf	(??_check_response_dht11+2)^0,f,c
 12470  004798  5002               	movf	(??_check_response_dht11+1)^0,w,c
 12471  00479A  1204               	iorwf	(??_check_response_dht11+3)^0,f,c
 12472  00479C  0EF4               	movlw	244
 12473  00479E  5C03               	subwf	(??_check_response_dht11+2)^0,w,c
 12474  0047A0  0E01               	movlw	1
 12475  0047A2  5804               	subwfb	(??_check_response_dht11+3)^0,w,c
 12476  0047A4  A0D8               	btfss	status,0,c
 12477  0047A6  EFD7  F023         	goto	u5811
 12478  0047AA  EFD9  F023         	goto	u5810
 12479  0047AE                     u5811:
 12480  0047AE  EFBD  F023         	goto	l392
 12481  0047B2                     u5810:
 12482  0047B2                     l5703:
 12483                           
 12484                           ;dht11_lib.c: 37:         if((TMR1L | ((uint16_t)TMR1H << 8)) > 500){
 12485  0047B2  50CF               	movf	207,w,c	;volatile
 12486  0047B4  6E02               	movwf	(??_check_response_dht11+1)^0,c
 12487  0047B6  6A01               	clrf	??_check_response_dht11^0,c
 12488  0047B8  50CE               	movf	206,w,c	;volatile
 12489  0047BA  6E03               	movwf	(??_check_response_dht11+2)^0,c
 12490  0047BC  6A04               	clrf	(??_check_response_dht11+3)^0,c
 12491  0047BE  5001               	movf	??_check_response_dht11^0,w,c
 12492  0047C0  1203               	iorwf	(??_check_response_dht11+2)^0,f,c
 12493  0047C2  5002               	movf	(??_check_response_dht11+1)^0,w,c
 12494  0047C4  1204               	iorwf	(??_check_response_dht11+3)^0,f,c
 12495  0047C6  0EF5               	movlw	245
 12496  0047C8  5C03               	subwf	(??_check_response_dht11+2)^0,w,c
 12497  0047CA  0E01               	movlw	1
 12498  0047CC  5804               	subwfb	(??_check_response_dht11+3)^0,w,c
 12499  0047CE  A0D8               	btfss	status,0,c
 12500  0047D0  EFEC  F023         	goto	u5821
 12501  0047D4  EFEE  F023         	goto	u5820
 12502  0047D8                     u5821:
 12503  0047D8  EFF0  F023         	goto	l5711
 12504  0047DC                     u5820:
 12505  0047DC  EFB6  F023         	goto	l5693
 12506  0047E0                     l5711:
 12507                           
 12508                           ;dht11_lib.c: 41:             return 1;
 12509  0047E0  80D8               	bsf	status,0,c
 12510  0047E2                     l390:
 12511  0047E2  0012               	return		;funcret
 12512  0047E4                     __end_of_check_response_dht11:
 12513                           	callstack 0
 12514                           
 12515 ;; *************** function ___awmod *****************
 12516 ;; Defined at:
 12517 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;  dividend        2    0[COMRAM] int 
 12520 ;;  divisor         2    2[COMRAM] int 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;  sign            1    5[COMRAM] unsigned char 
 12523 ;;  counter         1    4[COMRAM] unsigned char 
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  2    0[COMRAM] int 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2, status,0
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12533 ;;      Params:         4       0       0       0       0       0       0       0       0
 12534 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12536 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12537 ;;Total ram usage:        6 bytes
 12538 ;; Hardware stack levels used: 1
 12539 ;; Hardware stack levels required when called: 1
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_dht11_check_humidity
 12544 ;;		_efgtoa
 12545 ;; This function uses a non-reentrant model
 12546 ;;
 12547                           
 12548                           	psect	text43
 12549  004CAA                     __ptext43:
 12550                           	callstack 0
 12551  004CAA                     ___awmod:
 12552                           	callstack 25
 12553  004CAA  0E00               	movlw	0
 12554  004CAC  6E06               	movwf	___awmod@sign^0,c
 12555  004CAE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12556  004CB0  EF5E  F026         	goto	u4300
 12557  004CB4  EF5C  F026         	goto	u4301
 12558  004CB8                     u4301:
 12559  004CB8  EF64  F026         	goto	l4727
 12560  004CBC                     u4300:
 12561  004CBC  6C01               	negf	___awmod@dividend^0,c
 12562  004CBE  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12563  004CC0  B0D8               	btfsc	status,0,c
 12564  004CC2  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12565  004CC4  0E01               	movlw	1
 12566  004CC6  6E06               	movwf	___awmod@sign^0,c
 12567  004CC8                     l4727:
 12568  004CC8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12569  004CCA  EF6B  F026         	goto	u4310
 12570  004CCE  EF69  F026         	goto	u4311
 12571  004CD2                     u4311:
 12572  004CD2  EF6F  F026         	goto	l4731
 12573  004CD6                     u4310:
 12574  004CD6  6C03               	negf	___awmod@divisor^0,c
 12575  004CD8  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12576  004CDA  B0D8               	btfsc	status,0,c
 12577  004CDC  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12578  004CDE                     l4731:
 12579  004CDE  5003               	movf	___awmod@divisor^0,w,c
 12580  004CE0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12581  004CE2  B4D8               	btfsc	status,2,c
 12582  004CE4  EF76  F026         	goto	u4321
 12583  004CE8  EF78  F026         	goto	u4320
 12584  004CEC                     u4321:
 12585  004CEC  EF9C  F026         	goto	l4747
 12586  004CF0                     u4320:
 12587  004CF0  0E01               	movlw	1
 12588  004CF2  6E05               	movwf	___awmod@counter^0,c
 12589  004CF4  EF80  F026         	goto	l4737
 12590  004CF8                     l4735:
 12591  004CF8  90D8               	bcf	status,0,c
 12592  004CFA  3603               	rlcf	___awmod@divisor^0,f,c
 12593  004CFC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12594  004CFE  2A05               	incf	___awmod@counter^0,f,c
 12595  004D00                     l4737:
 12596  004D00  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12597  004D02  EF85  F026         	goto	u4331
 12598  004D06  EF87  F026         	goto	u4330
 12599  004D0A                     u4331:
 12600  004D0A  EF7C  F026         	goto	l4735
 12601  004D0E                     u4330:
 12602  004D0E                     l4739:
 12603  004D0E  5003               	movf	___awmod@divisor^0,w,c
 12604  004D10  5C01               	subwf	___awmod@dividend^0,w,c
 12605  004D12  5004               	movf	(___awmod@divisor+1)^0,w,c
 12606  004D14  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12607  004D16  A0D8               	btfss	status,0,c
 12608  004D18  EF90  F026         	goto	u4341
 12609  004D1C  EF92  F026         	goto	u4340
 12610  004D20                     u4341:
 12611  004D20  EF96  F026         	goto	l4743
 12612  004D24                     u4340:
 12613  004D24  5003               	movf	___awmod@divisor^0,w,c
 12614  004D26  5E01               	subwf	___awmod@dividend^0,f,c
 12615  004D28  5004               	movf	(___awmod@divisor+1)^0,w,c
 12616  004D2A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12617  004D2C                     l4743:
 12618  004D2C  90D8               	bcf	status,0,c
 12619  004D2E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12620  004D30  3203               	rrcf	___awmod@divisor^0,f,c
 12621  004D32  2E05               	decfsz	___awmod@counter^0,f,c
 12622  004D34  EF87  F026         	goto	l4739
 12623  004D38                     l4747:
 12624  004D38  5006               	movf	___awmod@sign^0,w,c
 12625  004D3A  B4D8               	btfsc	status,2,c
 12626  004D3C  EFA2  F026         	goto	u4351
 12627  004D40  EFA4  F026         	goto	u4350
 12628  004D44                     u4351:
 12629  004D44  EFA8  F026         	goto	l4751
 12630  004D48                     u4350:
 12631  004D48  6C01               	negf	___awmod@dividend^0,c
 12632  004D4A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12633  004D4C  B0D8               	btfsc	status,0,c
 12634  004D4E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12635  004D50                     l4751:
 12636  004D50  C001  F001         	movff	___awmod@dividend,?___awmod
 12637  004D54  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12638  004D58  0012               	return		;funcret
 12639  004D5A                     __end_of___awmod:
 12640                           	callstack 0
 12641                           
 12642 ;; *************** function ___awdiv *****************
 12643 ;; Defined at:
 12644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  dividend        2    0[COMRAM] int 
 12647 ;;  divisor         2    2[COMRAM] int 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;  quotient        2    6[COMRAM] int 
 12650 ;;  sign            1    5[COMRAM] unsigned char 
 12651 ;;  counter         1    4[COMRAM] unsigned char 
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  2    0[COMRAM] int 
 12654 ;; Registers used:
 12655 ;;		wreg, status,2, status,0
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12661 ;;      Params:         4       0       0       0       0       0       0       0       0
 12662 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12664 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12665 ;;Total ram usage:        8 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; Hardware stack levels required when called: 1
 12668 ;; This function calls:
 12669 ;;		Nothing
 12670 ;; This function is called by:
 12671 ;;		_dht11_check_humidity
 12672 ;;		_efgtoa
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text44
 12677  004B30                     __ptext44:
 12678                           	callstack 0
 12679  004B30                     ___awdiv:
 12680                           	callstack 25
 12681  004B30  0E00               	movlw	0
 12682  004B32  6E06               	movwf	___awdiv@sign^0,c
 12683  004B34  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12684  004B36  EFA1  F025         	goto	u4240
 12685  004B3A  EF9F  F025         	goto	u4241
 12686  004B3E                     u4241:
 12687  004B3E  EFA7  F025         	goto	l4683
 12688  004B42                     u4240:
 12689  004B42  6C03               	negf	___awdiv@divisor^0,c
 12690  004B44  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12691  004B46  B0D8               	btfsc	status,0,c
 12692  004B48  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12693  004B4A  0E01               	movlw	1
 12694  004B4C  6E06               	movwf	___awdiv@sign^0,c
 12695  004B4E                     l4683:
 12696  004B4E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12697  004B50  EFAE  F025         	goto	u4250
 12698  004B54  EFAC  F025         	goto	u4251
 12699  004B58                     u4251:
 12700  004B58  EFB4  F025         	goto	l4689
 12701  004B5C                     u4250:
 12702  004B5C  6C01               	negf	___awdiv@dividend^0,c
 12703  004B5E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12704  004B60  B0D8               	btfsc	status,0,c
 12705  004B62  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12706  004B64  0E01               	movlw	1
 12707  004B66  1A06               	xorwf	___awdiv@sign^0,f,c
 12708  004B68                     l4689:
 12709  004B68  0E00               	movlw	0
 12710  004B6A  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12711  004B6C  0E00               	movlw	0
 12712  004B6E  6E07               	movwf	___awdiv@quotient^0,c
 12713  004B70  5003               	movf	___awdiv@divisor^0,w,c
 12714  004B72  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12715  004B74  B4D8               	btfsc	status,2,c
 12716  004B76  EFBF  F025         	goto	u4261
 12717  004B7A  EFC1  F025         	goto	u4260
 12718  004B7E                     u4261:
 12719  004B7E  EFE9  F025         	goto	l4711
 12720  004B82                     u4260:
 12721  004B82  0E01               	movlw	1
 12722  004B84  6E05               	movwf	___awdiv@counter^0,c
 12723  004B86  EFC9  F025         	goto	l4697
 12724  004B8A                     l4695:
 12725  004B8A  90D8               	bcf	status,0,c
 12726  004B8C  3603               	rlcf	___awdiv@divisor^0,f,c
 12727  004B8E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12728  004B90  2A05               	incf	___awdiv@counter^0,f,c
 12729  004B92                     l4697:
 12730  004B92  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12731  004B94  EFCE  F025         	goto	u4271
 12732  004B98  EFD0  F025         	goto	u4270
 12733  004B9C                     u4271:
 12734  004B9C  EFC5  F025         	goto	l4695
 12735  004BA0                     u4270:
 12736  004BA0                     l4699:
 12737  004BA0  90D8               	bcf	status,0,c
 12738  004BA2  3607               	rlcf	___awdiv@quotient^0,f,c
 12739  004BA4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12740  004BA6  5003               	movf	___awdiv@divisor^0,w,c
 12741  004BA8  5C01               	subwf	___awdiv@dividend^0,w,c
 12742  004BAA  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12743  004BAC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12744  004BAE  A0D8               	btfss	status,0,c
 12745  004BB0  EFDC  F025         	goto	u4281
 12746  004BB4  EFDE  F025         	goto	u4280
 12747  004BB8                     u4281:
 12748  004BB8  EFE3  F025         	goto	l4707
 12749  004BBC                     u4280:
 12750  004BBC  5003               	movf	___awdiv@divisor^0,w,c
 12751  004BBE  5E01               	subwf	___awdiv@dividend^0,f,c
 12752  004BC0  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12753  004BC2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12754  004BC4  8007               	bsf	___awdiv@quotient^0,0,c
 12755  004BC6                     l4707:
 12756  004BC6  90D8               	bcf	status,0,c
 12757  004BC8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12758  004BCA  3203               	rrcf	___awdiv@divisor^0,f,c
 12759  004BCC  2E05               	decfsz	___awdiv@counter^0,f,c
 12760  004BCE  EFD0  F025         	goto	l4699
 12761  004BD2                     l4711:
 12762  004BD2  5006               	movf	___awdiv@sign^0,w,c
 12763  004BD4  B4D8               	btfsc	status,2,c
 12764  004BD6  EFEF  F025         	goto	u4291
 12765  004BDA  EFF1  F025         	goto	u4290
 12766  004BDE                     u4291:
 12767  004BDE  EFF5  F025         	goto	l4715
 12768  004BE2                     u4290:
 12769  004BE2  6C07               	negf	___awdiv@quotient^0,c
 12770  004BE4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12771  004BE6  B0D8               	btfsc	status,0,c
 12772  004BE8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12773  004BEA                     l4715:
 12774  004BEA  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12775  004BEE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12776  004BF2  0012               	return		;funcret
 12777  004BF4                     __end_of___awdiv:
 12778                           	callstack 0
 12779                           
 12780 ;; *************** function _UART_Print *****************
 12781 ;; Defined at:
 12782 ;;		line 42 in file "usart_lib.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  data            2    1[COMRAM] PTR unsigned char 
 12785 ;;		 -> STR_43(30), STR_42(18), STR_41(12), STR_40(5), 
 12786 ;;		 -> STR_13(3), STR_5(21), STR_4(19), humidity(19), 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;  i               1    5[COMRAM] unsigned char 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12798 ;;      Params:         2       0       0       0       0       0       0       0       0
 12799 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12800 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12801 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12802 ;;Total ram usage:        5 bytes
 12803 ;; Hardware stack levels used: 1
 12804 ;; Hardware stack levels required when called: 2
 12805 ;; This function calls:
 12806 ;;		_putch
 12807 ;; This function is called by:
 12808 ;;		_main
 12809 ;;		_dht11_check_humidity
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text45
 12814  004F30                     __ptext45:
 12815                           	callstack 0
 12816  004F30                     _UART_Print:
 12817                           	callstack 27
 12818  004F30                     
 12819                           ;usart_lib.c: 43:   uint8_t i = 0;
 12820  004F30  0E00               	movlw	0
 12821  004F32  6E06               	movwf	UART_Print@i^0,c
 12822                           
 12823                           ;usart_lib.c: 44:   while (data[i] != '\0')
 12824  004F34  EFB5  F027         	goto	l5535
 12825  004F38                     l5531:
 12826                           
 12827                           ;usart_lib.c: 45:     putch(data[i++]);
 12828  004F38  5006               	movf	UART_Print@i^0,w,c
 12829  004F3A  2402               	addwf	UART_Print@data^0,w,c
 12830  004F3C  6E04               	movwf	??_UART_Print^0,c
 12831  004F3E  0E00               	movlw	0
 12832  004F40  2003               	addwfc	(UART_Print@data+1)^0,w,c
 12833  004F42  6E05               	movwf	(??_UART_Print+1)^0,c
 12834  004F44  C004  FFF6         	movff	??_UART_Print,tblptrl
 12835  004F48  C005  FFF7         	movff	??_UART_Print+1,tblptrh
 12836  004F4C  6AF8               	clrf	tblptru,c
 12837  004F4E  0E07               	movlw	(high __ramtop+-1)
 12838  004F50  64F7               	cpfsgt	tblptrh,c
 12839  004F52  D003               	bra	u5727
 12840  004F54  0008               	tblrd		*
 12841  004F56  50F5               	movf	tablat,w,c
 12842  004F58  D005               	bra	u5720
 12843  004F5A                     u5727:
 12844  004F5A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12845  004F5E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12846  004F62  50E7               	movf	indf1,w,c
 12847  004F64                     u5720:
 12848  004F64  EC78  F02C         	call	_putch
 12849  004F68  2A06               	incf	UART_Print@i^0,f,c
 12850  004F6A                     l5535:
 12851                           
 12852                           ;usart_lib.c: 44:   while (data[i] != '\0')
 12853  004F6A  5006               	movf	UART_Print@i^0,w,c
 12854  004F6C  2402               	addwf	UART_Print@data^0,w,c
 12855  004F6E  6E04               	movwf	??_UART_Print^0,c
 12856  004F70  0E00               	movlw	0
 12857  004F72  2003               	addwfc	(UART_Print@data+1)^0,w,c
 12858  004F74  6E05               	movwf	(??_UART_Print+1)^0,c
 12859  004F76  C004  FFF6         	movff	??_UART_Print,tblptrl
 12860  004F7A  C005  FFF7         	movff	??_UART_Print+1,tblptrh
 12861  004F7E  6AF8               	clrf	tblptru,c
 12862  004F80  0E07               	movlw	(high __ramtop+-1)
 12863  004F82  64F7               	cpfsgt	tblptrh,c
 12864  004F84  D003               	bra	u5737
 12865  004F86  0008               	tblrd		*
 12866  004F88  50F5               	movf	tablat,w,c
 12867  004F8A  D005               	bra	u5730
 12868  004F8C                     u5737:
 12869  004F8C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12870  004F90  CFF7 FFE2          	movff	tblptrh,fsr1h
 12871  004F94  50E7               	movf	indf1,w,c
 12872  004F96                     u5730:
 12873  004F96  0900               	iorlw	0
 12874  004F98  A4D8               	btfss	status,2,c
 12875  004F9A  EFD1  F027         	goto	u5741
 12876  004F9E  EFD3  F027         	goto	u5740
 12877  004FA2                     u5741:
 12878  004FA2  EF9C  F027         	goto	l5531
 12879  004FA6                     u5740:
 12880  004FA6  0012               	return		;funcret
 12881  004FA8                     __end_of_UART_Print:
 12882                           	callstack 0
 12883                           
 12884 ;; *************** function _putch *****************
 12885 ;; Defined at:
 12886 ;;		line 23 in file "usart_lib.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  data            1    wreg     unsigned char 
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;  data            1    0[COMRAM] unsigned char 
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		wreg
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12900 ;;      Params:         0       0       0       0       0       0       0       0       0
 12901 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12902 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12903 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12904 ;;Total ram usage:        1 bytes
 12905 ;; Hardware stack levels used: 1
 12906 ;; Hardware stack levels required when called: 1
 12907 ;; This function calls:
 12908 ;;		Nothing
 12909 ;; This function is called by:
 12910 ;;		_UART_Print
 12911 ;;		_fputc
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915                           	psect	text46
 12916  0058F0                     __ptext46:
 12917                           	callstack 0
 12918  0058F0                     _putch:
 12919                           	callstack 24
 12920                           
 12921                           ;incstack = 0
 12922                           ;putch@data stored from wreg
 12923  0058F0  6E01               	movwf	putch@data^0,c
 12924  0058F2                     l26:
 12925                           
 12926                           ;usart_lib.c: 24:     while (!PIR1bits.TXIF)
 12927  0058F2  A89E               	btfss	158,4,c	;volatile
 12928  0058F4  EF7E  F02C         	goto	u3301
 12929  0058F8  EF80  F02C         	goto	u3300
 12930  0058FC                     u3301:
 12931  0058FC  EF79  F02C         	goto	l26
 12932  005900                     u3300:
 12933  005900                     
 12934                           ;usart_lib.c: 26:     TXREG = data;
 12935  005900  C001  FFAD         	movff	putch@data,4013	;volatile
 12936  005904  0012               	return		;funcret
 12937  005906                     __end_of_putch:
 12938                           	callstack 0
 12939                           
 12940 ;; *************** function _USART_Init *****************
 12941 ;; Defined at:
 12942 ;;		line 3 in file "usart_lib.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  BAUD            4   14[COMRAM] long 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      void 
 12949 ;; Registers used:
 12950 ;;		wreg, status,2, status,0, cstack
 12951 ;; Tracked objects:
 12952 ;;		On entry : 0/0
 12953 ;;		On exit  : 0/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12956 ;;      Params:         4       0       0       0       0       0       0       0       0
 12957 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12959 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12960 ;;Total ram usage:        8 bytes
 12961 ;; Hardware stack levels used: 1
 12962 ;; Hardware stack levels required when called: 2
 12963 ;; This function calls:
 12964 ;;		___aldiv
 12965 ;; This function is called by:
 12966 ;;		_main
 12967 ;; This function uses a non-reentrant model
 12968 ;;
 12969                           
 12970                           	psect	text47
 12971  004FA8                     __ptext47:
 12972                           	callstack 0
 12973  004FA8                     _USART_Init:
 12974                           	callstack 28
 12975  004FA8                     
 12976                           ;usart_lib.c: 5:     TRISCbits.RC6 = 0;
 12977  004FA8  9C94               	bcf	148,6,c	;volatile
 12978                           
 12979                           ;usart_lib.c: 6:     TRISCbits.RC7 = 1;
 12980  004FAA  8E94               	bsf	148,7,c	;volatile
 12981  004FAC                     
 12982                           ;usart_lib.c: 9:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
 12983  004FAC  C00F  F005         	movff	USART_Init@BAUD,___aldiv@divisor
 12984  004FB0  C010  F006         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
 12985  004FB4  C011  F007         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
 12986  004FB8  C012  F008         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
 12987  004FBC  0E00               	movlw	0
 12988  004FBE  6E01               	movwf	___aldiv@dividend^0,c
 12989  004FC0  0E2D               	movlw	45
 12990  004FC2  6E02               	movwf	(___aldiv@dividend+1)^0,c
 12991  004FC4  0E31               	movlw	49
 12992  004FC6  6E03               	movwf	(___aldiv@dividend+2)^0,c
 12993  004FC8  0E01               	movlw	1
 12994  004FCA  6E04               	movwf	(___aldiv@dividend+3)^0,c
 12995  004FCC  EC7F  F020         	call	___aldiv	;wreg free
 12996  004FD0  C001  F013         	movff	?___aldiv,_USART_Init$2563
 12997  004FD4  C002  F014         	movff	?___aldiv+1,_USART_Init$2563+1
 12998  004FD8  C003  F015         	movff	?___aldiv+2,_USART_Init$2563+2
 12999  004FDC  C004  F016         	movff	?___aldiv+3,_USART_Init$2563+3
 13000                           
 13001                           ;usart_lib.c: 9:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
 13002  004FE0  C013  F001         	movff	_USART_Init$2563,___aldiv@dividend
 13003  004FE4  C014  F002         	movff	_USART_Init$2563+1,___aldiv@dividend+1
 13004  004FE8  C015  F003         	movff	_USART_Init$2563+2,___aldiv@dividend+2
 13005  004FEC  C016  F004         	movff	_USART_Init$2563+3,___aldiv@dividend+3
 13006  004FF0  0E40               	movlw	64
 13007  004FF2  6E05               	movwf	___aldiv@divisor^0,c
 13008  004FF4  0E00               	movlw	0
 13009  004FF6  6E06               	movwf	(___aldiv@divisor+1)^0,c
 13010  004FF8  0E00               	movlw	0
 13011  004FFA  6E07               	movwf	(___aldiv@divisor+2)^0,c
 13012  004FFC  0E00               	movlw	0
 13013  004FFE  6E08               	movwf	(___aldiv@divisor+3)^0,c
 13014  005000  EC7F  F020         	call	___aldiv	;wreg free
 13015  005004  0401               	decf	?___aldiv^0,w,c
 13016  005006  6EAF               	movwf	175,c	;volatile
 13017  005008                     
 13018                           ;usart_lib.c: 12:     TXSTAbits.BRGH = 0;
 13019  005008  94AC               	bcf	172,2,c	;volatile
 13020  00500A                     
 13021                           ;usart_lib.c: 13:     TXSTAbits.SYNC = 0;
 13022  00500A  98AC               	bcf	172,4,c	;volatile
 13023  00500C                     
 13024                           ;usart_lib.c: 14:     RCSTAbits.SPEN = 1;
 13025  00500C  8EAB               	bsf	171,7,c	;volatile
 13026  00500E                     
 13027                           ;usart_lib.c: 15:     TXSTAbits.TXEN = 1;
 13028  00500E  8AAC               	bsf	172,5,c	;volatile
 13029  005010                     
 13030                           ;usart_lib.c: 17:     TXSTAbits.TX9 = 0;
 13031  005010  9CAC               	bcf	172,6,c	;volatile
 13032  005012                     
 13033                           ;usart_lib.c: 19:     RCSTAbits.RC9 = 0;
 13034  005012  9CAB               	bcf	171,6,c	;volatile
 13035  005014                     
 13036                           ;usart_lib.c: 20:     RCSTAbits.CREN = 1;
 13037  005014  88AB               	bsf	171,4,c	;volatile
 13038  005016  0012               	return		;funcret
 13039  005018                     __end_of_USART_Init:
 13040                           	callstack 0
 13041                           
 13042 ;; *************** function _LCD_Print *****************
 13043 ;; Defined at:
 13044 ;;		line 62 in file "lcd_lib.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;  LCD_Str         2    3[COMRAM] PTR unsigned char 
 13047 ;;		 -> STR_39(17), STR_38(17), lcd_text(18), description(20), 
 13048 ;;		 -> STR_3(17), STR_2(17), 
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;  i               1    8[COMRAM] unsigned char 
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13060 ;;      Params:         2       0       0       0       0       0       0       0       0
 13061 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13062 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13063 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13064 ;;Total ram usage:        6 bytes
 13065 ;; Hardware stack levels used: 1
 13066 ;; Hardware stack levels required when called: 5
 13067 ;; This function calls:
 13068 ;;		_LCD_Write_Nibble
 13069 ;; This function is called by:
 13070 ;;		_main
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text48
 13075  004BF4                     __ptext48:
 13076                           	callstack 0
 13077  004BF4                     _LCD_Print:
 13078                           	callstack 25
 13079  004BF4                     
 13080                           ;lcd_lib.c: 62: void LCD_Print(char* LCD_Str);lcd_lib.c: 63: {;lcd_lib.c: 64:   uint8_t 
      +                          i = 0;
 13081  004BF4  0E00               	movlw	0
 13082  004BF6  6E09               	movwf	LCD_Print@i^0,c
 13083  004BF8                     
 13084                           ;lcd_lib.c: 65:   RS = 1;
 13085  004BF8  0100               	movlb	0	; () banked
 13086  004BFA  81FE               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
 13087                           
 13088                           ;lcd_lib.c: 66:   while(LCD_Str[i] != '\0')
 13089  004BFC  EF36  F026         	goto	l6021
 13090  004C00                     l6017:
 13091                           
 13092                           ;lcd_lib.c: 67:   {;lcd_lib.c: 68:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
 13093  004C00  5009               	movf	LCD_Print@i^0,w,c
 13094  004C02  2404               	addwf	LCD_Print@LCD_Str^0,w,c
 13095  004C04  6E06               	movwf	??_LCD_Print^0,c
 13096  004C06  0E00               	movlw	0
 13097  004C08  2005               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 13098  004C0A  6E07               	movwf	(??_LCD_Print+1)^0,c
 13099  004C0C  C006  FFF6         	movff	??_LCD_Print,tblptrl
 13100  004C10  C007  FFF7         	movff	??_LCD_Print+1,tblptrh
 13101  004C14  6AF8               	clrf	tblptru,c
 13102  004C16  0E07               	movlw	(high __ramtop+-1)
 13103  004C18  64F7               	cpfsgt	tblptrh,c
 13104  004C1A  D003               	bra	u6187
 13105  004C1C  0008               	tblrd		*
 13106  004C1E  50F5               	movf	tablat,w,c
 13107  004C20  D005               	bra	u6180
 13108  004C22                     u6187:
 13109  004C22  CFF6 FFE1          	movff	tblptrl,fsr1l
 13110  004C26  CFF7 FFE2          	movff	tblptrh,fsr1h
 13111  004C2A  50E7               	movf	indf1,w,c
 13112  004C2C                     u6180:
 13113  004C2C  0BF0               	andlw	240
 13114  004C2E  EC03  F02B         	call	_LCD_Write_Nibble
 13115                           
 13116                           ;lcd_lib.c: 69:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
 13117  004C32  5009               	movf	LCD_Print@i^0,w,c
 13118  004C34  2404               	addwf	LCD_Print@LCD_Str^0,w,c
 13119  004C36  6E06               	movwf	??_LCD_Print^0,c
 13120  004C38  0E00               	movlw	0
 13121  004C3A  2005               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 13122  004C3C  6E07               	movwf	(??_LCD_Print+1)^0,c
 13123  004C3E  C006  FFF6         	movff	??_LCD_Print,tblptrl
 13124  004C42  C007  FFF7         	movff	??_LCD_Print+1,tblptrh
 13125  004C46  6AF8               	clrf	tblptru,c
 13126  004C48  0E07               	movlw	(high __ramtop+-1)
 13127  004C4A  64F7               	cpfsgt	tblptrh,c
 13128  004C4C  D003               	bra	u6197
 13129  004C4E  0008               	tblrd		*
 13130  004C50  50F5               	movf	tablat,w,c
 13131  004C52  D005               	bra	u6190
 13132  004C54                     u6197:
 13133  004C54  CFF6 FFE1          	movff	tblptrl,fsr1l
 13134  004C58  CFF7 FFE2          	movff	tblptrh,fsr1h
 13135  004C5C  50E7               	movf	indf1,w,c
 13136  004C5E                     u6190:
 13137  004C5E  6E08               	movwf	(??_LCD_Print+2)^0,c
 13138  004C60  3808               	swapf	(??_LCD_Print+2)^0,w,c
 13139  004C62  0BF0               	andlw	240
 13140  004C64  0BF0               	andlw	240
 13141  004C66  EC03  F02B         	call	_LCD_Write_Nibble
 13142  004C6A  2A09               	incf	LCD_Print@i^0,f,c
 13143  004C6C                     l6021:
 13144                           
 13145                           ;lcd_lib.c: 66:   while(LCD_Str[i] != '\0')
 13146  004C6C  5009               	movf	LCD_Print@i^0,w,c
 13147  004C6E  2404               	addwf	LCD_Print@LCD_Str^0,w,c
 13148  004C70  6E06               	movwf	??_LCD_Print^0,c
 13149  004C72  0E00               	movlw	0
 13150  004C74  2005               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 13151  004C76  6E07               	movwf	(??_LCD_Print+1)^0,c
 13152  004C78  C006  FFF6         	movff	??_LCD_Print,tblptrl
 13153  004C7C  C007  FFF7         	movff	??_LCD_Print+1,tblptrh
 13154  004C80  6AF8               	clrf	tblptru,c
 13155  004C82  0E07               	movlw	(high __ramtop+-1)
 13156  004C84  64F7               	cpfsgt	tblptrh,c
 13157  004C86  D003               	bra	u6207
 13158  004C88  0008               	tblrd		*
 13159  004C8A  50F5               	movf	tablat,w,c
 13160  004C8C  D005               	bra	u6200
 13161  004C8E                     u6207:
 13162  004C8E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13163  004C92  CFF7 FFE2          	movff	tblptrh,fsr1h
 13164  004C96  50E7               	movf	indf1,w,c
 13165  004C98                     u6200:
 13166  004C98  0900               	iorlw	0
 13167  004C9A  A4D8               	btfss	status,2,c
 13168  004C9C  EF52  F026         	goto	u6211
 13169  004CA0  EF54  F026         	goto	u6210
 13170  004CA4                     u6211:
 13171  004CA4  EF00  F026         	goto	l6017
 13172  004CA8                     u6210:
 13173  004CA8  0012               	return		;funcret
 13174  004CAA                     __end_of_LCD_Print:
 13175                           	callstack 0
 13176                           
 13177 ;; *************** function _LCD_Goto *****************
 13178 ;; Defined at:
 13179 ;;		line 36 in file "lcd_lib.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  col             1    wreg     unsigned char 
 13182 ;;  row             1    5[COMRAM] unsigned char 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  col             1    8[COMRAM] unsigned char 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0, cstack
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13194 ;;      Params:         1       0       0       0       0       0       0       0       0
 13195 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13196 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13197 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13198 ;;Total ram usage:        4 bytes
 13199 ;; Hardware stack levels used: 1
 13200 ;; Hardware stack levels required when called: 6
 13201 ;; This function calls:
 13202 ;;		_LCD_Cmd
 13203 ;; This function is called by:
 13204 ;;		_main
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text49
 13209  0050F2                     __ptext49:
 13210                           	callstack 0
 13211  0050F2                     _LCD_Goto:
 13212                           	callstack 24
 13213                           
 13214                           ;incstack = 0
 13215                           ;LCD_Goto@col stored from wreg
 13216  0050F2  6E09               	movwf	LCD_Goto@col^0,c
 13217  0050F4                     
 13218                           ;lcd_lib.c: 36: void LCD_Goto(uint8_t col, uint8_t row);lcd_lib.c: 37: {;lcd_lib.c: 38: 
      +                            switch(row)
 13219  0050F4  EF94  F028         	goto	l6007
 13220  0050F8                     l5999:
 13221                           
 13222                           ;lcd_lib.c: 41:       LCD_Cmd(0xC0 + col - 1);
 13223  0050F8  5009               	movf	LCD_Goto@col^0,w,c
 13224  0050FA  0FBF               	addlw	191
 13225  0050FC  EC55  F02A         	call	_LCD_Cmd
 13226                           
 13227                           ;lcd_lib.c: 42:       break;
 13228  005100  EFAD  F028         	goto	l518
 13229  005104                     l6001:
 13230                           
 13231                           ;lcd_lib.c: 44:       LCD_Cmd(0x94 + col - 1);
 13232  005104  5009               	movf	LCD_Goto@col^0,w,c
 13233  005106  0F93               	addlw	147
 13234  005108  EC55  F02A         	call	_LCD_Cmd
 13235                           
 13236                           ;lcd_lib.c: 45:       break;
 13237  00510C  EFAD  F028         	goto	l518
 13238  005110                     l6003:
 13239                           
 13240                           ;lcd_lib.c: 47:       LCD_Cmd(0xD4 + col - 1);
 13241  005110  5009               	movf	LCD_Goto@col^0,w,c
 13242  005112  0FD3               	addlw	211
 13243  005114  EC55  F02A         	call	_LCD_Cmd
 13244                           
 13245                           ;lcd_lib.c: 48:     break;
 13246  005118  EFAD  F028         	goto	l518
 13247  00511C                     l6005:
 13248                           
 13249                           ;lcd_lib.c: 50:       LCD_Cmd(0x80 + col - 1);
 13250  00511C  5009               	movf	LCD_Goto@col^0,w,c
 13251  00511E  0F7F               	addlw	127
 13252  005120  EC55  F02A         	call	_LCD_Cmd
 13253                           
 13254                           ;lcd_lib.c: 51:   }
 13255  005124  EFAD  F028         	goto	l518
 13256  005128                     l6007:
 13257  005128  5006               	movf	LCD_Goto@row^0,w,c
 13258  00512A  6E07               	movwf	??_LCD_Goto^0,c
 13259  00512C  6A08               	clrf	(??_LCD_Goto+1)^0,c
 13260                           
 13261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13262                           ; Switch size 1, requested type "simple"
 13263                           ; Number of cases is 1, Range of values is 0 to 0
 13264                           ; switch strategies available:
 13265                           ; Name         Instructions Cycles
 13266                           ; simple_byte            4     3 (average)
 13267                           ;	Chosen strategy is simple_byte
 13268  00512E  5008               	movf	(??_LCD_Goto+1)^0,w,c
 13269  005130  0A00               	xorlw	0	; case 0
 13270  005132  B4D8               	btfsc	status,2,c
 13271  005134  EF9E  F028         	goto	l6717
 13272  005138  EF8E  F028         	goto	l6005
 13273  00513C                     l6717:
 13274                           
 13275                           ; Switch size 1, requested type "simple"
 13276                           ; Number of cases is 3, Range of values is 2 to 4
 13277                           ; switch strategies available:
 13278                           ; Name         Instructions Cycles
 13279                           ; simple_byte           10     6 (average)
 13280                           ;	Chosen strategy is simple_byte
 13281  00513C  5007               	movf	??_LCD_Goto^0,w,c
 13282  00513E  0A02               	xorlw	2	; case 2
 13283  005140  B4D8               	btfsc	status,2,c
 13284  005142  EF7C  F028         	goto	l5999
 13285  005146  0A01               	xorlw	1	; case 3
 13286  005148  B4D8               	btfsc	status,2,c
 13287  00514A  EF82  F028         	goto	l6001
 13288  00514E  0A07               	xorlw	7	; case 4
 13289  005150  B4D8               	btfsc	status,2,c
 13290  005152  EF88  F028         	goto	l6003
 13291  005156  EF8E  F028         	goto	l6005
 13292  00515A                     l518:
 13293  00515A  0012               	return		;funcret
 13294  00515C                     __end_of_LCD_Goto:
 13295                           	callstack 0
 13296                           
 13297 ;; *************** function _LCD_Begin *****************
 13298 ;; Defined at:
 13299 ;;		line 73 in file "lcd_lib.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  address         1    wreg     unsigned char 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  address         1    7[COMRAM] unsigned char 
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0
 13314 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13315 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13316 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13317 ;;Total ram usage:        3 bytes
 13318 ;; Hardware stack levels used: 1
 13319 ;; Hardware stack levels required when called: 6
 13320 ;; This function calls:
 13321 ;;		_Expander_Write
 13322 ;;		_LCD_Cmd
 13323 ;; This function is called by:
 13324 ;;		_main
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text50
 13329  004612                     __ptext50:
 13330                           	callstack 0
 13331  004612                     _LCD_Begin:
 13332                           	callstack 24
 13333                           
 13334                           ;incstack = 0
 13335                           ;LCD_Begin@address stored from wreg
 13336  004612  6E08               	movwf	LCD_Begin@address^0,c
 13337  004614                     
 13338                           ;lcd_lib.c: 73: void LCD_Begin(uint8_t address);lcd_lib.c: 74: {;lcd_lib.c: 75:   i2c_ad
      +                          dr = address;
 13339  004614  C008  F0EB         	movff	LCD_Begin@address,_i2c_addr
 13340  004618                     
 13341                           ;lcd_lib.c: 76:   Expander_Write(0);
 13342  004618  0E00               	movlw	0
 13343  00461A  EC40  F02C         	call	_Expander_Write
 13344  00461E                     
 13345                           ;lcd_lib.c: 78:   _delay((unsigned long)((40)*(20000000L/4000.0)));
 13346  00461E  0E02               	movlw	2
 13347  004620  6E07               	movwf	(??_LCD_Begin+1)^0,c
 13348  004622  0E04               	movlw	4
 13349  004624  6E06               	movwf	??_LCD_Begin^0,c
 13350  004626  0EBA               	movlw	186
 13351  004628                     u6817:
 13352  004628  2EE8               	decfsz	wreg,f,c
 13353  00462A  D7FE               	bra	u6817
 13354  00462C  2E06               	decfsz	??_LCD_Begin^0,f,c
 13355  00462E  D7FC               	bra	u6817
 13356  004630  2E07               	decfsz	(??_LCD_Begin+1)^0,f,c
 13357  004632  D7FA               	bra	u6817
 13358  004634  D000               	nop2	
 13359                           
 13360                           ;lcd_lib.c: 79:   LCD_Cmd(3);
 13361  004636  0E03               	movlw	3
 13362  004638  EC55  F02A         	call	_LCD_Cmd
 13363  00463C                     
 13364                           ;lcd_lib.c: 80:   _delay((unsigned long)((5)*(20000000L/4000.0)));
 13365  00463C  0E21               	movlw	33
 13366  00463E  6E06               	movwf	??_LCD_Begin^0,c
 13367  004640  0E76               	movlw	118
 13368  004642                     u6827:
 13369  004642  2EE8               	decfsz	wreg,f,c
 13370  004644  D7FE               	bra	u6827
 13371  004646  2E06               	decfsz	??_LCD_Begin^0,f,c
 13372  004648  D7FC               	bra	u6827
 13373  00464A  D000               	nop2	
 13374  00464C                     
 13375                           ;lcd_lib.c: 81:   LCD_Cmd(3);
 13376  00464C  0E03               	movlw	3
 13377  00464E  EC55  F02A         	call	_LCD_Cmd
 13378                           
 13379                           ;lcd_lib.c: 82:   _delay((unsigned long)((5)*(20000000L/4000.0)));
 13380  004652  0E21               	movlw	33
 13381  004654  6E06               	movwf	??_LCD_Begin^0,c
 13382  004656  0E76               	movlw	118
 13383  004658                     u6837:
 13384  004658  2EE8               	decfsz	wreg,f,c
 13385  00465A  D7FE               	bra	u6837
 13386  00465C  2E06               	decfsz	??_LCD_Begin^0,f,c
 13387  00465E  D7FC               	bra	u6837
 13388  004660  D000               	nop2	
 13389  004662                     
 13390                           ;lcd_lib.c: 83:   LCD_Cmd(3);
 13391  004662  0E03               	movlw	3
 13392  004664  EC55  F02A         	call	_LCD_Cmd
 13393  004668                     
 13394                           ;lcd_lib.c: 84:   _delay((unsigned long)((5)*(20000000L/4000.0)));
 13395  004668  0E21               	movlw	33
 13396  00466A  6E06               	movwf	??_LCD_Begin^0,c
 13397  00466C  0E76               	movlw	118
 13398  00466E                     u6847:
 13399  00466E  2EE8               	decfsz	wreg,f,c
 13400  004670  D7FE               	bra	u6847
 13401  004672  2E06               	decfsz	??_LCD_Begin^0,f,c
 13402  004674  D7FC               	bra	u6847
 13403  004676  D000               	nop2	
 13404                           
 13405                           ;lcd_lib.c: 85:   LCD_Cmd(0x02);
 13406  004678  0E02               	movlw	2
 13407  00467A  EC55  F02A         	call	_LCD_Cmd
 13408  00467E                     
 13409                           ;lcd_lib.c: 86:   _delay((unsigned long)((5)*(20000000L/4000.0)));
 13410  00467E  0E21               	movlw	33
 13411  004680  6E06               	movwf	??_LCD_Begin^0,c
 13412  004682  0E76               	movlw	118
 13413  004684                     u6857:
 13414  004684  2EE8               	decfsz	wreg,f,c
 13415  004686  D7FE               	bra	u6857
 13416  004688  2E06               	decfsz	??_LCD_Begin^0,f,c
 13417  00468A  D7FC               	bra	u6857
 13418  00468C  D000               	nop2	
 13419  00468E                     
 13420                           ;lcd_lib.c: 87:   LCD_Cmd(0x20 | (2 << 2));
 13421  00468E  0E28               	movlw	40
 13422  004690  EC55  F02A         	call	_LCD_Cmd
 13423                           
 13424                           ;lcd_lib.c: 88:   _delay((unsigned long)((50)*(20000000L/4000.0)));
 13425  004694  0E02               	movlw	2
 13426  004696  6E07               	movwf	(??_LCD_Begin+1)^0,c
 13427  004698  0E45               	movlw	69
 13428  00469A  6E06               	movwf	??_LCD_Begin^0,c
 13429  00469C  0EAA               	movlw	170
 13430  00469E                     u6867:
 13431  00469E  2EE8               	decfsz	wreg,f,c
 13432  0046A0  D7FE               	bra	u6867
 13433  0046A2  2E06               	decfsz	??_LCD_Begin^0,f,c
 13434  0046A4  D7FC               	bra	u6867
 13435  0046A6  2E07               	decfsz	(??_LCD_Begin+1)^0,f,c
 13436  0046A8  D7FA               	bra	u6867
 13437  0046AA                     
 13438                           ;lcd_lib.c: 89:   LCD_Cmd(0x0C);
 13439  0046AA  0E0C               	movlw	12
 13440  0046AC  EC55  F02A         	call	_LCD_Cmd
 13441  0046B0                     
 13442                           ;lcd_lib.c: 90:   _delay((unsigned long)((50)*(20000000L/4000.0)));
 13443  0046B0  0E02               	movlw	2
 13444  0046B2  6E07               	movwf	(??_LCD_Begin+1)^0,c
 13445  0046B4  0E45               	movlw	69
 13446  0046B6  6E06               	movwf	??_LCD_Begin^0,c
 13447  0046B8  0EAA               	movlw	170
 13448  0046BA                     u6877:
 13449  0046BA  2EE8               	decfsz	wreg,f,c
 13450  0046BC  D7FE               	bra	u6877
 13451  0046BE  2E06               	decfsz	??_LCD_Begin^0,f,c
 13452  0046C0  D7FC               	bra	u6877
 13453  0046C2  2E07               	decfsz	(??_LCD_Begin+1)^0,f,c
 13454  0046C4  D7FA               	bra	u6877
 13455                           
 13456                           ;lcd_lib.c: 91:   LCD_Cmd(0x01);
 13457  0046C6  0E01               	movlw	1
 13458  0046C8  EC55  F02A         	call	_LCD_Cmd
 13459  0046CC                     
 13460                           ;lcd_lib.c: 92:   _delay((unsigned long)((50)*(20000000L/4000.0)));
 13461  0046CC  0E02               	movlw	2
 13462  0046CE  6E07               	movwf	(??_LCD_Begin+1)^0,c
 13463  0046D0  0E45               	movlw	69
 13464  0046D2  6E06               	movwf	??_LCD_Begin^0,c
 13465  0046D4  0EAA               	movlw	170
 13466  0046D6                     u6887:
 13467  0046D6  2EE8               	decfsz	wreg,f,c
 13468  0046D8  D7FE               	bra	u6887
 13469  0046DA  2E06               	decfsz	??_LCD_Begin^0,f,c
 13470  0046DC  D7FC               	bra	u6887
 13471  0046DE  2E07               	decfsz	(??_LCD_Begin+1)^0,f,c
 13472  0046E0  D7FA               	bra	u6887
 13473  0046E2                     
 13474                           ;lcd_lib.c: 93:   LCD_Cmd(0x04 | 0x02);
 13475  0046E2  0E06               	movlw	6
 13476  0046E4  EC55  F02A         	call	_LCD_Cmd
 13477                           
 13478                           ;lcd_lib.c: 94:   _delay((unsigned long)((50)*(20000000L/4000.0)));
 13479  0046E8  0E02               	movlw	2
 13480  0046EA  6E07               	movwf	(??_LCD_Begin+1)^0,c
 13481  0046EC  0E45               	movlw	69
 13482  0046EE  6E06               	movwf	??_LCD_Begin^0,c
 13483  0046F0  0EAA               	movlw	170
 13484  0046F2                     u6897:
 13485  0046F2  2EE8               	decfsz	wreg,f,c
 13486  0046F4  D7FE               	bra	u6897
 13487  0046F6  2E06               	decfsz	??_LCD_Begin^0,f,c
 13488  0046F8  D7FC               	bra	u6897
 13489  0046FA  2E07               	decfsz	(??_LCD_Begin+1)^0,f,c
 13490  0046FC  D7FA               	bra	u6897
 13491  0046FE  0012               	return		;funcret
 13492  004700                     __end_of_LCD_Begin:
 13493                           	callstack 0
 13494                           
 13495 ;; *************** function _LCD_Cmd *****************
 13496 ;; Defined at:
 13497 ;;		line 27 in file "lcd_lib.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  Command         1    wreg     unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  Command         1    4[COMRAM] unsigned char 
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0, cstack
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0
 13512 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13513 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13514 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13515 ;;Total ram usage:        2 bytes
 13516 ;; Hardware stack levels used: 1
 13517 ;; Hardware stack levels required when called: 5
 13518 ;; This function calls:
 13519 ;;		_LCD_Write_Nibble
 13520 ;; This function is called by:
 13521 ;;		_LCD_Goto
 13522 ;;		_LCD_Begin
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text51
 13527  0054AA                     __ptext51:
 13528                           	callstack 0
 13529  0054AA                     _LCD_Cmd:
 13530                           	callstack 24
 13531                           
 13532                           ;incstack = 0
 13533                           ;LCD_Cmd@Command stored from wreg
 13534  0054AA  6E05               	movwf	LCD_Cmd@Command^0,c
 13535  0054AC                     
 13536                           ;lcd_lib.c: 27: void LCD_Cmd(uint8_t Command);lcd_lib.c: 28: {;lcd_lib.c: 29:   RS = 0;
 13537  0054AC  0100               	movlb	0	; () banked
 13538  0054AE  91FE               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
 13539  0054B0                     
 13540                           ; BSR set to: 0
 13541                           ;lcd_lib.c: 30:   LCD_Write_Nibble(Command & 0xF0);
 13542  0054B0  5005               	movf	LCD_Cmd@Command^0,w,c
 13543  0054B2  0BF0               	andlw	240
 13544  0054B4  EC03  F02B         	call	_LCD_Write_Nibble
 13545                           
 13546                           ;lcd_lib.c: 31:   LCD_Write_Nibble((Command << 4) & 0xF0);
 13547  0054B8  3805               	swapf	LCD_Cmd@Command^0,w,c
 13548  0054BA  0BF0               	andlw	240
 13549  0054BC  0BF0               	andlw	240
 13550  0054BE  EC03  F02B         	call	_LCD_Write_Nibble
 13551  0054C2                     
 13552                           ;lcd_lib.c: 32:   if((Command == 0x01) || (Command == 0x02))
 13553  0054C2  0405               	decf	LCD_Cmd@Command^0,w,c
 13554  0054C4  B4D8               	btfsc	status,2,c
 13555  0054C6  EF67  F02A         	goto	u5921
 13556  0054CA  EF69  F02A         	goto	u5920
 13557  0054CE                     u5921:
 13558  0054CE  EF72  F02A         	goto	l5773
 13559  0054D2                     u5920:
 13560  0054D2  0E02               	movlw	2
 13561  0054D4  1805               	xorwf	LCD_Cmd@Command^0,w,c
 13562  0054D6  A4D8               	btfss	status,2,c
 13563  0054D8  EF70  F02A         	goto	u5931
 13564  0054DC  EF72  F02A         	goto	u5930
 13565  0054E0                     u5931:
 13566  0054E0  EF79  F02A         	goto	l509
 13567  0054E4                     u5930:
 13568  0054E4                     l5773:
 13569                           
 13570                           ;lcd_lib.c: 33:     _delay((unsigned long)((2)*(20000000L/4000.0)));
 13571  0054E4  0E0D               	movlw	13
 13572  0054E6  6E04               	movwf	??_LCD_Cmd^0,c
 13573  0054E8  0EFC               	movlw	252
 13574  0054EA                     u6907:
 13575  0054EA  2EE8               	decfsz	wreg,f,c
 13576  0054EC  D7FE               	bra	u6907
 13577  0054EE  2E04               	decfsz	??_LCD_Cmd^0,f,c
 13578  0054F0  D7FC               	bra	u6907
 13579  0054F2                     l509:
 13580  0054F2  0012               	return		;funcret
 13581  0054F4                     __end_of_LCD_Cmd:
 13582                           	callstack 0
 13583                           
 13584 ;; *************** function _LCD_Write_Nibble *****************
 13585 ;; Defined at:
 13586 ;;		line 16 in file "lcd_lib.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;  n               1    wreg     unsigned char 
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;  n               1    2[COMRAM] unsigned char 
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  1    wreg      void 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13600 ;;      Params:         0       0       0       0       0       0       0       0       0
 13601 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13603 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13604 ;;Total ram usage:        1 bytes
 13605 ;; Hardware stack levels used: 1
 13606 ;; Hardware stack levels required when called: 4
 13607 ;; This function calls:
 13608 ;;		_Expander_Write
 13609 ;; This function is called by:
 13610 ;;		_LCD_Cmd
 13611 ;;		_LCD_Print
 13612 ;;		_LCD_PutC
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text52
 13617  005606                     __ptext52:
 13618                           	callstack 0
 13619  005606                     _LCD_Write_Nibble:
 13620                           	callstack 25
 13621                           
 13622                           ;incstack = 0
 13623                           ;LCD_Write_Nibble@n stored from wreg
 13624  005606  6E03               	movwf	LCD_Write_Nibble@n^0,c
 13625  005608                     
 13626                           ;lcd_lib.c: 16: void LCD_Write_Nibble(uint8_t n);lcd_lib.c: 17: {;lcd_lib.c: 18:   n |= 
      +                          RS;
 13627  005608  0E00               	movlw	0
 13628  00560A  0100               	movlb	0	; () banked
 13629  00560C  B1FE               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
 13630  00560E  0E01               	movlw	1
 13631  005610  1203               	iorwf	LCD_Write_Nibble@n^0,f,c
 13632  005612                     
 13633                           ; BSR set to: 0
 13634                           ;lcd_lib.c: 19:   Expander_Write(n & 0xFB);
 13635  005612  5003               	movf	LCD_Write_Nibble@n^0,w,c
 13636  005614  0BFB               	andlw	251
 13637  005616  EC40  F02C         	call	_Expander_Write
 13638  00561A                     
 13639                           ;lcd_lib.c: 20:   _delay((unsigned long)((1)*(20000000L/4000000.0)));
 13640  00561A  D000               	nop2		;2 cycle nop
 13641  00561C  D000               	nop2		;2 cycle nop
 13642  00561E  F000               	nop	
 13643  005620                     
 13644                           ;lcd_lib.c: 21:   Expander_Write(n | 0x04);
 13645  005620  5003               	movf	LCD_Write_Nibble@n^0,w,c
 13646  005622  0904               	iorlw	4
 13647  005624  EC40  F02C         	call	_Expander_Write
 13648  005628                     
 13649                           ;lcd_lib.c: 22:   _delay((unsigned long)((1)*(20000000L/4000000.0)));
 13650  005628  D000               	nop2		;2 cycle nop
 13651  00562A  D000               	nop2		;2 cycle nop
 13652  00562C  F000               	nop	
 13653  00562E                     
 13654                           ;lcd_lib.c: 23:   Expander_Write(n & 0xFB);
 13655  00562E  5003               	movf	LCD_Write_Nibble@n^0,w,c
 13656  005630  0BFB               	andlw	251
 13657  005632  EC40  F02C         	call	_Expander_Write
 13658  005636                     
 13659                           ;lcd_lib.c: 24:   _delay((unsigned long)((100)*(20000000L/4000000.0)));
 13660  005636  0EA6               	movlw	166
 13661  005638                     u6917:
 13662  005638  2EE8               	decfsz	wreg,f,c
 13663  00563A  D7FE               	bra	u6917
 13664  00563C  D000               	nop2	
 13665  00563E  0012               	return		;funcret
 13666  005640                     __end_of_LCD_Write_Nibble:
 13667                           	callstack 0
 13668                           
 13669 ;; *************** function _Expander_Write *****************
 13670 ;; Defined at:
 13671 ;;		line 7 in file "lcd_lib.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;  value           1    wreg     unsigned char 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  value           1    1[COMRAM] unsigned char 
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  1    wreg      void 
 13678 ;; Registers used:
 13679 ;;		wreg, status,2, status,0, cstack
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13685 ;;      Params:         0       0       0       0       0       0       0       0       0
 13686 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13687 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13688 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13689 ;;Total ram usage:        1 bytes
 13690 ;; Hardware stack levels used: 1
 13691 ;; Hardware stack levels required when called: 3
 13692 ;; This function calls:
 13693 ;;		_I2C_Tx_data
 13694 ;;		_I2C_start
 13695 ;;		_I2C_stop
 13696 ;; This function is called by:
 13697 ;;		_LCD_Write_Nibble
 13698 ;;		_LCD_Begin
 13699 ;;		_Backlight
 13700 ;;		_noBacklight
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text53
 13705  005880                     __ptext53:
 13706                           	callstack 0
 13707  005880                     _Expander_Write:
 13708                           	callstack 25
 13709                           
 13710                           ;incstack = 0
 13711                           ;Expander_Write@value stored from wreg
 13712  005880  6E02               	movwf	Expander_Write@value^0,c
 13713  005882                     
 13714                           ;lcd_lib.c: 7: void Expander_Write(uint8_t value);lcd_lib.c: 8: {;lcd_lib.c: 10:   I2C_s
      +                          tart();
 13715  005882  ECA4  F02C         	call	_I2C_start	;wreg free
 13716  005886                     
 13717                           ;lcd_lib.c: 11:   I2C_Tx_data(i2c_addr);
 13718  005886  0100               	movlb	0	; () banked
 13719  005888  51EB               	movf	_i2c_addr& (0+255),w,b
 13720  00588A  ECC1  F02B         	call	_I2C_Tx_data
 13721  00588E                     
 13722                           ;lcd_lib.c: 12:   I2C_Tx_data(value | backlight_val);
 13723  00588E  5002               	movf	Expander_Write@value^0,w,c
 13724  005890  0100               	movlb	0	; () banked
 13725  005892  11FF               	iorwf	_backlight_val& (0+255),w,b
 13726  005894  ECC1  F02B         	call	_I2C_Tx_data
 13727  005898                     
 13728                           ;lcd_lib.c: 13:   I2C_stop();
 13729  005898  EC83  F02C         	call	_I2C_stop	;wreg free
 13730  00589C  0012               	return		;funcret
 13731  00589E                     __end_of_Expander_Write:
 13732                           	callstack 0
 13733                           
 13734 ;; *************** function _I2C_master_init *****************
 13735 ;; Defined at:
 13736 ;;		line 3 in file "i2c_lib.c"
 13737 ;; Parameters:    Size  Location     Type
 13738 ;;		None
 13739 ;; Auto vars:     Size  Location     Type
 13740 ;;		None
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  1    wreg      void 
 13743 ;; Registers used:
 13744 ;;		wreg, status,2
 13745 ;; Tracked objects:
 13746 ;;		On entry : 0/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13750 ;;      Params:         0       0       0       0       0       0       0       0       0
 13751 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13752 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13753 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13754 ;;Total ram usage:        0 bytes
 13755 ;; Hardware stack levels used: 1
 13756 ;; Hardware stack levels required when called: 1
 13757 ;; This function calls:
 13758 ;;		Nothing
 13759 ;; This function is called by:
 13760 ;;		_main
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           	psect	text54
 13765  005860                     __ptext54:
 13766                           	callstack 0
 13767  005860                     _I2C_master_init:
 13768                           	callstack 29
 13769  005860                     
 13770                           ;i2c_lib.c: 4:     TRISBbits.RB1 = 1;
 13771  005860  8293               	bsf	147,1,c	;volatile
 13772                           
 13773                           ;i2c_lib.c: 5:     TRISBbits.RB0 = 1;
 13774  005862  8093               	bsf	147,0,c	;volatile
 13775                           
 13776                           ;i2c_lib.c: 7:     SSPSTATbits.CKE = 0;
 13777  005864  9CC7               	bcf	199,6,c	;volatile
 13778                           
 13779                           ;i2c_lib.c: 8:     SSPSTATbits.SMP = 1;
 13780  005866  8EC7               	bsf	199,7,c	;volatile
 13781                           
 13782                           ;i2c_lib.c: 12:     SSPCON1bits.SSPEN = 1;
 13783  005868  8AC6               	bsf	198,5,c	;volatile
 13784  00586A                     
 13785                           ;i2c_lib.c: 13:     SSPCON1bits.SSPM = 0b1000;
 13786  00586A  50C6               	movf	198,w,c	;volatile
 13787  00586C  0BF0               	andlw	-16
 13788  00586E  0908               	iorlw	8
 13789  005870  6EC6               	movwf	198,c	;volatile
 13790  005872                     
 13791                           ;i2c_lib.c: 14:     SSPCON1bits.SSPOV = 0;
 13792  005872  9CC6               	bcf	198,6,c	;volatile
 13793  005874                     
 13794                           ;i2c_lib.c: 15:     SSPCON1bits.WCOL = 0;
 13795  005874  9EC6               	bcf	198,7,c	;volatile
 13796                           
 13797                           ;i2c_lib.c: 18:     SSPCON2 = 0x00;
 13798  005876  0E00               	movlw	0
 13799  005878  6EC5               	movwf	197,c	;volatile
 13800                           
 13801                           ;i2c_lib.c: 22:     SSPADD = 49;
 13802  00587A  0E31               	movlw	49
 13803  00587C  6EC8               	movwf	200,c	;volatile
 13804  00587E  0012               	return		;funcret
 13805  005880                     __end_of_I2C_master_init:
 13806                           	callstack 0
 13807                           
 13808 ;; *************** function _GPSRead_rmc *****************
 13809 ;; Defined at:
 13810 ;;		line 38 in file "gps_lib.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;  time            2    5[COMRAM] PTR unsigned char 
 13813 ;;		 -> time(12), 
 13814 ;;  date            2    7[COMRAM] PTR unsigned char 
 13815 ;;		 -> date(7), 
 13816 ;;  nmea_log        2    9[COMRAM] PTR unsigned char 
 13817 ;;		 -> nmea_log(7), 
 13818 ;;  lat             2   11[COMRAM] PTR unsigned char 
 13819 ;;		 -> lat(12), 
 13820 ;;  lon             2   13[COMRAM] PTR unsigned char 
 13821 ;;		 -> lon(13), 
 13822 ;;  speed           2   15[COMRAM] PTR unsigned char 
 13823 ;;		 -> speed(8), 
 13824 ;;  course          2   17[COMRAM] PTR unsigned char 
 13825 ;;		 -> course(8), 
 13826 ;;  stream          2   19[COMRAM] PTR unsigned char 
 13827 ;;		 -> stream(1), 
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;		None               void
 13832 ;; Registers used:
 13833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13839 ;;      Params:        16       0       0       0       0       0       0       0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13841 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13842 ;;      Totals:        18       0       0       0       0       0       0       0       0
 13843 ;;Total ram usage:       18 bytes
 13844 ;; Hardware stack levels used: 1
 13845 ;; Hardware stack levels required when called: 2
 13846 ;; This function calls:
 13847 ;;		_getch
 13848 ;;		_strcmp
 13849 ;; This function is called by:
 13850 ;;		_main
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           	psect	text55
 13855  0035FE                     __ptext55:
 13856                           	callstack 0
 13857  0035FE                     _GPSRead_rmc:
 13858                           	callstack 28
 13859  0035FE                     
 13860                           ;gps_lib.c: 38: __bit GPSRead_rmc( uint8_t *time, uint8_t *date,uint8_t *nmea_log,uint8_
      +                          t *lat,;gps_lib.c: 39:                     uint8_t *lon, uint8_t *speed,uint8_t *course,
      +                           uint8_t *stream);gps_lib.c: 40: {;gps_lib.c: 41:     ch = getch();
 13861  0035FE  ECFD  F02B         	call	_getch	;wreg free
 13862  003602  6E5E               	movwf	_ch^0,c
 13863  003604                     
 13864                           ;gps_lib.c: 43:     if (ch == '$')
 13865  003604  0E24               	movlw	36
 13866  003606  185E               	xorwf	_ch^0,w,c
 13867  003608  A4D8               	btfss	status,2,c
 13868  00360A  EF09  F01B         	goto	u6351
 13869  00360E  EF0B  F01B         	goto	u6350
 13870  003612                     u6351:
 13871  003612  EFD9  F01B         	goto	l6191
 13872  003616                     u6350:
 13873  003616                     
 13874                           ;gps_lib.c: 44:     {;gps_lib.c: 45:         for (j=0;j<5;j++)
 13875  003616  0E00               	movlw	0
 13876  003618  0100               	movlb	0	; () banked
 13877  00361A  6FED               	movwf	_j& (0+255),b
 13878  00361C                     l6127:
 13879                           
 13880                           ; BSR set to: 0
 13881  00361C  0E04               	movlw	4
 13882  00361E  65ED               	cpfsgt	_j& (0+255),b
 13883  003620  EF14  F01B         	goto	u6361
 13884  003624  EF16  F01B         	goto	u6360
 13885  003628                     u6361:
 13886  003628  EF18  F01B         	goto	l6131
 13887  00362C                     u6360:
 13888  00362C  EF27  F01B         	goto	l6139
 13889  003630                     l6131:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;gps_lib.c: 46:         {;gps_lib.c: 47:             ch = getch();
 13893  003630  ECFD  F02B         	call	_getch	;wreg free
 13894  003634  6E5E               	movwf	_ch^0,c
 13895  003636                     
 13896                           ;gps_lib.c: 48:             nmea_log[j] = ch;
 13897  003636  0100               	movlb	0	; () banked
 13898  003638  51ED               	movf	_j& (0+255),w,b
 13899  00363A  240A               	addwf	GPSRead_rmc@nmea_log^0,w,c
 13900  00363C  6ED9               	movwf	fsr2l,c
 13901  00363E  0E00               	movlw	0
 13902  003640  200B               	addwfc	(GPSRead_rmc@nmea_log+1)^0,w,c
 13903  003642  6EDA               	movwf	fsr2h,c
 13904  003644  C05E  FFDF         	movff	_ch,indf2
 13905  003648                     
 13906                           ; BSR set to: 0
 13907                           ;gps_lib.c: 49:         }
 13908  003648  2BED               	incf	_j& (0+255),f,b
 13909  00364A  EF0E  F01B         	goto	l6127
 13910  00364E                     l6139:
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;gps_lib.c: 51:         change_array = 0;
 13914  00364E  0E00               	movlw	0
 13915  003650  6FEC               	movwf	_change_array& (0+255),b
 13916  003652                     
 13917                           ; BSR set to: 0
 13918                           ;gps_lib.c: 53:         if (strcmp((const char *)nmea_log, (const char *)gps_rmc)==0)
 13919  003652  C00A  F001         	movff	GPSRead_rmc@nmea_log,strcmp@l
 13920  003656  C00B  F002         	movff	GPSRead_rmc@nmea_log+1,strcmp@l+1
 13921  00365A  0EEB               	movlw	low _gps_rmc
 13922  00365C  6E03               	movwf	strcmp@r^0,c
 13923  00365E  0E7C               	movlw	high _gps_rmc
 13924  003660  6E04               	movwf	(strcmp@r+1)^0,c
 13925  003662  EC0C  F028         	call	_strcmp	;wreg free
 13926  003666  5001               	movf	?_strcmp^0,w,c
 13927  003668  1002               	iorwf	(?_strcmp+1)^0,w,c
 13928  00366A  A4D8               	btfss	status,2,c
 13929  00366C  EF3A  F01B         	goto	u6371
 13930  003670  EF3C  F01B         	goto	u6370
 13931  003674                     u6371:
 13932  003674  EFD9  F01B         	goto	l6191
 13933  003678                     u6370:
 13934  003678  EFCD  F01B         	goto	l6185
 13935  00367C                     l6145:
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;gps_lib.c: 57:                 ch = getch();
 13939  00367C  ECFD  F02B         	call	_getch	;wreg free
 13940  003680  6E5E               	movwf	_ch^0,c
 13941  003682                     
 13942                           ;gps_lib.c: 59:                 if(ch == ','){
 13943  003682  0E2C               	movlw	44
 13944  003684  185E               	xorwf	_ch^0,w,c
 13945  003686  A4D8               	btfss	status,2,c
 13946  003688  EF48  F01B         	goto	u6381
 13947  00368C  EF4A  F01B         	goto	u6380
 13948  003690                     u6381:
 13949  003690  EF9F  F01B         	goto	l6183
 13950  003694                     u6380:
 13951  003694                     
 13952                           ;gps_lib.c: 60:                     change_array++;
 13953  003694  0100               	movlb	0	; () banked
 13954  003696  2BEC               	incf	_change_array& (0+255),f,b
 13955  003698                     
 13956                           ; BSR set to: 0
 13957                           ;gps_lib.c: 61:                     if((change_array != 4)&&(change_array != 6)){
 13958  003698  0E04               	movlw	4
 13959  00369A  19EC               	xorwf	_change_array& (0+255),w,b
 13960  00369C  B4D8               	btfsc	status,2,c
 13961  00369E  EF53  F01B         	goto	u6391
 13962  0036A2  EF55  F01B         	goto	u6390
 13963  0036A6                     u6391:
 13964  0036A6  EFCD  F01B         	goto	l6185
 13965  0036AA                     u6390:
 13966  0036AA                     
 13967                           ; BSR set to: 0
 13968  0036AA  0E06               	movlw	6
 13969  0036AC  19EC               	xorwf	_change_array& (0+255),w,b
 13970  0036AE  B4D8               	btfsc	status,2,c
 13971  0036B0  EF5C  F01B         	goto	u6401
 13972  0036B4  EF5E  F01B         	goto	u6400
 13973  0036B8                     u6401:
 13974  0036B8  EFCD  F01B         	goto	l6185
 13975  0036BC                     u6400:
 13976  0036BC                     
 13977                           ; BSR set to: 0
 13978                           ;gps_lib.c: 62:                         j=0;
 13979  0036BC  0E00               	movlw	0
 13980  0036BE  6FED               	movwf	_j& (0+255),b
 13981  0036C0  EFCD  F01B         	goto	l6185
 13982  0036C4                     l6157:
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;gps_lib.c: 68:                             time[j++] = ch;
 13986  0036C4  51ED               	movf	_j& (0+255),w,b
 13987  0036C6  2406               	addwf	GPSRead_rmc@time^0,w,c
 13988  0036C8  6ED9               	movwf	fsr2l,c
 13989  0036CA  0E00               	movlw	0
 13990  0036CC  2007               	addwfc	(GPSRead_rmc@time+1)^0,w,c
 13991  0036CE  6EDA               	movwf	fsr2h,c
 13992  0036D0  C05E  FFDF         	movff	_ch,indf2
 13993  0036D4                     l6159:
 13994                           
 13995                           ; BSR set to: 0
 13996  0036D4  2BED               	incf	_j& (0+255),f,b
 13997                           
 13998                           ;gps_lib.c: 69:                         break;
 13999  0036D6  EFCD  F01B         	goto	l6185
 14000  0036DA                     l6161:
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;gps_lib.c: 72:                             lat[j++] = ch;
 14004  0036DA  51ED               	movf	_j& (0+255),w,b
 14005  0036DC  240C               	addwf	GPSRead_rmc@lat^0,w,c
 14006  0036DE  6ED9               	movwf	fsr2l,c
 14007  0036E0  0E00               	movlw	0
 14008  0036E2  200D               	addwfc	(GPSRead_rmc@lat+1)^0,w,c
 14009  0036E4  6EDA               	movwf	fsr2h,c
 14010  0036E6  C05E  FFDF         	movff	_ch,indf2
 14011  0036EA  EF6A  F01B         	goto	l6159
 14012  0036EE                     l6165:
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;gps_lib.c: 76:                             lon[j++] = ch;
 14016  0036EE  51ED               	movf	_j& (0+255),w,b
 14017  0036F0  240E               	addwf	GPSRead_rmc@lon^0,w,c
 14018  0036F2  6ED9               	movwf	fsr2l,c
 14019  0036F4  0E00               	movlw	0
 14020  0036F6  200F               	addwfc	(GPSRead_rmc@lon+1)^0,w,c
 14021  0036F8  6EDA               	movwf	fsr2h,c
 14022  0036FA  C05E  FFDF         	movff	_ch,indf2
 14023  0036FE  EF6A  F01B         	goto	l6159
 14024  003702                     l6169:
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;gps_lib.c: 79:                             speed[j++] = ch;
 14028  003702  51ED               	movf	_j& (0+255),w,b
 14029  003704  2410               	addwf	GPSRead_rmc@speed^0,w,c
 14030  003706  6ED9               	movwf	fsr2l,c
 14031  003708  0E00               	movlw	0
 14032  00370A  2011               	addwfc	(GPSRead_rmc@speed+1)^0,w,c
 14033  00370C  6EDA               	movwf	fsr2h,c
 14034  00370E  C05E  FFDF         	movff	_ch,indf2
 14035  003712  EF6A  F01B         	goto	l6159
 14036  003716                     l6173:
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;gps_lib.c: 82:                             course[j++] = ch;
 14040  003716  51ED               	movf	_j& (0+255),w,b
 14041  003718  2412               	addwf	GPSRead_rmc@course^0,w,c
 14042  00371A  6ED9               	movwf	fsr2l,c
 14043  00371C  0E00               	movlw	0
 14044  00371E  2013               	addwfc	(GPSRead_rmc@course+1)^0,w,c
 14045  003720  6EDA               	movwf	fsr2h,c
 14046  003722  C05E  FFDF         	movff	_ch,indf2
 14047  003726  EF6A  F01B         	goto	l6159
 14048  00372A                     l6177:
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;gps_lib.c: 85:                             date[j++] = ch;
 14052  00372A  51ED               	movf	_j& (0+255),w,b
 14053  00372C  2408               	addwf	GPSRead_rmc@date^0,w,c
 14054  00372E  6ED9               	movwf	fsr2l,c
 14055  003730  0E00               	movlw	0
 14056  003732  2009               	addwfc	(GPSRead_rmc@date+1)^0,w,c
 14057  003734  6EDA               	movwf	fsr2h,c
 14058  003736  C05E  FFDF         	movff	_ch,indf2
 14059  00373A  EF6A  F01B         	goto	l6159
 14060  00373E                     l6183:
 14061  00373E  0100               	movlb	0	; () banked
 14062  003740  51EC               	movf	_change_array& (0+255),w,b
 14063  003742  6E16               	movwf	??_GPSRead_rmc^0,c
 14064  003744  6A17               	clrf	(??_GPSRead_rmc+1)^0,c
 14065                           
 14066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14067                           ; Switch size 1, requested type "simple"
 14068                           ; Number of cases is 1, Range of values is 0 to 0
 14069                           ; switch strategies available:
 14070                           ; Name         Instructions Cycles
 14071                           ; simple_byte            4     3 (average)
 14072                           ;	Chosen strategy is simple_byte
 14073  003746  5017               	movf	(??_GPSRead_rmc+1)^0,w,c
 14074  003748  0A00               	xorlw	0	; case 0
 14075  00374A  B4D8               	btfsc	status,2,c
 14076  00374C  EFAA  F01B         	goto	l6719
 14077  003750  EFCD  F01B         	goto	l6185
 14078  003754                     l6719:
 14079                           
 14080                           ; BSR set to: 0
 14081                           ; Switch size 1, requested type "simple"
 14082                           ; Number of cases is 8, Range of values is 1 to 9
 14083                           ; switch strategies available:
 14084                           ; Name         Instructions Cycles
 14085                           ; simple_byte           25    13 (average)
 14086                           ;	Chosen strategy is simple_byte
 14087  003754  5016               	movf	??_GPSRead_rmc^0,w,c
 14088  003756  0A01               	xorlw	1	; case 1
 14089  003758  B4D8               	btfsc	status,2,c
 14090  00375A  EF62  F01B         	goto	l6157
 14091  00375E  0A02               	xorlw	2	; case 3
 14092  003760  B4D8               	btfsc	status,2,c
 14093  003762  EF6D  F01B         	goto	l6161
 14094  003766  0A07               	xorlw	7	; case 4
 14095  003768  B4D8               	btfsc	status,2,c
 14096  00376A  EF6D  F01B         	goto	l6161
 14097  00376E  0A01               	xorlw	1	; case 5
 14098  003770  B4D8               	btfsc	status,2,c
 14099  003772  EF77  F01B         	goto	l6165
 14100  003776  0A03               	xorlw	3	; case 6
 14101  003778  B4D8               	btfsc	status,2,c
 14102  00377A  EF77  F01B         	goto	l6165
 14103  00377E  0A01               	xorlw	1	; case 7
 14104  003780  B4D8               	btfsc	status,2,c
 14105  003782  EF81  F01B         	goto	l6169
 14106  003786  0A0F               	xorlw	15	; case 8
 14107  003788  B4D8               	btfsc	status,2,c
 14108  00378A  EF8B  F01B         	goto	l6173
 14109  00378E  0A01               	xorlw	1	; case 9
 14110  003790  B4D8               	btfsc	status,2,c
 14111  003792  EF95  F01B         	goto	l6177
 14112  003796  EFCD  F01B         	goto	l6185
 14113  00379A                     l6185:
 14114                           
 14115                           ;gps_lib.c: 55:             while(change_array < 10){
 14116  00379A  0E09               	movlw	9
 14117  00379C  0100               	movlb	0	; () banked
 14118  00379E  65EC               	cpfsgt	_change_array& (0+255),b
 14119  0037A0  EFD4  F01B         	goto	u6411
 14120  0037A4  EFD6  F01B         	goto	u6410
 14121  0037A8                     u6411:
 14122  0037A8  EF3E  F01B         	goto	l6145
 14123  0037AC                     u6410:
 14124  0037AC                     
 14125                           ; BSR set to: 0
 14126                           ;gps_lib.c: 93:             return 1;
 14127  0037AC  80D8               	bsf	status,0,c
 14128  0037AE  EFDA  F01B         	goto	l464
 14129  0037B2                     l6191:
 14130                           
 14131                           ;gps_lib.c: 97:     return 0;
 14132  0037B2  90D8               	bcf	status,0,c
 14133  0037B4                     l464:
 14134  0037B4  0012               	return		;funcret
 14135  0037B6                     __end_of_GPSRead_rmc:
 14136                           	callstack 0
 14137                           
 14138 ;; *************** function _GPSRead_gga *****************
 14139 ;; Defined at:
 14140 ;;		line 100 in file "gps_lib.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  alt             2    5[COMRAM] PTR unsigned char 
 14143 ;;		 -> alt(10), 
 14144 ;;  satel           2    7[COMRAM] PTR unsigned char 
 14145 ;;		 -> satel(4), 
 14146 ;;  nmea_log        2    9[COMRAM] PTR unsigned char 
 14147 ;;		 -> nmea_log(7), 
 14148 ;;  stream          2   11[COMRAM] PTR unsigned char 
 14149 ;;		 -> stream(1), 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;		None
 14152 ;; Return value:  Size  Location     Type
 14153 ;;		None               void
 14154 ;; Registers used:
 14155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14161 ;;      Params:         8       0       0       0       0       0       0       0       0
 14162 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14163 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14164 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14165 ;;Total ram usage:       10 bytes
 14166 ;; Hardware stack levels used: 1
 14167 ;; Hardware stack levels required when called: 2
 14168 ;; This function calls:
 14169 ;;		_getch
 14170 ;;		_strcmp
 14171 ;; This function is called by:
 14172 ;;		_main
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text56
 14177  003FEA                     __ptext56:
 14178                           	callstack 0
 14179  003FEA                     _GPSRead_gga:
 14180                           	callstack 28
 14181  003FEA                     
 14182                           ;gps_lib.c: 100: __bit GPSRead_gga(uint8_t *alt,uint8_t *satel,uint8_t *nmea_log,uint8_t
      +                           *stream);gps_lib.c: 101: {;gps_lib.c: 102:     ch = getch();
 14183  003FEA  ECFD  F02B         	call	_getch	;wreg free
 14184  003FEE  6E5E               	movwf	_ch^0,c
 14185  003FF0                     
 14186                           ;gps_lib.c: 104:     if (ch == '$')
 14187  003FF0  0E24               	movlw	36
 14188  003FF2  185E               	xorwf	_ch^0,w,c
 14189  003FF4  A4D8               	btfss	status,2,c
 14190  003FF6  EFFF  F01F         	goto	u6421
 14191  003FFA  EF01  F020         	goto	u6420
 14192  003FFE                     u6421:
 14193  003FFE  EF7D  F020         	goto	l6249
 14194  004002                     u6420:
 14195  004002                     
 14196                           ;gps_lib.c: 105:     {;gps_lib.c: 106:         for (j=0;j<5;j++)
 14197  004002  0E00               	movlw	0
 14198  004004  0100               	movlb	0	; () banked
 14199  004006  6FED               	movwf	_j& (0+255),b
 14200  004008                     l6205:
 14201                           
 14202                           ; BSR set to: 0
 14203  004008  0E04               	movlw	4
 14204  00400A  65ED               	cpfsgt	_j& (0+255),b
 14205  00400C  EF0A  F020         	goto	u6431
 14206  004010  EF0C  F020         	goto	u6430
 14207  004014                     u6431:
 14208  004014  EF0E  F020         	goto	l6209
 14209  004018                     u6430:
 14210  004018  EF1D  F020         	goto	l6217
 14211  00401C                     l6209:
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;gps_lib.c: 107:         {;gps_lib.c: 108:             ch = getch();
 14215  00401C  ECFD  F02B         	call	_getch	;wreg free
 14216  004020  6E5E               	movwf	_ch^0,c
 14217  004022                     
 14218                           ;gps_lib.c: 109:             nmea_log[j] = ch;
 14219  004022  0100               	movlb	0	; () banked
 14220  004024  51ED               	movf	_j& (0+255),w,b
 14221  004026  240A               	addwf	GPSRead_gga@nmea_log^0,w,c
 14222  004028  6ED9               	movwf	fsr2l,c
 14223  00402A  0E00               	movlw	0
 14224  00402C  200B               	addwfc	(GPSRead_gga@nmea_log+1)^0,w,c
 14225  00402E  6EDA               	movwf	fsr2h,c
 14226  004030  C05E  FFDF         	movff	_ch,indf2
 14227  004034                     
 14228                           ; BSR set to: 0
 14229                           ;gps_lib.c: 110:         }
 14230  004034  2BED               	incf	_j& (0+255),f,b
 14231  004036  EF04  F020         	goto	l6205
 14232  00403A                     l6217:
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;gps_lib.c: 111:         change_array = 0;
 14236  00403A  0E00               	movlw	0
 14237  00403C  6FEC               	movwf	_change_array& (0+255),b
 14238  00403E                     
 14239                           ; BSR set to: 0
 14240                           ;gps_lib.c: 114:         if (strcmp((const char *)nmea_log, (const char *)gps_gga)==0)
 14241  00403E  C00A  F001         	movff	GPSRead_gga@nmea_log,strcmp@l
 14242  004042  C00B  F002         	movff	GPSRead_gga@nmea_log+1,strcmp@l+1
 14243  004046  0EE5               	movlw	low _gps_gga
 14244  004048  6E03               	movwf	strcmp@r^0,c
 14245  00404A  0E7C               	movlw	high _gps_gga
 14246  00404C  6E04               	movwf	(strcmp@r+1)^0,c
 14247  00404E  EC0C  F028         	call	_strcmp	;wreg free
 14248  004052  5001               	movf	?_strcmp^0,w,c
 14249  004054  1002               	iorwf	(?_strcmp+1)^0,w,c
 14250  004056  A4D8               	btfss	status,2,c
 14251  004058  EF30  F020         	goto	u6441
 14252  00405C  EF32  F020         	goto	u6440
 14253  004060                     u6441:
 14254  004060  EF7D  F020         	goto	l6249
 14255  004064                     u6440:
 14256  004064  EF71  F020         	goto	l6243
 14257  004068                     l6223:
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;gps_lib.c: 118:                 ch = getch();
 14261  004068  ECFD  F02B         	call	_getch	;wreg free
 14262  00406C  6E5E               	movwf	_ch^0,c
 14263  00406E                     
 14264                           ;gps_lib.c: 120:                 if(ch == ','){
 14265  00406E  0E2C               	movlw	44
 14266  004070  185E               	xorwf	_ch^0,w,c
 14267  004072  A4D8               	btfss	status,2,c
 14268  004074  EF3E  F020         	goto	u6451
 14269  004078  EF40  F020         	goto	u6450
 14270  00407C                     u6451:
 14271  00407C  EF5B  F020         	goto	l6241
 14272  004080                     u6450:
 14273  004080                     
 14274                           ;gps_lib.c: 121:                     change_array++;
 14275  004080  0100               	movlb	0	; () banked
 14276  004082  2BEC               	incf	_change_array& (0+255),f,b
 14277  004084                     
 14278                           ; BSR set to: 0
 14279                           ;gps_lib.c: 122:                     j=0;
 14280  004084  0E00               	movlw	0
 14281  004086  6FED               	movwf	_j& (0+255),b
 14282                           
 14283                           ;gps_lib.c: 123:                 }
 14284  004088  EF71  F020         	goto	l6243
 14285  00408C                     l6231:
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;gps_lib.c: 127:                             satel[j++] = ch;
 14289  00408C  51ED               	movf	_j& (0+255),w,b
 14290  00408E  2408               	addwf	GPSRead_gga@satel^0,w,c
 14291  004090  6ED9               	movwf	fsr2l,c
 14292  004092  0E00               	movlw	0
 14293  004094  2009               	addwfc	(GPSRead_gga@satel+1)^0,w,c
 14294  004096  6EDA               	movwf	fsr2h,c
 14295  004098  C05E  FFDF         	movff	_ch,indf2
 14296  00409C                     l6233:
 14297                           
 14298                           ; BSR set to: 0
 14299  00409C  2BED               	incf	_j& (0+255),f,b
 14300                           
 14301                           ;gps_lib.c: 128:                         break;
 14302  00409E  EF71  F020         	goto	l6243
 14303  0040A2                     l6235:
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;gps_lib.c: 130:                             alt[j++] = ch;
 14307  0040A2  51ED               	movf	_j& (0+255),w,b
 14308  0040A4  2406               	addwf	GPSRead_gga@alt^0,w,c
 14309  0040A6  6ED9               	movwf	fsr2l,c
 14310  0040A8  0E00               	movlw	0
 14311  0040AA  2007               	addwfc	(GPSRead_gga@alt+1)^0,w,c
 14312  0040AC  6EDA               	movwf	fsr2h,c
 14313  0040AE  C05E  FFDF         	movff	_ch,indf2
 14314  0040B2  EF4E  F020         	goto	l6233
 14315  0040B6                     l6241:
 14316  0040B6  0100               	movlb	0	; () banked
 14317  0040B8  51EC               	movf	_change_array& (0+255),w,b
 14318  0040BA  6E0E               	movwf	??_GPSRead_gga^0,c
 14319  0040BC  6A0F               	clrf	(??_GPSRead_gga+1)^0,c
 14320                           
 14321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14322                           ; Switch size 1, requested type "simple"
 14323                           ; Number of cases is 1, Range of values is 0 to 0
 14324                           ; switch strategies available:
 14325                           ; Name         Instructions Cycles
 14326                           ; simple_byte            4     3 (average)
 14327                           ;	Chosen strategy is simple_byte
 14328  0040BE  500F               	movf	(??_GPSRead_gga+1)^0,w,c
 14329  0040C0  0A00               	xorlw	0	; case 0
 14330  0040C2  B4D8               	btfsc	status,2,c
 14331  0040C4  EF66  F020         	goto	l6721
 14332  0040C8  EF71  F020         	goto	l6243
 14333  0040CC                     l6721:
 14334                           
 14335                           ; BSR set to: 0
 14336                           ; Switch size 1, requested type "simple"
 14337                           ; Number of cases is 2, Range of values is 7 to 9
 14338                           ; switch strategies available:
 14339                           ; Name         Instructions Cycles
 14340                           ; simple_byte            7     4 (average)
 14341                           ;	Chosen strategy is simple_byte
 14342  0040CC  500E               	movf	??_GPSRead_gga^0,w,c
 14343  0040CE  0A07               	xorlw	7	; case 7
 14344  0040D0  B4D8               	btfsc	status,2,c
 14345  0040D2  EF46  F020         	goto	l6231
 14346  0040D6  0A0E               	xorlw	14	; case 9
 14347  0040D8  B4D8               	btfsc	status,2,c
 14348  0040DA  EF51  F020         	goto	l6235
 14349  0040DE  EF71  F020         	goto	l6243
 14350  0040E2                     l6243:
 14351                           
 14352                           ;gps_lib.c: 116:             while(change_array < 10){
 14353  0040E2  0E09               	movlw	9
 14354  0040E4  0100               	movlb	0	; () banked
 14355  0040E6  65EC               	cpfsgt	_change_array& (0+255),b
 14356  0040E8  EF78  F020         	goto	u6461
 14357  0040EC  EF7A  F020         	goto	u6460
 14358  0040F0                     u6461:
 14359  0040F0  EF34  F020         	goto	l6223
 14360  0040F4                     u6460:
 14361  0040F4                     
 14362                           ; BSR set to: 0
 14363                           ;gps_lib.c: 139:             return 1;
 14364  0040F4  80D8               	bsf	status,0,c
 14365  0040F6  EF7E  F020         	goto	l481
 14366  0040FA                     l6249:
 14367                           
 14368                           ;gps_lib.c: 143:     return 0;
 14369  0040FA  90D8               	bcf	status,0,c
 14370  0040FC                     l481:
 14371  0040FC  0012               	return		;funcret
 14372  0040FE                     __end_of_GPSRead_gga:
 14373                           	callstack 0
 14374                           
 14375 ;; *************** function _strcmp *****************
 14376 ;; Defined at:
 14377 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcmp.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  l               2    0[COMRAM] PTR const unsigned char 
 14380 ;;		 -> nmea_log(7), 
 14381 ;;  r               2    2[COMRAM] PTR const unsigned char 
 14382 ;;		 -> gps_gga(6), gps_rmc(6), 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;		None
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  2    0[COMRAM] int 
 14387 ;; Registers used:
 14388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14389 ;; Tracked objects:
 14390 ;;		On entry : 0/0
 14391 ;;		On exit  : 0/0
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14394 ;;      Params:         4       0       0       0       0       0       0       0       0
 14395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14396 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14397 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14398 ;;Total ram usage:        5 bytes
 14399 ;; Hardware stack levels used: 1
 14400 ;; Hardware stack levels required when called: 1
 14401 ;; This function calls:
 14402 ;;		Nothing
 14403 ;; This function is called by:
 14404 ;;		_GPSRead_rmc
 14405 ;;		_GPSRead_gga
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           	psect	text57
 14410  005018                     __ptext57:
 14411                           	callstack 0
 14412  005018                     _strcmp:
 14413                           	callstack 28
 14414  005018  EF12  F028         	goto	l5757
 14415  00501C                     l5755:
 14416  00501C  4A01               	infsnz	strcmp@l^0,f,c
 14417  00501E  2A02               	incf	(strcmp@l+1)^0,f,c
 14418  005020  4A03               	infsnz	strcmp@r^0,f,c
 14419  005022  2A04               	incf	(strcmp@r+1)^0,f,c
 14420  005024                     l5757:
 14421  005024  C001  FFD9         	movff	strcmp@l,fsr2l
 14422  005028  C002  FFDA         	movff	strcmp@l+1,fsr2h
 14423  00502C  50DF               	movf	indf2,w,c
 14424  00502E  6E05               	movwf	??_strcmp^0,c
 14425  005030  C003  FFF6         	movff	strcmp@r,tblptrl
 14426  005034  C004  FFF7         	movff	strcmp@r+1,tblptrh
 14427  005038                     	if	0	;tblptru may be non-zero
 14428  005038                     	endif
 14429  005038                     	if	0	;tblptru may be non-zero
 14430  005038                     	endif
 14431  005038  0008               	tblrd		*
 14432  00503A  50F5               	movf	tablat,w,c
 14433  00503C  1805               	xorwf	??_strcmp^0,w,c
 14434  00503E  A4D8               	btfss	status,2,c
 14435  005040  EF24  F028         	goto	u5901
 14436  005044  EF26  F028         	goto	u5900
 14437  005048                     u5901:
 14438  005048  EF32  F028         	goto	l5761
 14439  00504C                     u5900:
 14440  00504C  C001  FFD9         	movff	strcmp@l,fsr2l
 14441  005050  C002  FFDA         	movff	strcmp@l+1,fsr2h
 14442  005054  50DF               	movf	indf2,w,c
 14443  005056  A4D8               	btfss	status,2,c
 14444  005058  EF30  F028         	goto	u5911
 14445  00505C  EF32  F028         	goto	u5910
 14446  005060                     u5911:
 14447  005060  EF0E  F028         	goto	l5755
 14448  005064                     u5910:
 14449  005064                     l5761:
 14450  005064  C001  FFD9         	movff	strcmp@l,fsr2l
 14451  005068  C002  FFDA         	movff	strcmp@l+1,fsr2h
 14452  00506C  50DF               	movf	indf2,w,c
 14453  00506E  6E05               	movwf	??_strcmp^0,c
 14454  005070  C003  FFF6         	movff	strcmp@r,tblptrl
 14455  005074  C004  FFF7         	movff	strcmp@r+1,tblptrh
 14456  005078                     	if	0	;tblptru may be non-zero
 14457  005078                     	endif
 14458  005078                     	if	0	;tblptru may be non-zero
 14459  005078                     	endif
 14460  005078  0008               	tblrd		*
 14461  00507A  50F5               	movf	tablat,w,c
 14462  00507C  5C05               	subwf	??_strcmp^0,w,c
 14463  00507E  6E01               	movwf	?_strcmp^0,c
 14464  005080  6A02               	clrf	(?_strcmp+1)^0,c
 14465  005082  A0D8               	btfss	status,0,c
 14466  005084  0602               	decf	(?_strcmp+1)^0,f,c
 14467  005086  0012               	return		;funcret
 14468  005088                     __end_of_strcmp:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function _getch *****************
 14472 ;; Defined at:
 14473 ;;		line 29 in file "usart_lib.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;		None
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;		None
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  1    wreg      unsigned char 
 14480 ;; Registers used:
 14481 ;;		wreg, status,2
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14490 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14491 ;;Total ram usage:        0 bytes
 14492 ;; Hardware stack levels used: 1
 14493 ;; Hardware stack levels required when called: 1
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_GPSRead_rmc
 14498 ;;		_GPSRead_gga
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text58
 14503  0057FA                     __ptext58:
 14504                           	callstack 0
 14505  0057FA                     _getch:
 14506                           	callstack 28
 14507  0057FA                     l32:
 14508                           
 14509                           ;usart_lib.c: 30:     while (!PIR1bits.RCIF)
 14510  0057FA  AA9E               	btfss	158,5,c	;volatile
 14511  0057FC  EF02  F02C         	goto	u5701
 14512  005800  EF04  F02C         	goto	u5700
 14513  005804                     u5701:
 14514  005804  EFFD  F02B         	goto	l32
 14515  005808                     u5700:
 14516  005808                     
 14517                           ;usart_lib.c: 33:     if (OERR)
 14518  005808  A2AB               	btfss	4011,1,c	;volatile
 14519  00580A  EF09  F02C         	goto	u5711
 14520  00580E  EF0B  F02C         	goto	u5710
 14521  005812                     u5711:
 14522  005812  EF0D  F02C         	goto	l5525
 14523  005816                     u5710:
 14524  005816                     
 14525                           ;usart_lib.c: 34:     {;usart_lib.c: 35:         CREN = 0;
 14526  005816  98AB               	bcf	4011,4,c	;volatile
 14527                           
 14528                           ;usart_lib.c: 36:         CREN = 1;
 14529  005818  88AB               	bsf	4011,4,c	;volatile
 14530  00581A                     l5525:
 14531                           
 14532                           ;usart_lib.c: 39:     return RCREG;
 14533  00581A  50AE               	movf	174,w,c	;volatile
 14534  00581C  0012               	return		;funcret
 14535  00581E                     __end_of_getch:
 14536                           	callstack 0
 14537                           
 14538 ;; *************** function _BMP280_readTemperature *****************
 14539 ;; Defined at:
 14540 ;;		line 141 in file "bmp280_lib.c"
 14541 ;; Parameters:    Size  Location     Type
 14542 ;;  temp            2   26[COMRAM] PTR long 
 14543 ;;		 -> temp(4), 
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;		None
 14546 ;; Return value:  Size  Location     Type
 14547 ;;                  1    wreg      _Bool 
 14548 ;; Registers used:
 14549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14550 ;; Tracked objects:
 14551 ;;		On entry : 0/0
 14552 ;;		On exit  : 0/0
 14553 ;;		Unchanged: 0/0
 14554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14555 ;;      Params:         2       0       0       0       0       0       0       0       0
 14556 ;;      Locals:         8       0       0       0       0       0       0       0       0
 14557 ;;      Temps:          8       0       0       0       0       0       0       0       0
 14558 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14559 ;;Total ram usage:       18 bytes
 14560 ;; Hardware stack levels used: 1
 14561 ;; Hardware stack levels required when called: 4
 14562 ;; This function calls:
 14563 ;;		_BMP280_Update
 14564 ;;		___aldiv
 14565 ;;		___lmul
 14566 ;; This function is called by:
 14567 ;;		_main
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           	psect	text59
 14572  003170                     __ptext59:
 14573                           	callstack 0
 14574  003170                     _BMP280_readTemperature:
 14575                           	callstack 26
 14576  003170                     
 14577                           ;bmp280_lib.c: 141: _Bool BMP280_readTemperature(int32_t *temp);bmp280_lib.c: 142: {;bmp
      +                          280_lib.c: 143:     BMP280_Update();
 14578  003170  ECF2  F023         	call	_BMP280_Update	;wreg free
 14579  003174                     
 14580                           ;bmp280_lib.c: 146:     var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
 14581  003174  0101               	movlb	1	; () banked
 14582  003176  511A               	movf	_BMP280_calib& (0+255),w,b
 14583  003178  6E1D               	movwf	??_BMP280_readTemperature^0,c
 14584  00317A  511B               	movf	(_BMP280_calib+1)& (0+255),w,b
 14585  00317C  6E1E               	movwf	(??_BMP280_readTemperature+1)^0,c
 14586  00317E  6A1F               	clrf	(??_BMP280_readTemperature+2)^0,c
 14587  003180  6A20               	clrf	(??_BMP280_readTemperature+3)^0,c
 14588  003182  90D8               	bcf	status,0,c
 14589  003184  341D               	rlcf	??_BMP280_readTemperature^0,w,c
 14590  003186  6E21               	movwf	(??_BMP280_readTemperature+4)^0,c
 14591  003188  341E               	rlcf	(??_BMP280_readTemperature+1)^0,w,c
 14592  00318A  6E22               	movwf	(??_BMP280_readTemperature+5)^0,c
 14593  00318C  341F               	rlcf	(??_BMP280_readTemperature+2)^0,w,c
 14594  00318E  6E23               	movwf	(??_BMP280_readTemperature+6)^0,c
 14595  003190  3420               	rlcf	(??_BMP280_readTemperature+3)^0,w,c
 14596  003192  6E24               	movwf	(??_BMP280_readTemperature+7)^0,c
 14597  003194  0E08               	movlw	8
 14598  003196  6E05               	movwf	___aldiv@divisor^0,c
 14599  003198  0E00               	movlw	0
 14600  00319A  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14601  00319C  0E00               	movlw	0
 14602  00319E  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14603  0031A0  0E00               	movlw	0
 14604  0031A2  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14605  0031A4  C0CF  F001         	movff	_adc_T,___aldiv@dividend
 14606  0031A8  C0D0  F002         	movff	_adc_T+1,___aldiv@dividend+1
 14607  0031AC  C0D1  F003         	movff	_adc_T+2,___aldiv@dividend+2
 14608  0031B0  C0D2  F004         	movff	_adc_T+3,___aldiv@dividend+3
 14609  0031B4  EC7F  F020         	call	___aldiv	;wreg free
 14610  0031B8  5021               	movf	(??_BMP280_readTemperature+4)^0,w,c
 14611  0031BA  5C01               	subwf	?___aldiv^0,w,c
 14612  0031BC  6E0F               	movwf	___lmul@multiplier^0,c
 14613  0031BE  5022               	movf	(??_BMP280_readTemperature+5)^0,w,c
 14614  0031C0  5802               	subwfb	(?___aldiv+1)^0,w,c
 14615  0031C2  6E10               	movwf	(___lmul@multiplier+1)^0,c
 14616  0031C4  5023               	movf	(??_BMP280_readTemperature+6)^0,w,c
 14617  0031C6  5803               	subwfb	(?___aldiv+2)^0,w,c
 14618  0031C8  6E11               	movwf	(___lmul@multiplier+2)^0,c
 14619  0031CA  5024               	movf	(??_BMP280_readTemperature+7)^0,w,c
 14620  0031CC  5804               	subwfb	(?___aldiv+3)^0,w,c
 14621  0031CE  6E12               	movwf	(___lmul@multiplier+3)^0,c
 14622  0031D0  EE21  F01C         	lfsr	2,_BMP280_calib+2
 14623  0031D4  CFDE F013          	movff	postinc2,___lmul@multiplicand
 14624  0031D8  CFDD F014          	movff	postdec2,___lmul@multiplicand+1
 14625  0031DC  0E00               	movlw	0
 14626  0031DE  BE14               	btfsc	(___lmul@multiplicand+1)^0,7,c
 14627  0031E0  0EFF               	movlw	-1
 14628  0031E2  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14629  0031E4  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14630  0031E6  ECAE  F028         	call	___lmul	;wreg free
 14631  0031EA  C00F  F029         	movff	?___lmul,_BMP280_readTemperature$2564
 14632  0031EE  C010  F02A         	movff	?___lmul+1,_BMP280_readTemperature$2564+1
 14633  0031F2  C011  F02B         	movff	?___lmul+2,_BMP280_readTemperature$2564+2
 14634  0031F6  C012  F02C         	movff	?___lmul+3,_BMP280_readTemperature$2564+3
 14635  0031FA                     
 14636                           ;bmp280_lib.c: 146:     var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
 14637  0031FA  C029  F001         	movff	_BMP280_readTemperature$2564,___aldiv@dividend
 14638  0031FE  C02A  F002         	movff	_BMP280_readTemperature$2564+1,___aldiv@dividend+1
 14639  003202  C02B  F003         	movff	_BMP280_readTemperature$2564+2,___aldiv@dividend+2
 14640  003206  C02C  F004         	movff	_BMP280_readTemperature$2564+3,___aldiv@dividend+3
 14641  00320A  0E00               	movlw	0
 14642  00320C  6E05               	movwf	___aldiv@divisor^0,c
 14643  00320E  0E08               	movlw	8
 14644  003210  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14645  003212  0E00               	movlw	0
 14646  003214  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14647  003216  0E00               	movlw	0
 14648  003218  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14649  00321A  EC7F  F020         	call	___aldiv	;wreg free
 14650  00321E  C001  F0C7         	movff	?___aldiv,_var1
 14651  003222  C002  F0C8         	movff	?___aldiv+1,_var1+1
 14652  003226  C003  F0C9         	movff	?___aldiv+2,_var1+2
 14653  00322A  C004  F0CA         	movff	?___aldiv+3,_var1+3
 14654  00322E                     
 14655                           ;bmp280_lib.c: 149:     var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
 14656  00322E  0101               	movlb	1	; () banked
 14657  003230  511A               	movf	_BMP280_calib& (0+255),w,b
 14658  003232  6E1D               	movwf	??_BMP280_readTemperature^0,c
 14659  003234  511B               	movf	(_BMP280_calib+1)& (0+255),w,b
 14660  003236  6E1E               	movwf	(??_BMP280_readTemperature+1)^0,c
 14661  003238  6A1F               	clrf	(??_BMP280_readTemperature+2)^0,c
 14662  00323A  6A20               	clrf	(??_BMP280_readTemperature+3)^0,c
 14663  00323C  0E10               	movlw	16
 14664  00323E  6E05               	movwf	___aldiv@divisor^0,c
 14665  003240  0E00               	movlw	0
 14666  003242  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14667  003244  0E00               	movlw	0
 14668  003246  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14669  003248  0E00               	movlw	0
 14670  00324A  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14671  00324C  C0CF  F001         	movff	_adc_T,___aldiv@dividend
 14672  003250  C0D0  F002         	movff	_adc_T+1,___aldiv@dividend+1
 14673  003254  C0D1  F003         	movff	_adc_T+2,___aldiv@dividend+2
 14674  003258  C0D2  F004         	movff	_adc_T+3,___aldiv@dividend+3
 14675  00325C  EC7F  F020         	call	___aldiv	;wreg free
 14676  003260  501D               	movf	??_BMP280_readTemperature^0,w,c
 14677  003262  5C01               	subwf	?___aldiv^0,w,c
 14678  003264  6E0F               	movwf	___lmul@multiplier^0,c
 14679  003266  501E               	movf	(??_BMP280_readTemperature+1)^0,w,c
 14680  003268  5802               	subwfb	(?___aldiv+1)^0,w,c
 14681  00326A  6E10               	movwf	(___lmul@multiplier+1)^0,c
 14682  00326C  501F               	movf	(??_BMP280_readTemperature+2)^0,w,c
 14683  00326E  5803               	subwfb	(?___aldiv+2)^0,w,c
 14684  003270  6E11               	movwf	(___lmul@multiplier+2)^0,c
 14685  003272  5020               	movf	(??_BMP280_readTemperature+3)^0,w,c
 14686  003274  5804               	subwfb	(?___aldiv+3)^0,w,c
 14687  003276  6E12               	movwf	(___lmul@multiplier+3)^0,c
 14688  003278  0101               	movlb	1	; () banked
 14689  00327A  511A               	movf	_BMP280_calib& (0+255),w,b
 14690  00327C  6E21               	movwf	(??_BMP280_readTemperature+4)^0,c
 14691  00327E  511B               	movf	(_BMP280_calib+1)& (0+255),w,b
 14692  003280  6E22               	movwf	(??_BMP280_readTemperature+5)^0,c
 14693  003282  6A23               	clrf	(??_BMP280_readTemperature+6)^0,c
 14694  003284  6A24               	clrf	(??_BMP280_readTemperature+7)^0,c
 14695  003286  0E10               	movlw	16
 14696  003288  6E05               	movwf	___aldiv@divisor^0,c
 14697  00328A  0E00               	movlw	0
 14698  00328C  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14699  00328E  0E00               	movlw	0
 14700  003290  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14701  003292  0E00               	movlw	0
 14702  003294  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14703  003296  C0CF  F001         	movff	_adc_T,___aldiv@dividend
 14704  00329A  C0D0  F002         	movff	_adc_T+1,___aldiv@dividend+1
 14705  00329E  C0D1  F003         	movff	_adc_T+2,___aldiv@dividend+2
 14706  0032A2  C0D2  F004         	movff	_adc_T+3,___aldiv@dividend+3
 14707  0032A6  EC7F  F020         	call	___aldiv	;wreg free
 14708  0032AA  5021               	movf	(??_BMP280_readTemperature+4)^0,w,c
 14709  0032AC  5C01               	subwf	?___aldiv^0,w,c
 14710  0032AE  6E13               	movwf	___lmul@multiplicand^0,c
 14711  0032B0  5022               	movf	(??_BMP280_readTemperature+5)^0,w,c
 14712  0032B2  5802               	subwfb	(?___aldiv+1)^0,w,c
 14713  0032B4  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 14714  0032B6  5023               	movf	(??_BMP280_readTemperature+6)^0,w,c
 14715  0032B8  5803               	subwfb	(?___aldiv+2)^0,w,c
 14716  0032BA  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14717  0032BC  5024               	movf	(??_BMP280_readTemperature+7)^0,w,c
 14718  0032BE  5804               	subwfb	(?___aldiv+3)^0,w,c
 14719  0032C0  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14720  0032C2  ECAE  F028         	call	___lmul	;wreg free
 14721  0032C6  C00F  F029         	movff	?___lmul,_BMP280_readTemperature$2564
 14722  0032CA  C010  F02A         	movff	?___lmul+1,_BMP280_readTemperature$2564+1
 14723  0032CE  C011  F02B         	movff	?___lmul+2,_BMP280_readTemperature$2564+2
 14724  0032D2  C012  F02C         	movff	?___lmul+3,_BMP280_readTemperature$2564+3
 14725  0032D6                     
 14726                           ;bmp280_lib.c: 149:     var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
 14727  0032D6  0E00               	movlw	0
 14728  0032D8  6E05               	movwf	___aldiv@divisor^0,c
 14729  0032DA  0E10               	movlw	16
 14730  0032DC  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14731  0032DE  0E00               	movlw	0
 14732  0032E0  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14733  0032E2  0E00               	movlw	0
 14734  0032E4  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14735  0032E6  C029  F001         	movff	_BMP280_readTemperature$2564,___aldiv@dividend
 14736  0032EA  C02A  F002         	movff	_BMP280_readTemperature$2564+1,___aldiv@dividend+1
 14737  0032EE  C02B  F003         	movff	_BMP280_readTemperature$2564+2,___aldiv@dividend+2
 14738  0032F2  C02C  F004         	movff	_BMP280_readTemperature$2564+3,___aldiv@dividend+3
 14739  0032F6  EC7F  F020         	call	___aldiv	;wreg free
 14740  0032FA  C001  F00F         	movff	?___aldiv,___lmul@multiplier
 14741  0032FE  C002  F010         	movff	?___aldiv+1,___lmul@multiplier+1
 14742  003302  C003  F011         	movff	?___aldiv+2,___lmul@multiplier+2
 14743  003306  C004  F012         	movff	?___aldiv+3,___lmul@multiplier+3
 14744  00330A  EE21  F01E         	lfsr	2,_BMP280_calib+4
 14745  00330E  CFDE F013          	movff	postinc2,___lmul@multiplicand
 14746  003312  CFDD F014          	movff	postdec2,___lmul@multiplicand+1
 14747  003316  0E00               	movlw	0
 14748  003318  BE14               	btfsc	(___lmul@multiplicand+1)^0,7,c
 14749  00331A  0EFF               	movlw	-1
 14750  00331C  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14751  00331E  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14752  003320  ECAE  F028         	call	___lmul	;wreg free
 14753  003324  C00F  F025         	movff	?___lmul,_BMP280_readTemperature$2565
 14754  003328  C010  F026         	movff	?___lmul+1,_BMP280_readTemperature$2565+1
 14755  00332C  C011  F027         	movff	?___lmul+2,_BMP280_readTemperature$2565+2
 14756  003330  C012  F028         	movff	?___lmul+3,_BMP280_readTemperature$2565+3
 14757                           
 14758                           ;bmp280_lib.c: 149:     var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
 14759  003334  C025  F001         	movff	_BMP280_readTemperature$2565,___aldiv@dividend
 14760  003338  C026  F002         	movff	_BMP280_readTemperature$2565+1,___aldiv@dividend+1
 14761  00333C  C027  F003         	movff	_BMP280_readTemperature$2565+2,___aldiv@dividend+2
 14762  003340  C028  F004         	movff	_BMP280_readTemperature$2565+3,___aldiv@dividend+3
 14763  003344  0E00               	movlw	0
 14764  003346  6E05               	movwf	___aldiv@divisor^0,c
 14765  003348  0E40               	movlw	64
 14766  00334A  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14767  00334C  0E00               	movlw	0
 14768  00334E  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14769  003350  0E00               	movlw	0
 14770  003352  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14771  003354  EC7F  F020         	call	___aldiv	;wreg free
 14772  003358  C001  F0C3         	movff	?___aldiv,_var2
 14773  00335C  C002  F0C4         	movff	?___aldiv+1,_var2+1
 14774  003360  C003  F0C5         	movff	?___aldiv+2,_var2+2
 14775  003364  C004  F0C6         	movff	?___aldiv+3,_var2+3
 14776  003368                     
 14777                           ;bmp280_lib.c: 153:     t_fine = var1 + var2;
 14778  003368  0100               	movlb	0	; () banked
 14779  00336A  51C3               	movf	_var2& (0+255),w,b
 14780  00336C  25C7               	addwf	_var1& (0+255),w,b
 14781  00336E  6FCB               	movwf	_t_fine& (0+255),b
 14782  003370  51C4               	movf	(_var2+1)& (0+255),w,b
 14783  003372  21C8               	addwfc	(_var1+1)& (0+255),w,b
 14784  003374  6FCC               	movwf	(_t_fine+1)& (0+255),b
 14785  003376  51C5               	movf	(_var2+2)& (0+255),w,b
 14786  003378  21C9               	addwfc	(_var1+2)& (0+255),w,b
 14787  00337A  6FCD               	movwf	(_t_fine+2)& (0+255),b
 14788  00337C  51C6               	movf	(_var2+3)& (0+255),w,b
 14789  00337E  21CA               	addwfc	(_var1+3)& (0+255),w,b
 14790  003380  6FCE               	movwf	(_t_fine+3)& (0+255),b
 14791  003382                     
 14792                           ; BSR set to: 0
 14793                           ;bmp280_lib.c: 155:     *temp = (t_fine * 5 + 128) / 256;
 14794  003382  C0CB  F00F         	movff	_t_fine,___lmul@multiplier
 14795  003386  C0CC  F010         	movff	_t_fine+1,___lmul@multiplier+1
 14796  00338A  C0CD  F011         	movff	_t_fine+2,___lmul@multiplier+2
 14797  00338E  C0CE  F012         	movff	_t_fine+3,___lmul@multiplier+3
 14798  003392  0E05               	movlw	5
 14799  003394  6E13               	movwf	___lmul@multiplicand^0,c
 14800  003396  0E00               	movlw	0
 14801  003398  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 14802  00339A  0E00               	movlw	0
 14803  00339C  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14804  00339E  0E00               	movlw	0
 14805  0033A0  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14806  0033A2  ECAE  F028         	call	___lmul	;wreg free
 14807  0033A6  0E80               	movlw	128
 14808  0033A8  240F               	addwf	?___lmul^0,w,c
 14809  0033AA  6E01               	movwf	___aldiv@dividend^0,c
 14810  0033AC  0E00               	movlw	0
 14811  0033AE  2010               	addwfc	(?___lmul+1)^0,w,c
 14812  0033B0  6E02               	movwf	(___aldiv@dividend+1)^0,c
 14813  0033B2  0E00               	movlw	0
 14814  0033B4  2011               	addwfc	(?___lmul+2)^0,w,c
 14815  0033B6  6E03               	movwf	(___aldiv@dividend+2)^0,c
 14816  0033B8  0E00               	movlw	0
 14817  0033BA  2012               	addwfc	(?___lmul+3)^0,w,c
 14818  0033BC  6E04               	movwf	(___aldiv@dividend+3)^0,c
 14819  0033BE  0E00               	movlw	0
 14820  0033C0  6E05               	movwf	___aldiv@divisor^0,c
 14821  0033C2  0E01               	movlw	1
 14822  0033C4  6E06               	movwf	(___aldiv@divisor+1)^0,c
 14823  0033C6  0E00               	movlw	0
 14824  0033C8  6E07               	movwf	(___aldiv@divisor+2)^0,c
 14825  0033CA  0E00               	movlw	0
 14826  0033CC  6E08               	movwf	(___aldiv@divisor+3)^0,c
 14827  0033CE  EC7F  F020         	call	___aldiv	;wreg free
 14828  0033D2  C01B  FFD9         	movff	BMP280_readTemperature@temp,fsr2l
 14829  0033D6  C01C  FFDA         	movff	BMP280_readTemperature@temp+1,fsr2h
 14830  0033DA  C001  FFDE         	movff	?___aldiv,postinc2
 14831  0033DE  C002  FFDE         	movff	?___aldiv+1,postinc2
 14832  0033E2  C003  FFDE         	movff	?___aldiv+2,postinc2
 14833  0033E6  C004  FFDE         	movff	?___aldiv+3,postinc2
 14834  0033EA  0012               	return		;funcret
 14835  0033EC                     __end_of_BMP280_readTemperature:
 14836                           	callstack 0
 14837                           
 14838 ;; *************** function _BMP280_Update *****************
 14839 ;; Defined at:
 14840 ;;		line 103 in file "bmp280_lib.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;		None
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;  ret             4    5[COMRAM] struct .
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  1    wreg      void 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2, status,0, cstack
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14854 ;;      Params:         0       0       0       0       0       0       0       0       0
 14855 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14856 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14857 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14858 ;;Total ram usage:        8 bytes
 14859 ;; Hardware stack levels used: 1
 14860 ;; Hardware stack levels required when called: 3
 14861 ;; This function calls:
 14862 ;;		_I2C_Rx_ack
 14863 ;;		_I2C_Rx_data
 14864 ;;		_I2C_Rx_nack
 14865 ;;		_I2C_Tx_data
 14866 ;;		_I2C_start
 14867 ;;		_I2C_stop
 14868 ;; This function is called by:
 14869 ;;		_BMP280_readTemperature
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text60
 14874  0047E4                     __ptext60:
 14875                           	callstack 0
 14876  0047E4                     _BMP280_Update:
 14877                           	callstack 26
 14878  0047E4                     
 14879                           ;bmp280_lib.c: 109:     } ret;;bmp280_lib.c: 110:     ret.b[3] = 0x00;
 14880  0047E4  0E00               	movlw	0
 14881  0047E6  6E09               	movwf	(BMP280_Update@ret+3)^0,c
 14882  0047E8                     
 14883                           ;bmp280_lib.c: 112:     I2C_start();
 14884  0047E8  ECA4  F02C         	call	_I2C_start	;wreg free
 14885  0047EC                     
 14886                           ;bmp280_lib.c: 113:     I2C_Tx_data(0xEC);
 14887  0047EC  0EEC               	movlw	236
 14888  0047EE  ECC1  F02B         	call	_I2C_Tx_data
 14889  0047F2                     
 14890                           ;bmp280_lib.c: 114:     I2C_Tx_data(0xF7);
 14891  0047F2  0EF7               	movlw	247
 14892  0047F4  ECC1  F02B         	call	_I2C_Tx_data
 14893  0047F8                     
 14894                           ;bmp280_lib.c: 115:     I2C_stop();
 14895  0047F8  EC83  F02C         	call	_I2C_stop	;wreg free
 14896  0047FC                     
 14897                           ;bmp280_lib.c: 116:     I2C_start();
 14898  0047FC  ECA4  F02C         	call	_I2C_start	;wreg free
 14899  004800                     
 14900                           ;bmp280_lib.c: 117:     I2C_Tx_data(0xEC | 1);
 14901  004800  0EED               	movlw	237
 14902  004802  ECC1  F02B         	call	_I2C_Tx_data
 14903  004806                     
 14904                           ;bmp280_lib.c: 118:     ret.b[2] = I2C_Rx_data();
 14905  004806  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14906  00480A  6E08               	movwf	(BMP280_Update@ret+2)^0,c
 14907  00480C                     
 14908                           ;bmp280_lib.c: 119:     I2C_Rx_ack();
 14909  00480C  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 14910  004810                     
 14911                           ;bmp280_lib.c: 120:     ret.b[1] = I2C_Rx_data();
 14912  004810  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14913  004814  6E07               	movwf	(BMP280_Update@ret+1)^0,c
 14914  004816                     
 14915                           ;bmp280_lib.c: 121:     I2C_Rx_ack();
 14916  004816  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 14917  00481A                     
 14918                           ;bmp280_lib.c: 122:     ret.b[0] = I2C_Rx_data();
 14919  00481A  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14920  00481E  6E06               	movwf	BMP280_Update@ret^0,c
 14921  004820                     
 14922                           ;bmp280_lib.c: 123:     I2C_Rx_ack();
 14923  004820  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 14924  004824                     
 14925                           ;bmp280_lib.c: 125:     adc_P = (ret.dw >> 4) & 0xFFFFF;
 14926  004824  C006  F002         	movff	BMP280_Update@ret,??_BMP280_Update
 14927  004828  C007  F003         	movff	BMP280_Update@ret+1,??_BMP280_Update+1
 14928  00482C  C008  F004         	movff	BMP280_Update@ret+2,??_BMP280_Update+2
 14929  004830  C009  F005         	movff	BMP280_Update@ret+3,??_BMP280_Update+3
 14930  004834  0E05               	movlw	5
 14931  004836  EF22  F024         	goto	u5750
 14932  00483A                     u5755:
 14933  00483A  90D8               	bcf	status,0,c
 14934  00483C  3205               	rrcf	(??_BMP280_Update+3)^0,f,c
 14935  00483E  3204               	rrcf	(??_BMP280_Update+2)^0,f,c
 14936  004840  3203               	rrcf	(??_BMP280_Update+1)^0,f,c
 14937  004842  3202               	rrcf	??_BMP280_Update^0,f,c
 14938  004844                     u5750:
 14939  004844  2EE8               	decfsz	wreg,f,c
 14940  004846  EF1D  F024         	goto	u5755
 14941  00484A  0EFF               	movlw	255
 14942  00484C  1402               	andwf	??_BMP280_Update^0,w,c
 14943  00484E  0101               	movlb	1	; () banked
 14944  004850  6F08               	movwf	_adc_P& (0+255),b
 14945  004852  0EFF               	movlw	255
 14946  004854  1403               	andwf	(??_BMP280_Update+1)^0,w,c
 14947  004856  6F09               	movwf	(_adc_P+1)& (0+255),b
 14948  004858  0E0F               	movlw	15
 14949  00485A  1404               	andwf	(??_BMP280_Update+2)^0,w,c
 14950  00485C  6F0A               	movwf	(_adc_P+2)& (0+255),b
 14951  00485E  0E00               	movlw	0
 14952  004860  1405               	andwf	(??_BMP280_Update+3)^0,w,c
 14953  004862  6F0B               	movwf	(_adc_P+3)& (0+255),b
 14954  004864                     
 14955                           ; BSR set to: 1
 14956                           ;bmp280_lib.c: 127:     ret.b[2] = I2C_Rx_data();
 14957  004864  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14958  004868  6E08               	movwf	(BMP280_Update@ret+2)^0,c
 14959  00486A                     
 14960                           ;bmp280_lib.c: 128:     I2C_Rx_ack();
 14961  00486A  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 14962  00486E                     
 14963                           ;bmp280_lib.c: 129:     ret.b[1] = I2C_Rx_data();
 14964  00486E  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14965  004872  6E07               	movwf	(BMP280_Update@ret+1)^0,c
 14966  004874                     
 14967                           ;bmp280_lib.c: 130:     I2C_Rx_ack();
 14968  004874  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 14969  004878                     
 14970                           ;bmp280_lib.c: 131:     ret.b[0] = I2C_Rx_data();
 14971  004878  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 14972  00487C  6E06               	movwf	BMP280_Update@ret^0,c
 14973  00487E                     
 14974                           ;bmp280_lib.c: 132:     I2C_Rx_nack();
 14975  00487E  EC8E  F02C         	call	_I2C_Rx_nack	;wreg free
 14976  004882                     
 14977                           ;bmp280_lib.c: 133:     I2C_stop();
 14978  004882  EC83  F02C         	call	_I2C_stop	;wreg free
 14979  004886                     
 14980                           ;bmp280_lib.c: 135:     adc_T = (ret.dw >> 4) & 0xFFFFF;
 14981  004886  C006  F002         	movff	BMP280_Update@ret,??_BMP280_Update
 14982  00488A  C007  F003         	movff	BMP280_Update@ret+1,??_BMP280_Update+1
 14983  00488E  C008  F004         	movff	BMP280_Update@ret+2,??_BMP280_Update+2
 14984  004892  C009  F005         	movff	BMP280_Update@ret+3,??_BMP280_Update+3
 14985  004896  0E05               	movlw	5
 14986  004898  EF53  F024         	goto	u5760
 14987  00489C                     u5765:
 14988  00489C  90D8               	bcf	status,0,c
 14989  00489E  3205               	rrcf	(??_BMP280_Update+3)^0,f,c
 14990  0048A0  3204               	rrcf	(??_BMP280_Update+2)^0,f,c
 14991  0048A2  3203               	rrcf	(??_BMP280_Update+1)^0,f,c
 14992  0048A4  3202               	rrcf	??_BMP280_Update^0,f,c
 14993  0048A6                     u5760:
 14994  0048A6  2EE8               	decfsz	wreg,f,c
 14995  0048A8  EF4E  F024         	goto	u5765
 14996  0048AC  0EFF               	movlw	255
 14997  0048AE  1402               	andwf	??_BMP280_Update^0,w,c
 14998  0048B0  0100               	movlb	0	; () banked
 14999  0048B2  6FCF               	movwf	_adc_T& (0+255),b
 15000  0048B4  0EFF               	movlw	255
 15001  0048B6  1403               	andwf	(??_BMP280_Update+1)^0,w,c
 15002  0048B8  6FD0               	movwf	(_adc_T+1)& (0+255),b
 15003  0048BA  0E0F               	movlw	15
 15004  0048BC  1404               	andwf	(??_BMP280_Update+2)^0,w,c
 15005  0048BE  6FD1               	movwf	(_adc_T+2)& (0+255),b
 15006  0048C0  0E00               	movlw	0
 15007  0048C2  1405               	andwf	(??_BMP280_Update+3)^0,w,c
 15008  0048C4  6FD2               	movwf	(_adc_T+3)& (0+255),b
 15009  0048C6                     
 15010                           ; BSR set to: 0
 15011  0048C6  0012               	return		;funcret
 15012  0048C8                     __end_of_BMP280_Update:
 15013                           	callstack 0
 15014                           
 15015 ;; *************** function _BMP280_readPressure *****************
 15016 ;; Defined at:
 15017 ;;		line 164 in file "bmp280_lib.c"
 15018 ;; Parameters:    Size  Location     Type
 15019 ;;  pres            2   26[COMRAM] PTR unsigned long 
 15020 ;;		 -> pres(4), 
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      _Bool 
 15025 ;; Registers used:
 15026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15032 ;;      Params:         2       0       0       0       0       0       0       0       0
 15033 ;;      Locals:        16       0       0       0       0       0       0       0       0
 15034 ;;      Temps:          8       0       0       0       0       0       0       0       0
 15035 ;;      Totals:        26       0       0       0       0       0       0       0       0
 15036 ;;Total ram usage:       26 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 2
 15039 ;; This function calls:
 15040 ;;		___aldiv
 15041 ;;		___lldiv
 15042 ;;		___lmul
 15043 ;; This function is called by:
 15044 ;;		_main
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text61
 15049  001858                     __ptext61:
 15050                           	callstack 0
 15051  001858                     _BMP280_readPressure:
 15052                           	callstack 28
 15053  001858                     
 15054                           ;bmp280_lib.c: 164: _Bool BMP280_readPressure(uint32_t *pres);bmp280_lib.c: 165: {;bmp28
      +                          0_lib.c: 167:     var1 = (((int32_t)t_fine) / 2) - 64000;
 15055  001858  C0CB  F001         	movff	_t_fine,___aldiv@dividend
 15056  00185C  C0CC  F002         	movff	_t_fine+1,___aldiv@dividend+1
 15057  001860  C0CD  F003         	movff	_t_fine+2,___aldiv@dividend+2
 15058  001864  C0CE  F004         	movff	_t_fine+3,___aldiv@dividend+3
 15059  001868  0E02               	movlw	2
 15060  00186A  6E05               	movwf	___aldiv@divisor^0,c
 15061  00186C  0E00               	movlw	0
 15062  00186E  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15063  001870  0E00               	movlw	0
 15064  001872  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15065  001874  0E00               	movlw	0
 15066  001876  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15067  001878  EC7F  F020         	call	___aldiv	;wreg free
 15068  00187C  0E00               	movlw	0
 15069  00187E  2401               	addwf	?___aldiv^0,w,c
 15070  001880  0100               	movlb	0	; () banked
 15071  001882  6FC7               	movwf	_var1& (0+255),b
 15072  001884  0E06               	movlw	6
 15073  001886  2002               	addwfc	(?___aldiv+1)^0,w,c
 15074  001888  6FC8               	movwf	(_var1+1)& (0+255),b
 15075  00188A  0EFF               	movlw	255
 15076  00188C  2003               	addwfc	(?___aldiv+2)^0,w,c
 15077  00188E  6FC9               	movwf	(_var1+2)& (0+255),b
 15078  001890  0EFF               	movlw	255
 15079  001892  2004               	addwfc	(?___aldiv+3)^0,w,c
 15080  001894  6FCA               	movwf	(_var1+3)& (0+255),b
 15081                           
 15082                           ;bmp280_lib.c: 168:     var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.
      +                          dig_P6);
 15083  001896  0E04               	movlw	4
 15084  001898  6E05               	movwf	___aldiv@divisor^0,c
 15085  00189A  0E00               	movlw	0
 15086  00189C  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15087  00189E  0E00               	movlw	0
 15088  0018A0  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15089  0018A2  0E00               	movlw	0
 15090  0018A4  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15091  0018A6  C0C7  F001         	movff	_var1,___aldiv@dividend
 15092  0018AA  C0C8  F002         	movff	_var1+1,___aldiv@dividend+1
 15093  0018AE  C0C9  F003         	movff	_var1+2,___aldiv@dividend+2
 15094  0018B2  C0CA  F004         	movff	_var1+3,___aldiv@dividend+3
 15095  0018B6  EC7F  F020         	call	___aldiv	;wreg free
 15096  0018BA  C001  F00F         	movff	?___aldiv,___lmul@multiplier
 15097  0018BE  C002  F010         	movff	?___aldiv+1,___lmul@multiplier+1
 15098  0018C2  C003  F011         	movff	?___aldiv+2,___lmul@multiplier+2
 15099  0018C6  C004  F012         	movff	?___aldiv+3,___lmul@multiplier+3
 15100  0018CA  0E04               	movlw	4
 15101  0018CC  6E05               	movwf	___aldiv@divisor^0,c
 15102  0018CE  0E00               	movlw	0
 15103  0018D0  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15104  0018D2  0E00               	movlw	0
 15105  0018D4  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15106  0018D6  0E00               	movlw	0
 15107  0018D8  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15108  0018DA  C0C7  F001         	movff	_var1,___aldiv@dividend
 15109  0018DE  C0C8  F002         	movff	_var1+1,___aldiv@dividend+1
 15110  0018E2  C0C9  F003         	movff	_var1+2,___aldiv@dividend+2
 15111  0018E6  C0CA  F004         	movff	_var1+3,___aldiv@dividend+3
 15112  0018EA  EC7F  F020         	call	___aldiv	;wreg free
 15113  0018EE  C001  F013         	movff	?___aldiv,___lmul@multiplicand
 15114  0018F2  C002  F014         	movff	?___aldiv+1,___lmul@multiplicand+1
 15115  0018F6  C003  F015         	movff	?___aldiv+2,___lmul@multiplicand+2
 15116  0018FA  C004  F016         	movff	?___aldiv+3,___lmul@multiplicand+3
 15117  0018FE  ECAE  F028         	call	___lmul	;wreg free
 15118  001902  C00F  F031         	movff	?___lmul,_BMP280_readPressure$2566
 15119  001906  C010  F032         	movff	?___lmul+1,_BMP280_readPressure$2566+1
 15120  00190A  C011  F033         	movff	?___lmul+2,_BMP280_readPressure$2566+2
 15121  00190E  C012  F034         	movff	?___lmul+3,_BMP280_readPressure$2566+3
 15122  001912                     
 15123                           ;bmp280_lib.c: 168:     var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.
      +                          dig_P6);
 15124  001912  0E00               	movlw	0
 15125  001914  6E05               	movwf	___aldiv@divisor^0,c
 15126  001916  0E08               	movlw	8
 15127  001918  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15128  00191A  0E00               	movlw	0
 15129  00191C  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15130  00191E  0E00               	movlw	0
 15131  001920  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15132  001922  C031  F001         	movff	_BMP280_readPressure$2566,___aldiv@dividend
 15133  001926  C032  F002         	movff	_BMP280_readPressure$2566+1,___aldiv@dividend+1
 15134  00192A  C033  F003         	movff	_BMP280_readPressure$2566+2,___aldiv@dividend+2
 15135  00192E  C034  F004         	movff	_BMP280_readPressure$2566+3,___aldiv@dividend+3
 15136  001932  EC7F  F020         	call	___aldiv	;wreg free
 15137  001936  C001  F00F         	movff	?___aldiv,___lmul@multiplier
 15138  00193A  C002  F010         	movff	?___aldiv+1,___lmul@multiplier+1
 15139  00193E  C003  F011         	movff	?___aldiv+2,___lmul@multiplier+2
 15140  001942  C004  F012         	movff	?___aldiv+3,___lmul@multiplier+3
 15141  001946  EE21  F02A         	lfsr	2,_BMP280_calib+16
 15142  00194A  CFDE F013          	movff	postinc2,___lmul@multiplicand
 15143  00194E  CFDD F014          	movff	postdec2,___lmul@multiplicand+1
 15144  001952  0E00               	movlw	0
 15145  001954  BE14               	btfsc	(___lmul@multiplicand+1)^0,7,c
 15146  001956  0EFF               	movlw	-1
 15147  001958  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 15148  00195A  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 15149  00195C  ECAE  F028         	call	___lmul	;wreg free
 15150  001960  C00F  F0C3         	movff	?___lmul,_var2
 15151  001964  C010  F0C4         	movff	?___lmul+1,_var2+1
 15152  001968  C011  F0C5         	movff	?___lmul+2,_var2+2
 15153  00196C  C012  F0C6         	movff	?___lmul+3,_var2+3
 15154  001970                     
 15155                           ;bmp280_lib.c: 170:     var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
 15156  001970  EE21  F028         	lfsr	2,_BMP280_calib+14
 15157  001974  CFDE F00F          	movff	postinc2,___lmul@multiplier
 15158  001978  CFDD F010          	movff	postdec2,___lmul@multiplier+1
 15159  00197C  0E00               	movlw	0
 15160  00197E  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 15161  001980  0EFF               	movlw	-1
 15162  001982  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15163  001984  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15164  001986  C0C7  F013         	movff	_var1,___lmul@multiplicand
 15165  00198A  C0C8  F014         	movff	_var1+1,___lmul@multiplicand+1
 15166  00198E  C0C9  F015         	movff	_var1+2,___lmul@multiplicand+2
 15167  001992  C0CA  F016         	movff	_var1+3,___lmul@multiplicand+3
 15168  001996  ECAE  F028         	call	___lmul	;wreg free
 15169  00199A  90D8               	bcf	status,0,c
 15170  00199C  340F               	rlcf	?___lmul^0,w,c
 15171  00199E  6E1D               	movwf	??_BMP280_readPressure^0,c
 15172  0019A0  3410               	rlcf	(?___lmul+1)^0,w,c
 15173  0019A2  6E1E               	movwf	(??_BMP280_readPressure+1)^0,c
 15174  0019A4  3411               	rlcf	(?___lmul+2)^0,w,c
 15175  0019A6  6E1F               	movwf	(??_BMP280_readPressure+2)^0,c
 15176  0019A8  3412               	rlcf	(?___lmul+3)^0,w,c
 15177  0019AA  6E20               	movwf	(??_BMP280_readPressure+3)^0,c
 15178  0019AC  0100               	movlb	0	; () banked
 15179  0019AE  51C3               	movf	_var2& (0+255),w,b
 15180  0019B0  241D               	addwf	??_BMP280_readPressure^0,w,c
 15181  0019B2  6FC3               	movwf	_var2& (0+255),b
 15182  0019B4  51C4               	movf	(_var2+1)& (0+255),w,b
 15183  0019B6  201E               	addwfc	(??_BMP280_readPressure+1)^0,w,c
 15184  0019B8  6FC4               	movwf	(_var2+1)& (0+255),b
 15185  0019BA  51C5               	movf	(_var2+2)& (0+255),w,b
 15186  0019BC  201F               	addwfc	(??_BMP280_readPressure+2)^0,w,c
 15187  0019BE  6FC5               	movwf	(_var2+2)& (0+255),b
 15188  0019C0  51C6               	movf	(_var2+3)& (0+255),w,b
 15189  0019C2  2020               	addwfc	(??_BMP280_readPressure+3)^0,w,c
 15190  0019C4  6FC6               	movwf	(_var2+3)& (0+255),b
 15191                           
 15192                           ;bmp280_lib.c: 171:     var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
 15193  0019C6  0101               	movlb	1	; () banked
 15194  0019C8  5126               	movf	(_BMP280_calib+12)& (0+255),w,b
 15195  0019CA  6E1D               	movwf	??_BMP280_readPressure^0,c
 15196  0019CC  5127               	movf	(_BMP280_calib+13)& (0+255),w,b
 15197  0019CE  6E1E               	movwf	(??_BMP280_readPressure+1)^0,c
 15198  0019D0  6A1F               	clrf	(??_BMP280_readPressure+2)^0,c
 15199  0019D2  6A20               	clrf	(??_BMP280_readPressure+3)^0,c
 15200  0019D4  C01E  F020         	movff	??_BMP280_readPressure+1,??_BMP280_readPressure+3
 15201  0019D8  C01D  F01F         	movff	??_BMP280_readPressure,??_BMP280_readPressure+2
 15202  0019DC  6A1E               	clrf	(??_BMP280_readPressure+1)^0,c
 15203  0019DE  6A1D               	clrf	??_BMP280_readPressure^0,c
 15204  0019E0  C0C3  F001         	movff	_var2,___aldiv@dividend
 15205  0019E4  C0C4  F002         	movff	_var2+1,___aldiv@dividend+1
 15206  0019E8  C0C5  F003         	movff	_var2+2,___aldiv@dividend+2
 15207  0019EC  C0C6  F004         	movff	_var2+3,___aldiv@dividend+3
 15208  0019F0  0E04               	movlw	4
 15209  0019F2  6E05               	movwf	___aldiv@divisor^0,c
 15210  0019F4  0E00               	movlw	0
 15211  0019F6  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15212  0019F8  0E00               	movlw	0
 15213  0019FA  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15214  0019FC  0E00               	movlw	0
 15215  0019FE  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15216  001A00  EC7F  F020         	call	___aldiv	;wreg free
 15217  001A04  501D               	movf	??_BMP280_readPressure^0,w,c
 15218  001A06  2401               	addwf	?___aldiv^0,w,c
 15219  001A08  0100               	movlb	0	; () banked
 15220  001A0A  6FC3               	movwf	_var2& (0+255),b
 15221  001A0C  501E               	movf	(??_BMP280_readPressure+1)^0,w,c
 15222  001A0E  2002               	addwfc	(?___aldiv+1)^0,w,c
 15223  001A10  6FC4               	movwf	(_var2+1)& (0+255),b
 15224  001A12  501F               	movf	(??_BMP280_readPressure+2)^0,w,c
 15225  001A14  2003               	addwfc	(?___aldiv+2)^0,w,c
 15226  001A16  6FC5               	movwf	(_var2+2)& (0+255),b
 15227  001A18  5020               	movf	(??_BMP280_readPressure+3)^0,w,c
 15228  001A1A  2004               	addwfc	(?___aldiv+3)^0,w,c
 15229  001A1C  6FC6               	movwf	(_var2+3)& (0+255),b
 15230                           
 15231                           ;bmp280_lib.c: 173:     var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) 
      +                          / 8192 )) / 8) +
 15232  001A1E  0E04               	movlw	4
 15233  001A20  6E05               	movwf	___aldiv@divisor^0,c
 15234  001A22  0E00               	movlw	0
 15235  001A24  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15236  001A26  0E00               	movlw	0
 15237  001A28  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15238  001A2A  0E00               	movlw	0
 15239  001A2C  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15240  001A2E  C0C7  F001         	movff	_var1,___aldiv@dividend
 15241  001A32  C0C8  F002         	movff	_var1+1,___aldiv@dividend+1
 15242  001A36  C0C9  F003         	movff	_var1+2,___aldiv@dividend+2
 15243  001A3A  C0CA  F004         	movff	_var1+3,___aldiv@dividend+3
 15244  001A3E  EC7F  F020         	call	___aldiv	;wreg free
 15245  001A42  C001  F00F         	movff	?___aldiv,___lmul@multiplier
 15246  001A46  C002  F010         	movff	?___aldiv+1,___lmul@multiplier+1
 15247  001A4A  C003  F011         	movff	?___aldiv+2,___lmul@multiplier+2
 15248  001A4E  C004  F012         	movff	?___aldiv+3,___lmul@multiplier+3
 15249  001A52  0E04               	movlw	4
 15250  001A54  6E05               	movwf	___aldiv@divisor^0,c
 15251  001A56  0E00               	movlw	0
 15252  001A58  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15253  001A5A  0E00               	movlw	0
 15254  001A5C  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15255  001A5E  0E00               	movlw	0
 15256  001A60  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15257  001A62  C0C7  F001         	movff	_var1,___aldiv@dividend
 15258  001A66  C0C8  F002         	movff	_var1+1,___aldiv@dividend+1
 15259  001A6A  C0C9  F003         	movff	_var1+2,___aldiv@dividend+2
 15260  001A6E  C0CA  F004         	movff	_var1+3,___aldiv@dividend+3
 15261  001A72  EC7F  F020         	call	___aldiv	;wreg free
 15262  001A76  C001  F013         	movff	?___aldiv,___lmul@multiplicand
 15263  001A7A  C002  F014         	movff	?___aldiv+1,___lmul@multiplicand+1
 15264  001A7E  C003  F015         	movff	?___aldiv+2,___lmul@multiplicand+2
 15265  001A82  C004  F016         	movff	?___aldiv+3,___lmul@multiplicand+3
 15266  001A86  ECAE  F028         	call	___lmul	;wreg free
 15267  001A8A  C00F  F031         	movff	?___lmul,_BMP280_readPressure$2566
 15268  001A8E  C010  F032         	movff	?___lmul+1,_BMP280_readPressure$2566+1
 15269  001A92  C011  F033         	movff	?___lmul+2,_BMP280_readPressure$2566+2
 15270  001A96  C012  F034         	movff	?___lmul+3,_BMP280_readPressure$2566+3
 15271  001A9A                     
 15272                           ;bmp280_lib.c: 173:     var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) 
      +                          / 8192 )) / 8) +
 15273  001A9A  EE21  F024         	lfsr	2,_BMP280_calib+10
 15274  001A9E  CFDE F00F          	movff	postinc2,___lmul@multiplier
 15275  001AA2  CFDD F010          	movff	postdec2,___lmul@multiplier+1
 15276  001AA6  0E00               	movlw	0
 15277  001AA8  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 15278  001AAA  0EFF               	movlw	-1
 15279  001AAC  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15280  001AAE  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15281  001AB0  0E00               	movlw	0
 15282  001AB2  6E05               	movwf	___aldiv@divisor^0,c
 15283  001AB4  0E20               	movlw	32
 15284  001AB6  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15285  001AB8  0E00               	movlw	0
 15286  001ABA  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15287  001ABC  0E00               	movlw	0
 15288  001ABE  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15289  001AC0  C031  F001         	movff	_BMP280_readPressure$2566,___aldiv@dividend
 15290  001AC4  C032  F002         	movff	_BMP280_readPressure$2566+1,___aldiv@dividend+1
 15291  001AC8  C033  F003         	movff	_BMP280_readPressure$2566+2,___aldiv@dividend+2
 15292  001ACC  C034  F004         	movff	_BMP280_readPressure$2566+3,___aldiv@dividend+3
 15293  001AD0  EC7F  F020         	call	___aldiv	;wreg free
 15294  001AD4  C001  F013         	movff	?___aldiv,___lmul@multiplicand
 15295  001AD8  C002  F014         	movff	?___aldiv+1,___lmul@multiplicand+1
 15296  001ADC  C003  F015         	movff	?___aldiv+2,___lmul@multiplicand+2
 15297  001AE0  C004  F016         	movff	?___aldiv+3,___lmul@multiplicand+3
 15298  001AE4  ECAE  F028         	call	___lmul	;wreg free
 15299  001AE8  C00F  F025         	movff	?___lmul,_BMP280_readPressure$2567
 15300  001AEC  C010  F026         	movff	?___lmul+1,_BMP280_readPressure$2567+1
 15301  001AF0  C011  F027         	movff	?___lmul+2,_BMP280_readPressure$2567+2
 15302  001AF4  C012  F028         	movff	?___lmul+3,_BMP280_readPressure$2567+3
 15303  001AF8                     
 15304                           ;bmp280_lib.c: 173:     var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) 
      +                          / 8192 )) / 8) +
 15305  001AF8  0E08               	movlw	8
 15306  001AFA  6E05               	movwf	___aldiv@divisor^0,c
 15307  001AFC  0E00               	movlw	0
 15308  001AFE  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15309  001B00  0E00               	movlw	0
 15310  001B02  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15311  001B04  0E00               	movlw	0
 15312  001B06  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15313  001B08  C025  F001         	movff	_BMP280_readPressure$2567,___aldiv@dividend
 15314  001B0C  C026  F002         	movff	_BMP280_readPressure$2567+1,___aldiv@dividend+1
 15315  001B10  C027  F003         	movff	_BMP280_readPressure$2567+2,___aldiv@dividend+2
 15316  001B14  C028  F004         	movff	_BMP280_readPressure$2567+3,___aldiv@dividend+3
 15317  001B18  EC7F  F020         	call	___aldiv	;wreg free
 15318  001B1C  C001  F01D         	movff	?___aldiv,??_BMP280_readPressure
 15319  001B20  C002  F01E         	movff	?___aldiv+1,??_BMP280_readPressure+1
 15320  001B24  C003  F01F         	movff	?___aldiv+2,??_BMP280_readPressure+2
 15321  001B28  C004  F020         	movff	?___aldiv+3,??_BMP280_readPressure+3
 15322  001B2C  0E02               	movlw	2
 15323  001B2E  6E05               	movwf	___aldiv@divisor^0,c
 15324  001B30  0E00               	movlw	0
 15325  001B32  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15326  001B34  0E00               	movlw	0
 15327  001B36  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15328  001B38  0E00               	movlw	0
 15329  001B3A  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15330  001B3C  C0C7  F013         	movff	_var1,___lmul@multiplicand
 15331  001B40  C0C8  F014         	movff	_var1+1,___lmul@multiplicand+1
 15332  001B44  C0C9  F015         	movff	_var1+2,___lmul@multiplicand+2
 15333  001B48  C0CA  F016         	movff	_var1+3,___lmul@multiplicand+3
 15334  001B4C  EE21  F022         	lfsr	2,_BMP280_calib+8
 15335  001B50  CFDE F00F          	movff	postinc2,___lmul@multiplier
 15336  001B54  CFDD F010          	movff	postdec2,___lmul@multiplier+1
 15337  001B58  0E00               	movlw	0
 15338  001B5A  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 15339  001B5C  0EFF               	movlw	-1
 15340  001B5E  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15341  001B60  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15342  001B62  ECAE  F028         	call	___lmul	;wreg free
 15343  001B66  C00F  F001         	movff	?___lmul,___aldiv@dividend
 15344  001B6A  C010  F002         	movff	?___lmul+1,___aldiv@dividend+1
 15345  001B6E  C011  F003         	movff	?___lmul+2,___aldiv@dividend+2
 15346  001B72  C012  F004         	movff	?___lmul+3,___aldiv@dividend+3
 15347  001B76  EC7F  F020         	call	___aldiv	;wreg free
 15348  001B7A  5001               	movf	?___aldiv^0,w,c
 15349  001B7C  241D               	addwf	??_BMP280_readPressure^0,w,c
 15350  001B7E  6E29               	movwf	_BMP280_readPressure$2568^0,c
 15351  001B80  5002               	movf	(?___aldiv+1)^0,w,c
 15352  001B82  201E               	addwfc	(??_BMP280_readPressure+1)^0,w,c
 15353  001B84  6E2A               	movwf	(_BMP280_readPressure$2568+1)^0,c
 15354  001B86  5003               	movf	(?___aldiv+2)^0,w,c
 15355  001B88  201F               	addwfc	(??_BMP280_readPressure+2)^0,w,c
 15356  001B8A  6E2B               	movwf	(_BMP280_readPressure$2568+2)^0,c
 15357  001B8C  5004               	movf	(?___aldiv+3)^0,w,c
 15358  001B8E  2020               	addwfc	(??_BMP280_readPressure+3)^0,w,c
 15359  001B90  6E2C               	movwf	(_BMP280_readPressure$2568+3)^0,c
 15360                           
 15361                           ;bmp280_lib.c: 173:     var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) 
      +                          / 8192 )) / 8) +
 15362  001B92  C029  F001         	movff	_BMP280_readPressure$2568,___aldiv@dividend
 15363  001B96  C02A  F002         	movff	_BMP280_readPressure$2568+1,___aldiv@dividend+1
 15364  001B9A  C02B  F003         	movff	_BMP280_readPressure$2568+2,___aldiv@dividend+2
 15365  001B9E  C02C  F004         	movff	_BMP280_readPressure$2568+3,___aldiv@dividend+3
 15366  001BA2  0E00               	movlw	0
 15367  001BA4  6E05               	movwf	___aldiv@divisor^0,c
 15368  001BA6  0E00               	movlw	0
 15369  001BA8  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15370  001BAA  0E04               	movlw	4
 15371  001BAC  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15372  001BAE  0E00               	movlw	0
 15373  001BB0  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15374  001BB2  EC7F  F020         	call	___aldiv	;wreg free
 15375  001BB6  C001  F0C7         	movff	?___aldiv,_var1
 15376  001BBA  C002  F0C8         	movff	?___aldiv+1,_var1+1
 15377  001BBE  C003  F0C9         	movff	?___aldiv+2,_var1+2
 15378  001BC2  C004  F0CA         	movff	?___aldiv+3,_var1+3
 15379                           
 15380                           ;bmp280_lib.c: 176:     var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 327
      +                          68);
 15381  001BC6  0E00               	movlw	0
 15382  001BC8  0100               	movlb	0	; () banked
 15383  001BCA  25C7               	addwf	_var1& (0+255),w,b
 15384  001BCC  6E0F               	movwf	___lmul@multiplier^0,c
 15385  001BCE  0E80               	movlw	128
 15386  001BD0  21C8               	addwfc	(_var1+1)& (0+255),w,b
 15387  001BD2  6E10               	movwf	(___lmul@multiplier+1)^0,c
 15388  001BD4  0E00               	movlw	0
 15389  001BD6  21C9               	addwfc	(_var1+2)& (0+255),w,b
 15390  001BD8  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15391  001BDA  0E00               	movlw	0
 15392  001BDC  21CA               	addwfc	(_var1+3)& (0+255),w,b
 15393  001BDE  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15394  001BE0  C120  F013         	movff	_BMP280_calib+6,___lmul@multiplicand
 15395  001BE4  C121  F014         	movff	_BMP280_calib+7,___lmul@multiplicand+1
 15396  001BE8  6A15               	clrf	(___lmul@multiplicand+2)^0,c
 15397  001BEA  6A16               	clrf	(___lmul@multiplicand+3)^0,c
 15398  001BEC  ECAE  F028         	call	___lmul	;wreg free
 15399  001BF0  C00F  F001         	movff	?___lmul,___aldiv@dividend
 15400  001BF4  C010  F002         	movff	?___lmul+1,___aldiv@dividend+1
 15401  001BF8  C011  F003         	movff	?___lmul+2,___aldiv@dividend+2
 15402  001BFC  C012  F004         	movff	?___lmul+3,___aldiv@dividend+3
 15403  001C00  0E00               	movlw	0
 15404  001C02  6E05               	movwf	___aldiv@divisor^0,c
 15405  001C04  0E80               	movlw	128
 15406  001C06  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15407  001C08  0E00               	movlw	0
 15408  001C0A  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15409  001C0C  0E00               	movlw	0
 15410  001C0E  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15411  001C10  EC7F  F020         	call	___aldiv	;wreg free
 15412  001C14  C001  F0C7         	movff	?___aldiv,_var1
 15413  001C18  C002  F0C8         	movff	?___aldiv+1,_var1+1
 15414  001C1C  C003  F0C9         	movff	?___aldiv+2,_var1+2
 15415  001C20  C004  F0CA         	movff	?___aldiv+3,_var1+3
 15416  001C24                     
 15417                           ;bmp280_lib.c: 178:     if (var1 == 0)
 15418  001C24  0100               	movlb	0	; () banked
 15419  001C26  51C7               	movf	_var1& (0+255),w,b
 15420  001C28  11C8               	iorwf	(_var1+1)& (0+255),w,b
 15421  001C2A  11C9               	iorwf	(_var1+2)& (0+255),w,b
 15422  001C2C  11CA               	iorwf	(_var1+3)& (0+255),w,b
 15423  001C2E  A4D8               	btfss	status,2,c
 15424  001C30  EF1C  F00E         	goto	u6221
 15425  001C34  EF1E  F00E         	goto	u6220
 15426  001C38                     u6221:
 15427  001C38  EF20  F00E         	goto	l6079
 15428  001C3C                     u6220:
 15429  001C3C  EFB1  F00F         	goto	l348
 15430  001C40                     l6079:
 15431                           
 15432                           ; BSR set to: 0
 15433                           ;bmp280_lib.c: 181:     p = (((uint32_t)((1048576) - adc_P) - (uint32_t)(var2 / 4096))) 
      +                          * 3125;
 15434  001C40  0E00               	movlw	0
 15435  001C42  6E05               	movwf	___aldiv@divisor^0,c
 15436  001C44  0E10               	movlw	16
 15437  001C46  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15438  001C48  0E00               	movlw	0
 15439  001C4A  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15440  001C4C  0E00               	movlw	0
 15441  001C4E  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15442  001C50  C0C3  F001         	movff	_var2,___aldiv@dividend
 15443  001C54  C0C4  F002         	movff	_var2+1,___aldiv@dividend+1
 15444  001C58  C0C5  F003         	movff	_var2+2,___aldiv@dividend+2
 15445  001C5C  C0C6  F004         	movff	_var2+3,___aldiv@dividend+3
 15446  001C60  EC7F  F020         	call	___aldiv	;wreg free
 15447  001C64  C108  F01D         	movff	_adc_P,??_BMP280_readPressure
 15448  001C68  C109  F01E         	movff	_adc_P+1,??_BMP280_readPressure+1
 15449  001C6C  C10A  F01F         	movff	_adc_P+2,??_BMP280_readPressure+2
 15450  001C70  C10B  F020         	movff	_adc_P+3,??_BMP280_readPressure+3
 15451  001C74  1E1D               	comf	??_BMP280_readPressure^0,f,c
 15452  001C76  1E1E               	comf	(??_BMP280_readPressure+1)^0,f,c
 15453  001C78  1E1F               	comf	(??_BMP280_readPressure+2)^0,f,c
 15454  001C7A  1E20               	comf	(??_BMP280_readPressure+3)^0,f,c
 15455  001C7C  2A1D               	incf	??_BMP280_readPressure^0,f,c
 15456  001C7E  0E00               	movlw	0
 15457  001C80  221E               	addwfc	(??_BMP280_readPressure+1)^0,f,c
 15458  001C82  221F               	addwfc	(??_BMP280_readPressure+2)^0,f,c
 15459  001C84  2220               	addwfc	(??_BMP280_readPressure+3)^0,f,c
 15460  001C86  5001               	movf	?___aldiv^0,w,c
 15461  001C88  5C1D               	subwf	??_BMP280_readPressure^0,w,c
 15462  001C8A  6E21               	movwf	(??_BMP280_readPressure+4)^0,c
 15463  001C8C  5002               	movf	(?___aldiv+1)^0,w,c
 15464  001C8E  581E               	subwfb	(??_BMP280_readPressure+1)^0,w,c
 15465  001C90  6E22               	movwf	(??_BMP280_readPressure+5)^0,c
 15466  001C92  5003               	movf	(?___aldiv+2)^0,w,c
 15467  001C94  581F               	subwfb	(??_BMP280_readPressure+2)^0,w,c
 15468  001C96  6E23               	movwf	(??_BMP280_readPressure+6)^0,c
 15469  001C98  5004               	movf	(?___aldiv+3)^0,w,c
 15470  001C9A  5820               	subwfb	(??_BMP280_readPressure+3)^0,w,c
 15471  001C9C  6E24               	movwf	(??_BMP280_readPressure+7)^0,c
 15472  001C9E  0E00               	movlw	0
 15473  001CA0  2421               	addwf	(??_BMP280_readPressure+4)^0,w,c
 15474  001CA2  6E0F               	movwf	___lmul@multiplier^0,c
 15475  001CA4  0E00               	movlw	0
 15476  001CA6  2022               	addwfc	(??_BMP280_readPressure+5)^0,w,c
 15477  001CA8  6E10               	movwf	(___lmul@multiplier+1)^0,c
 15478  001CAA  0E10               	movlw	16
 15479  001CAC  2023               	addwfc	(??_BMP280_readPressure+6)^0,w,c
 15480  001CAE  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15481  001CB0  0E00               	movlw	0
 15482  001CB2  2024               	addwfc	(??_BMP280_readPressure+7)^0,w,c
 15483  001CB4  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15484  001CB6  0E35               	movlw	53
 15485  001CB8  6E13               	movwf	___lmul@multiplicand^0,c
 15486  001CBA  0E0C               	movlw	12
 15487  001CBC  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 15488  001CBE  0E00               	movlw	0
 15489  001CC0  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 15490  001CC2  0E00               	movlw	0
 15491  001CC4  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 15492  001CC6  ECAE  F028         	call	___lmul	;wreg free
 15493  001CCA  C00F  F0BF         	movff	?___lmul,_p
 15494  001CCE  C010  F0C0         	movff	?___lmul+1,_p+1
 15495  001CD2  C011  F0C1         	movff	?___lmul+2,_p+2
 15496  001CD6  C012  F0C2         	movff	?___lmul+3,_p+3
 15497  001CDA                     
 15498                           ;bmp280_lib.c: 183:     if (p < 0x80000000)
 15499  001CDA  0E80               	movlw	128
 15500  001CDC  0100               	movlb	0	; () banked
 15501  001CDE  5DC2               	subwf	(_p+3)& (0+255),w,b
 15502  001CE0  B0D8               	btfsc	status,0,c
 15503  001CE2  EF75  F00E         	goto	u6231
 15504  001CE6  EF77  F00E         	goto	u6230
 15505  001CEA                     u6231:
 15506  001CEA  EF94  F00E         	goto	l6085
 15507  001CEE                     u6230:
 15508  001CEE                     
 15509                           ; BSR set to: 0
 15510                           ;bmp280_lib.c: 184:       p = (p * 2) / ((uint32_t)var1);
 15511  001CEE  90D8               	bcf	status,0,c
 15512  001CF0  35BF               	rlcf	_p& (0+255),w,b
 15513  001CF2  6E01               	movwf	___lldiv@dividend^0,c
 15514  001CF4  35C0               	rlcf	(_p+1)& (0+255),w,b
 15515  001CF6  6E02               	movwf	(___lldiv@dividend+1)^0,c
 15516  001CF8  35C1               	rlcf	(_p+2)& (0+255),w,b
 15517  001CFA  6E03               	movwf	(___lldiv@dividend+2)^0,c
 15518  001CFC  35C2               	rlcf	(_p+3)& (0+255),w,b
 15519  001CFE  6E04               	movwf	(___lldiv@dividend+3)^0,c
 15520  001D00  C0C7  F005         	movff	_var1,___lldiv@divisor
 15521  001D04  C0C8  F006         	movff	_var1+1,___lldiv@divisor+1
 15522  001D08  C0C9  F007         	movff	_var1+2,___lldiv@divisor+2
 15523  001D0C  C0CA  F008         	movff	_var1+3,___lldiv@divisor+3
 15524  001D10  EC02  F027         	call	___lldiv	;wreg free
 15525  001D14  C001  F0BF         	movff	?___lldiv,_p
 15526  001D18  C002  F0C0         	movff	?___lldiv+1,_p+1
 15527  001D1C  C003  F0C1         	movff	?___lldiv+2,_p+2
 15528  001D20  C004  F0C2         	movff	?___lldiv+3,_p+3
 15529  001D24  EFB0  F00E         	goto	l350
 15530  001D28                     l6085:
 15531                           
 15532                           ; BSR set to: 0
 15533                           ;bmp280_lib.c: 187:       p = (p / (uint32_t)var1) * 2;
 15534  001D28  C0BF  F001         	movff	_p,___lldiv@dividend
 15535  001D2C  C0C0  F002         	movff	_p+1,___lldiv@dividend+1
 15536  001D30  C0C1  F003         	movff	_p+2,___lldiv@dividend+2
 15537  001D34  C0C2  F004         	movff	_p+3,___lldiv@dividend+3
 15538  001D38  C0C7  F005         	movff	_var1,___lldiv@divisor
 15539  001D3C  C0C8  F006         	movff	_var1+1,___lldiv@divisor+1
 15540  001D40  C0C9  F007         	movff	_var1+2,___lldiv@divisor+2
 15541  001D44  C0CA  F008         	movff	_var1+3,___lldiv@divisor+3
 15542  001D48  EC02  F027         	call	___lldiv	;wreg free
 15543  001D4C  90D8               	bcf	status,0,c
 15544  001D4E  3401               	rlcf	?___lldiv^0,w,c
 15545  001D50  0100               	movlb	0	; () banked
 15546  001D52  6FBF               	movwf	_p& (0+255),b
 15547  001D54  3402               	rlcf	(?___lldiv+1)^0,w,c
 15548  001D56  6FC0               	movwf	(_p+1)& (0+255),b
 15549  001D58  3403               	rlcf	(?___lldiv+2)^0,w,c
 15550  001D5A  6FC1               	movwf	(_p+2)& (0+255),b
 15551  001D5C  3404               	rlcf	(?___lldiv+3)^0,w,c
 15552  001D5E  6FC2               	movwf	(_p+3)& (0+255),b
 15553  001D60                     l350:
 15554                           
 15555                           ;bmp280_lib.c: 189:     var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/
      +                          8)) / 8192))) / 4096;
 15556  001D60  C0BF  F01D         	movff	_p,??_BMP280_readPressure
 15557  001D64  C0C0  F01E         	movff	_p+1,??_BMP280_readPressure+1
 15558  001D68  C0C1  F01F         	movff	_p+2,??_BMP280_readPressure+2
 15559  001D6C  C0C2  F020         	movff	_p+3,??_BMP280_readPressure+3
 15560  001D70  0E04               	movlw	4
 15561  001D72  EFC0  F00E         	goto	u6240
 15562  001D76                     u6245:
 15563  001D76  90D8               	bcf	status,0,c
 15564  001D78  3220               	rrcf	(??_BMP280_readPressure+3)^0,f,c
 15565  001D7A  321F               	rrcf	(??_BMP280_readPressure+2)^0,f,c
 15566  001D7C  321E               	rrcf	(??_BMP280_readPressure+1)^0,f,c
 15567  001D7E  321D               	rrcf	??_BMP280_readPressure^0,f,c
 15568  001D80                     u6240:
 15569  001D80  2EE8               	decfsz	wreg,f,c
 15570  001D82  EFBB  F00E         	goto	u6245
 15571  001D86  C01D  F00F         	movff	??_BMP280_readPressure,___lmul@multiplier
 15572  001D8A  C01E  F010         	movff	??_BMP280_readPressure+1,___lmul@multiplier+1
 15573  001D8E  C01F  F011         	movff	??_BMP280_readPressure+2,___lmul@multiplier+2
 15574  001D92  C020  F012         	movff	??_BMP280_readPressure+3,___lmul@multiplier+3
 15575  001D96  C0BF  F021         	movff	_p,??_BMP280_readPressure+4
 15576  001D9A  C0C0  F022         	movff	_p+1,??_BMP280_readPressure+5
 15577  001D9E  C0C1  F023         	movff	_p+2,??_BMP280_readPressure+6
 15578  001DA2  C0C2  F024         	movff	_p+3,??_BMP280_readPressure+7
 15579  001DA6  0E04               	movlw	4
 15580  001DA8  EFDB  F00E         	goto	u6250
 15581  001DAC                     u6255:
 15582  001DAC  90D8               	bcf	status,0,c
 15583  001DAE  3224               	rrcf	(??_BMP280_readPressure+7)^0,f,c
 15584  001DB0  3223               	rrcf	(??_BMP280_readPressure+6)^0,f,c
 15585  001DB2  3222               	rrcf	(??_BMP280_readPressure+5)^0,f,c
 15586  001DB4  3221               	rrcf	(??_BMP280_readPressure+4)^0,f,c
 15587  001DB6                     u6250:
 15588  001DB6  2EE8               	decfsz	wreg,f,c
 15589  001DB8  EFD6  F00E         	goto	u6255
 15590  001DBC  C021  F013         	movff	??_BMP280_readPressure+4,___lmul@multiplicand
 15591  001DC0  C022  F014         	movff	??_BMP280_readPressure+5,___lmul@multiplicand+1
 15592  001DC4  C023  F015         	movff	??_BMP280_readPressure+6,___lmul@multiplicand+2
 15593  001DC8  C024  F016         	movff	??_BMP280_readPressure+7,___lmul@multiplicand+3
 15594  001DCC  ECAE  F028         	call	___lmul	;wreg free
 15595  001DD0  0E0E               	movlw	14
 15596  001DD2  EFF0  F00E         	goto	u6260
 15597  001DD6                     u6265:
 15598  001DD6  90D8               	bcf	status,0,c
 15599  001DD8  3212               	rrcf	(?___lmul+3)^0,f,c
 15600  001DDA  3211               	rrcf	(?___lmul+2)^0,f,c
 15601  001DDC  3210               	rrcf	(?___lmul+1)^0,f,c
 15602  001DDE  320F               	rrcf	?___lmul^0,f,c
 15603  001DE0                     u6260:
 15604  001DE0  2EE8               	decfsz	wreg,f,c
 15605  001DE2  EFEB  F00E         	goto	u6265
 15606  001DE6  C00F  F02D         	movff	?___lmul,_BMP280_readPressure$2569
 15607  001DEA  C010  F02E         	movff	?___lmul+1,_BMP280_readPressure$2569+1
 15608  001DEE  C011  F02F         	movff	?___lmul+2,_BMP280_readPressure$2569+2
 15609  001DF2  C012  F030         	movff	?___lmul+3,_BMP280_readPressure$2569+3
 15610  001DF6                     
 15611                           ;bmp280_lib.c: 189:     var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/
      +                          8)) / 8192))) / 4096;
 15612  001DF6  EE21  F030         	lfsr	2,_BMP280_calib+22
 15613  001DFA  CFDE F00F          	movff	postinc2,___lmul@multiplier
 15614  001DFE  CFDD F010          	movff	postdec2,___lmul@multiplier+1
 15615  001E02  0E00               	movlw	0
 15616  001E04  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 15617  001E06  0EFF               	movlw	-1
 15618  001E08  6E11               	movwf	(___lmul@multiplier+2)^0,c
 15619  001E0A  6E12               	movwf	(___lmul@multiplier+3)^0,c
 15620  001E0C  C02D  F013         	movff	_BMP280_readPressure$2569,___lmul@multiplicand
 15621  001E10  C02E  F014         	movff	_BMP280_readPressure$2569+1,___lmul@multiplicand+1
 15622  001E14  C02F  F015         	movff	_BMP280_readPressure$2569+2,___lmul@multiplicand+2
 15623  001E18  C030  F016         	movff	_BMP280_readPressure$2569+3,___lmul@multiplicand+3
 15624  001E1C  ECAE  F028         	call	___lmul	;wreg free
 15625  001E20  C00F  F001         	movff	?___lmul,___aldiv@dividend
 15626  001E24  C010  F002         	movff	?___lmul+1,___aldiv@dividend+1
 15627  001E28  C011  F003         	movff	?___lmul+2,___aldiv@dividend+2
 15628  001E2C  C012  F004         	movff	?___lmul+3,___aldiv@dividend+3
 15629  001E30  0E00               	movlw	0
 15630  001E32  6E05               	movwf	___aldiv@divisor^0,c
 15631  001E34  0E10               	movlw	16
 15632  001E36  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15633  001E38  0E00               	movlw	0
 15634  001E3A  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15635  001E3C  0E00               	movlw	0
 15636  001E3E  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15637  001E40  EC7F  F020         	call	___aldiv	;wreg free
 15638  001E44  C001  F0C7         	movff	?___aldiv,_var1
 15639  001E48  C002  F0C8         	movff	?___aldiv+1,_var1+1
 15640  001E4C  C003  F0C9         	movff	?___aldiv+2,_var1+2
 15641  001E50  C004  F0CA         	movff	?___aldiv+3,_var1+3
 15642  001E54                     
 15643                           ;bmp280_lib.c: 190:     var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 819
      +                          2;
 15644  001E54  C0BF  F01D         	movff	_p,??_BMP280_readPressure
 15645  001E58  C0C0  F01E         	movff	_p+1,??_BMP280_readPressure+1
 15646  001E5C  C0C1  F01F         	movff	_p+2,??_BMP280_readPressure+2
 15647  001E60  C0C2  F020         	movff	_p+3,??_BMP280_readPressure+3
 15648  001E64  0E03               	movlw	3
 15649  001E66  EF3A  F00F         	goto	u6270
 15650  001E6A                     u6275:
 15651  001E6A  90D8               	bcf	status,0,c
 15652  001E6C  3220               	rrcf	(??_BMP280_readPressure+3)^0,f,c
 15653  001E6E  321F               	rrcf	(??_BMP280_readPressure+2)^0,f,c
 15654  001E70  321E               	rrcf	(??_BMP280_readPressure+1)^0,f,c
 15655  001E72  321D               	rrcf	??_BMP280_readPressure^0,f,c
 15656  001E74                     u6270:
 15657  001E74  2EE8               	decfsz	wreg,f,c
 15658  001E76  EF35  F00F         	goto	u6275
 15659  001E7A  C01D  F00F         	movff	??_BMP280_readPressure,___lmul@multiplier
 15660  001E7E  C01E  F010         	movff	??_BMP280_readPressure+1,___lmul@multiplier+1
 15661  001E82  C01F  F011         	movff	??_BMP280_readPressure+2,___lmul@multiplier+2
 15662  001E86  C020  F012         	movff	??_BMP280_readPressure+3,___lmul@multiplier+3
 15663  001E8A  EE21  F02E         	lfsr	2,_BMP280_calib+20
 15664  001E8E  CFDE F013          	movff	postinc2,___lmul@multiplicand
 15665  001E92  CFDD F014          	movff	postdec2,___lmul@multiplicand+1
 15666  001E96  0E00               	movlw	0
 15667  001E98  BE14               	btfsc	(___lmul@multiplicand+1)^0,7,c
 15668  001E9A  0EFF               	movlw	-1
 15669  001E9C  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 15670  001E9E  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 15671  001EA0  ECAE  F028         	call	___lmul	;wreg free
 15672  001EA4  C00F  F001         	movff	?___lmul,___aldiv@dividend
 15673  001EA8  C010  F002         	movff	?___lmul+1,___aldiv@dividend+1
 15674  001EAC  C011  F003         	movff	?___lmul+2,___aldiv@dividend+2
 15675  001EB0  C012  F004         	movff	?___lmul+3,___aldiv@dividend+3
 15676  001EB4  0E00               	movlw	0
 15677  001EB6  6E05               	movwf	___aldiv@divisor^0,c
 15678  001EB8  0E20               	movlw	32
 15679  001EBA  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15680  001EBC  0E00               	movlw	0
 15681  001EBE  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15682  001EC0  0E00               	movlw	0
 15683  001EC2  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15684  001EC4  EC7F  F020         	call	___aldiv	;wreg free
 15685  001EC8  C001  F0C3         	movff	?___aldiv,_var2
 15686  001ECC  C002  F0C4         	movff	?___aldiv+1,_var2+1
 15687  001ED0  C003  F0C5         	movff	?___aldiv+2,_var2+2
 15688  001ED4  C004  F0C6         	movff	?___aldiv+3,_var2+3
 15689                           
 15690                           ;bmp280_lib.c: 192:     p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_cali
      +                          b.dig_P7) / 16));
 15691  001ED8  C12C  F01D         	movff	_BMP280_calib+18,??_BMP280_readPressure
 15692  001EDC  C12D  F01E         	movff	_BMP280_calib+19,??_BMP280_readPressure+1
 15693  001EE0  0E00               	movlw	0
 15694  001EE2  BE1E               	btfsc	(??_BMP280_readPressure+1)^0,7,c
 15695  001EE4  0EFF               	movlw	255
 15696  001EE6  6E1F               	movwf	(??_BMP280_readPressure+2)^0,c
 15697  001EE8  6E20               	movwf	(??_BMP280_readPressure+3)^0,c
 15698  001EEA  0100               	movlb	0	; () banked
 15699  001EEC  51C7               	movf	_var1& (0+255),w,b
 15700  001EEE  241D               	addwf	??_BMP280_readPressure^0,w,c
 15701  001EF0  6E21               	movwf	(??_BMP280_readPressure+4)^0,c
 15702  001EF2  51C8               	movf	(_var1+1)& (0+255),w,b
 15703  001EF4  201E               	addwfc	(??_BMP280_readPressure+1)^0,w,c
 15704  001EF6  6E22               	movwf	(??_BMP280_readPressure+5)^0,c
 15705  001EF8  51C9               	movf	(_var1+2)& (0+255),w,b
 15706  001EFA  201F               	addwfc	(??_BMP280_readPressure+2)^0,w,c
 15707  001EFC  6E23               	movwf	(??_BMP280_readPressure+6)^0,c
 15708  001EFE  51CA               	movf	(_var1+3)& (0+255),w,b
 15709  001F00  2020               	addwfc	(??_BMP280_readPressure+3)^0,w,c
 15710  001F02  6E24               	movwf	(??_BMP280_readPressure+7)^0,c
 15711  001F04  51C3               	movf	_var2& (0+255),w,b
 15712  001F06  2421               	addwf	(??_BMP280_readPressure+4)^0,w,c
 15713  001F08  6E01               	movwf	___aldiv@dividend^0,c
 15714  001F0A  51C4               	movf	(_var2+1)& (0+255),w,b
 15715  001F0C  2022               	addwfc	(??_BMP280_readPressure+5)^0,w,c
 15716  001F0E  6E02               	movwf	(___aldiv@dividend+1)^0,c
 15717  001F10  51C5               	movf	(_var2+2)& (0+255),w,b
 15718  001F12  2023               	addwfc	(??_BMP280_readPressure+6)^0,w,c
 15719  001F14  6E03               	movwf	(___aldiv@dividend+2)^0,c
 15720  001F16  51C6               	movf	(_var2+3)& (0+255),w,b
 15721  001F18  2024               	addwfc	(??_BMP280_readPressure+7)^0,w,c
 15722  001F1A  6E04               	movwf	(___aldiv@dividend+3)^0,c
 15723  001F1C  0E10               	movlw	16
 15724  001F1E  6E05               	movwf	___aldiv@divisor^0,c
 15725  001F20  0E00               	movlw	0
 15726  001F22  6E06               	movwf	(___aldiv@divisor+1)^0,c
 15727  001F24  0E00               	movlw	0
 15728  001F26  6E07               	movwf	(___aldiv@divisor+2)^0,c
 15729  001F28  0E00               	movlw	0
 15730  001F2A  6E08               	movwf	(___aldiv@divisor+3)^0,c
 15731  001F2C  EC7F  F020         	call	___aldiv	;wreg free
 15732  001F30  0100               	movlb	0	; () banked
 15733  001F32  51BF               	movf	_p& (0+255),w,b
 15734  001F34  2401               	addwf	?___aldiv^0,w,c
 15735  001F36  6FBF               	movwf	_p& (0+255),b
 15736  001F38  51C0               	movf	(_p+1)& (0+255),w,b
 15737  001F3A  2002               	addwfc	(?___aldiv+1)^0,w,c
 15738  001F3C  6FC0               	movwf	(_p+1)& (0+255),b
 15739  001F3E  51C1               	movf	(_p+2)& (0+255),w,b
 15740  001F40  2003               	addwfc	(?___aldiv+2)^0,w,c
 15741  001F42  6FC1               	movwf	(_p+2)& (0+255),b
 15742  001F44  51C2               	movf	(_p+3)& (0+255),w,b
 15743  001F46  2004               	addwfc	(?___aldiv+3)^0,w,c
 15744  001F48  6FC2               	movwf	(_p+3)& (0+255),b
 15745  001F4A                     
 15746                           ; BSR set to: 0
 15747                           ;bmp280_lib.c: 194:     *pres = p;
 15748  001F4A  C01B  FFD9         	movff	BMP280_readPressure@pres,fsr2l
 15749  001F4E  C01C  FFDA         	movff	BMP280_readPressure@pres+1,fsr2h
 15750  001F52  C0BF  FFDE         	movff	_p,postinc2
 15751  001F56  C0C0  FFDE         	movff	_p+1,postinc2
 15752  001F5A  C0C1  FFDE         	movff	_p+2,postinc2
 15753  001F5E  C0C2  FFDE         	movff	_p+3,postinc2
 15754  001F62                     l348:
 15755                           
 15756                           ; BSR set to: 0
 15757  001F62  0012               	return		;funcret
 15758  001F64                     __end_of_BMP280_readPressure:
 15759                           	callstack 0
 15760                           
 15761 ;; *************** function ___lmul *****************
 15762 ;; Defined at:
 15763 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;  multiplier      4   14[COMRAM] unsigned long 
 15766 ;;  multiplicand    4   18[COMRAM] unsigned long 
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;  product         4   22[COMRAM] unsigned long 
 15769 ;; Return value:  Size  Location     Type
 15770 ;;                  4   14[COMRAM] unsigned long 
 15771 ;; Registers used:
 15772 ;;		wreg, status,2, status,0
 15773 ;; Tracked objects:
 15774 ;;		On entry : 0/0
 15775 ;;		On exit  : 0/0
 15776 ;;		Unchanged: 0/0
 15777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15778 ;;      Params:         8       0       0       0       0       0       0       0       0
 15779 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15781 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15782 ;;Total ram usage:       12 bytes
 15783 ;; Hardware stack levels used: 1
 15784 ;; Hardware stack levels required when called: 1
 15785 ;; This function calls:
 15786 ;;		Nothing
 15787 ;; This function is called by:
 15788 ;;		_BMP280_readTemperature
 15789 ;;		_BMP280_readPressure
 15790 ;; This function uses a non-reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text62
 15794  00515C                     __ptext62:
 15795                           	callstack 0
 15796  00515C                     ___lmul:
 15797                           	callstack 28
 15798  00515C  0E00               	movlw	0
 15799  00515E  6E17               	movwf	___lmul@product^0,c
 15800  005160  0E00               	movlw	0
 15801  005162  6E18               	movwf	(___lmul@product+1)^0,c
 15802  005164  0E00               	movlw	0
 15803  005166  6E19               	movwf	(___lmul@product+2)^0,c
 15804  005168  0E00               	movlw	0
 15805  00516A  6E1A               	movwf	(___lmul@product+3)^0,c
 15806  00516C                     l5777:
 15807  00516C  A00F               	btfss	___lmul@multiplier^0,0,c
 15808  00516E  EFBB  F028         	goto	u5941
 15809  005172  EFBD  F028         	goto	u5940
 15810  005176                     u5941:
 15811  005176  EFC5  F028         	goto	l5781
 15812  00517A                     u5940:
 15813  00517A  5013               	movf	___lmul@multiplicand^0,w,c
 15814  00517C  2617               	addwf	___lmul@product^0,f,c
 15815  00517E  5014               	movf	(___lmul@multiplicand+1)^0,w,c
 15816  005180  2218               	addwfc	(___lmul@product+1)^0,f,c
 15817  005182  5015               	movf	(___lmul@multiplicand+2)^0,w,c
 15818  005184  2219               	addwfc	(___lmul@product+2)^0,f,c
 15819  005186  5016               	movf	(___lmul@multiplicand+3)^0,w,c
 15820  005188  221A               	addwfc	(___lmul@product+3)^0,f,c
 15821  00518A                     l5781:
 15822  00518A  90D8               	bcf	status,0,c
 15823  00518C  3613               	rlcf	___lmul@multiplicand^0,f,c
 15824  00518E  3614               	rlcf	(___lmul@multiplicand+1)^0,f,c
 15825  005190  3615               	rlcf	(___lmul@multiplicand+2)^0,f,c
 15826  005192  3616               	rlcf	(___lmul@multiplicand+3)^0,f,c
 15827  005194  90D8               	bcf	status,0,c
 15828  005196  3212               	rrcf	(___lmul@multiplier+3)^0,f,c
 15829  005198  3211               	rrcf	(___lmul@multiplier+2)^0,f,c
 15830  00519A  3210               	rrcf	(___lmul@multiplier+1)^0,f,c
 15831  00519C  320F               	rrcf	___lmul@multiplier^0,f,c
 15832  00519E  500F               	movf	___lmul@multiplier^0,w,c
 15833  0051A0  1010               	iorwf	(___lmul@multiplier+1)^0,w,c
 15834  0051A2  1011               	iorwf	(___lmul@multiplier+2)^0,w,c
 15835  0051A4  1012               	iorwf	(___lmul@multiplier+3)^0,w,c
 15836  0051A6  A4D8               	btfss	status,2,c
 15837  0051A8  EFD8  F028         	goto	u5951
 15838  0051AC  EFDA  F028         	goto	u5950
 15839  0051B0                     u5951:
 15840  0051B0  EFB6  F028         	goto	l5777
 15841  0051B4                     u5950:
 15842  0051B4  C017  F00F         	movff	___lmul@product,?___lmul
 15843  0051B8  C018  F010         	movff	___lmul@product+1,?___lmul+1
 15844  0051BC  C019  F011         	movff	___lmul@product+2,?___lmul+2
 15845  0051C0  C01A  F012         	movff	___lmul@product+3,?___lmul+3
 15846  0051C4  0012               	return		;funcret
 15847  0051C6                     __end_of___lmul:
 15848                           	callstack 0
 15849                           
 15850 ;; *************** function ___lldiv *****************
 15851 ;; Defined at:
 15852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
 15853 ;; Parameters:    Size  Location     Type
 15854 ;;  dividend        4    0[COMRAM] unsigned long 
 15855 ;;  divisor         4    4[COMRAM] unsigned long 
 15856 ;; Auto vars:     Size  Location     Type
 15857 ;;  quotient        4    8[COMRAM] unsigned long 
 15858 ;;  counter         1   12[COMRAM] unsigned char 
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  4    0[COMRAM] unsigned long 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15868 ;;      Params:         8       0       0       0       0       0       0       0       0
 15869 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15871 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15872 ;;Total ram usage:       13 bytes
 15873 ;; Hardware stack levels used: 1
 15874 ;; Hardware stack levels required when called: 1
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_BMP280_readPressure
 15879 ;; This function uses a non-reentrant model
 15880 ;;
 15881                           
 15882                           	psect	text63
 15883  004E04                     __ptext63:
 15884                           	callstack 0
 15885  004E04                     ___lldiv:
 15886                           	callstack 28
 15887  004E04  0E00               	movlw	0
 15888  004E06  6E09               	movwf	___lldiv@quotient^0,c
 15889  004E08  0E00               	movlw	0
 15890  004E0A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 15891  004E0C  0E00               	movlw	0
 15892  004E0E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 15893  004E10  0E00               	movlw	0
 15894  004E12  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 15895  004E14  5005               	movf	___lldiv@divisor^0,w,c
 15896  004E16  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 15897  004E18  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 15898  004E1A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 15899  004E1C  B4D8               	btfsc	status,2,c
 15900  004E1E  EF13  F027         	goto	u5961
 15901  004E22  EF15  F027         	goto	u5960
 15902  004E26                     u5961:
 15903  004E26  EF4B  F027         	goto	l581
 15904  004E2A                     u5960:
 15905  004E2A  0E01               	movlw	1
 15906  004E2C  6E0D               	movwf	___lldiv@counter^0,c
 15907  004E2E  EF1F  F027         	goto	l5793
 15908  004E32                     l5791:
 15909  004E32  90D8               	bcf	status,0,c
 15910  004E34  3605               	rlcf	___lldiv@divisor^0,f,c
 15911  004E36  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 15912  004E38  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 15913  004E3A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 15914  004E3C  2A0D               	incf	___lldiv@counter^0,f,c
 15915  004E3E                     l5793:
 15916  004E3E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 15917  004E40  EF24  F027         	goto	u5971
 15918  004E44  EF26  F027         	goto	u5970
 15919  004E48                     u5971:
 15920  004E48  EF19  F027         	goto	l5791
 15921  004E4C                     u5970:
 15922  004E4C                     l5795:
 15923  004E4C  90D8               	bcf	status,0,c
 15924  004E4E  3609               	rlcf	___lldiv@quotient^0,f,c
 15925  004E50  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 15926  004E52  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 15927  004E54  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 15928  004E56  5005               	movf	___lldiv@divisor^0,w,c
 15929  004E58  5C01               	subwf	___lldiv@dividend^0,w,c
 15930  004E5A  5006               	movf	(___lldiv@divisor+1)^0,w,c
 15931  004E5C  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 15932  004E5E  5007               	movf	(___lldiv@divisor+2)^0,w,c
 15933  004E60  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 15934  004E62  5008               	movf	(___lldiv@divisor+3)^0,w,c
 15935  004E64  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 15936  004E66  A0D8               	btfss	status,0,c
 15937  004E68  EF38  F027         	goto	u5981
 15938  004E6C  EF3A  F027         	goto	u5980
 15939  004E70                     u5981:
 15940  004E70  EF43  F027         	goto	l5803
 15941  004E74                     u5980:
 15942  004E74  5005               	movf	___lldiv@divisor^0,w,c
 15943  004E76  5E01               	subwf	___lldiv@dividend^0,f,c
 15944  004E78  5006               	movf	(___lldiv@divisor+1)^0,w,c
 15945  004E7A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 15946  004E7C  5007               	movf	(___lldiv@divisor+2)^0,w,c
 15947  004E7E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 15948  004E80  5008               	movf	(___lldiv@divisor+3)^0,w,c
 15949  004E82  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 15950  004E84  8009               	bsf	___lldiv@quotient^0,0,c
 15951  004E86                     l5803:
 15952  004E86  90D8               	bcf	status,0,c
 15953  004E88  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 15954  004E8A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 15955  004E8C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 15956  004E8E  3205               	rrcf	___lldiv@divisor^0,f,c
 15957  004E90  2E0D               	decfsz	___lldiv@counter^0,f,c
 15958  004E92  EF26  F027         	goto	l5795
 15959  004E96                     l581:
 15960  004E96  C009  F001         	movff	___lldiv@quotient,?___lldiv
 15961  004E9A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 15962  004E9E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 15963  004EA2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 15964  004EA6  0012               	return		;funcret
 15965  004EA8                     __end_of___lldiv:
 15966                           	callstack 0
 15967                           
 15968 ;; *************** function ___aldiv *****************
 15969 ;; Defined at:
 15970 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;  dividend        4    0[COMRAM] long 
 15973 ;;  divisor         4    4[COMRAM] long 
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;  quotient        4   10[COMRAM] long 
 15976 ;;  sign            1    9[COMRAM] unsigned char 
 15977 ;;  counter         1    8[COMRAM] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  4    0[COMRAM] long 
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15987 ;;      Params:         8       0       0       0       0       0       0       0       0
 15988 ;;      Locals:         6       0       0       0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15990 ;;      Totals:        14       0       0       0       0       0       0       0       0
 15991 ;;Total ram usage:       14 bytes
 15992 ;; Hardware stack levels used: 1
 15993 ;; Hardware stack levels required when called: 1
 15994 ;; This function calls:
 15995 ;;		Nothing
 15996 ;; This function is called by:
 15997 ;;		_USART_Init
 15998 ;;		_BMP280_readTemperature
 15999 ;;		_BMP280_readPressure
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text64
 16004  0040FE                     __ptext64:
 16005                           	callstack 0
 16006  0040FE                     ___aldiv:
 16007                           	callstack 28
 16008  0040FE  0E00               	movlw	0
 16009  004100  6E0A               	movwf	___aldiv@sign^0,c
 16010  004102  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 16011  004104  EF88  F020         	goto	u5990
 16012  004108  EF86  F020         	goto	u5991
 16013  00410C                     u5991:
 16014  00410C  EF92  F020         	goto	l5815
 16015  004110                     u5990:
 16016  004110  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 16017  004112  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 16018  004114  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 16019  004116  6C05               	negf	___aldiv@divisor^0,c
 16020  004118  0E00               	movlw	0
 16021  00411A  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 16022  00411C  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 16023  00411E  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 16024  004120  0E01               	movlw	1
 16025  004122  6E0A               	movwf	___aldiv@sign^0,c
 16026  004124                     l5815:
 16027  004124  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 16028  004126  EF99  F020         	goto	u6000
 16029  00412A  EF97  F020         	goto	u6001
 16030  00412E                     u6001:
 16031  00412E  EFA3  F020         	goto	l5821
 16032  004132                     u6000:
 16033  004132  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 16034  004134  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 16035  004136  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 16036  004138  6C01               	negf	___aldiv@dividend^0,c
 16037  00413A  0E00               	movlw	0
 16038  00413C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 16039  00413E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 16040  004140  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 16041  004142  0E01               	movlw	1
 16042  004144  1A0A               	xorwf	___aldiv@sign^0,f,c
 16043  004146                     l5821:
 16044  004146  0E00               	movlw	0
 16045  004148  6E0B               	movwf	___aldiv@quotient^0,c
 16046  00414A  0E00               	movlw	0
 16047  00414C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 16048  00414E  0E00               	movlw	0
 16049  004150  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 16050  004152  0E00               	movlw	0
 16051  004154  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 16052  004156  5005               	movf	___aldiv@divisor^0,w,c
 16053  004158  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 16054  00415A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 16055  00415C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 16056  00415E  B4D8               	btfsc	status,2,c
 16057  004160  EFB4  F020         	goto	u6011
 16058  004164  EFB6  F020         	goto	u6010
 16059  004168                     u6011:
 16060  004168  EFEC  F020         	goto	l5843
 16061  00416C                     u6010:
 16062  00416C  0E01               	movlw	1
 16063  00416E  6E09               	movwf	___aldiv@counter^0,c
 16064  004170  EFC0  F020         	goto	l5829
 16065  004174                     l5827:
 16066  004174  90D8               	bcf	status,0,c
 16067  004176  3605               	rlcf	___aldiv@divisor^0,f,c
 16068  004178  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 16069  00417A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 16070  00417C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 16071  00417E  2A09               	incf	___aldiv@counter^0,f,c
 16072  004180                     l5829:
 16073  004180  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 16074  004182  EFC5  F020         	goto	u6021
 16075  004186  EFC7  F020         	goto	u6020
 16076  00418A                     u6021:
 16077  00418A  EFBA  F020         	goto	l5827
 16078  00418E                     u6020:
 16079  00418E                     l5831:
 16080  00418E  90D8               	bcf	status,0,c
 16081  004190  360B               	rlcf	___aldiv@quotient^0,f,c
 16082  004192  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 16083  004194  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 16084  004196  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 16085  004198  5005               	movf	___aldiv@divisor^0,w,c
 16086  00419A  5C01               	subwf	___aldiv@dividend^0,w,c
 16087  00419C  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16088  00419E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 16089  0041A0  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16090  0041A2  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 16091  0041A4  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16092  0041A6  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 16093  0041A8  A0D8               	btfss	status,0,c
 16094  0041AA  EFD9  F020         	goto	u6031
 16095  0041AE  EFDB  F020         	goto	u6030
 16096  0041B2                     u6031:
 16097  0041B2  EFE4  F020         	goto	l5839
 16098  0041B6                     u6030:
 16099  0041B6  5005               	movf	___aldiv@divisor^0,w,c
 16100  0041B8  5E01               	subwf	___aldiv@dividend^0,f,c
 16101  0041BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
 16102  0041BC  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 16103  0041BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
 16104  0041C0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 16105  0041C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
 16106  0041C4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 16107  0041C6  800B               	bsf	___aldiv@quotient^0,0,c
 16108  0041C8                     l5839:
 16109  0041C8  90D8               	bcf	status,0,c
 16110  0041CA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 16111  0041CC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 16112  0041CE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 16113  0041D0  3205               	rrcf	___aldiv@divisor^0,f,c
 16114  0041D2  2E09               	decfsz	___aldiv@counter^0,f,c
 16115  0041D4  EFC7  F020         	goto	l5831
 16116  0041D8                     l5843:
 16117  0041D8  500A               	movf	___aldiv@sign^0,w,c
 16118  0041DA  B4D8               	btfsc	status,2,c
 16119  0041DC  EFF2  F020         	goto	u6041
 16120  0041E0  EFF4  F020         	goto	u6040
 16121  0041E4                     u6041:
 16122  0041E4  EFFC  F020         	goto	l5847
 16123  0041E8                     u6040:
 16124  0041E8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 16125  0041EA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 16126  0041EC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 16127  0041EE  6C0B               	negf	___aldiv@quotient^0,c
 16128  0041F0  0E00               	movlw	0
 16129  0041F2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 16130  0041F4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 16131  0041F6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 16132  0041F8                     l5847:
 16133  0041F8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 16134  0041FC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 16135  004200  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 16136  004204  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 16137  004208  0012               	return		;funcret
 16138  00420A                     __end_of___aldiv:
 16139                           	callstack 0
 16140                           
 16141 ;; *************** function _BMP280_begin *****************
 16142 ;; Defined at:
 16143 ;;		line 59 in file "bmp280_lib.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  mode            1    wreg     unsigned char 
 16146 ;;  T_sampling      1    6[COMRAM] unsigned char 
 16147 ;;  P_sampling      1    7[COMRAM] unsigned char 
 16148 ;;  filter          1    8[COMRAM] unsigned char 
 16149 ;;  standby         1    9[COMRAM] unsigned char 
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;  mode            1   12[COMRAM] unsigned char 
 16152 ;;  _config         1   14[COMRAM] unsigned char 
 16153 ;;  _ctrl_meas      1   13[COMRAM] unsigned char 
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      _Bool 
 16156 ;; Registers used:
 16157 ;;		wreg, status,2, status,0, cstack
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16163 ;;      Params:         4       0       0       0       0       0       0       0       0
 16164 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16165 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16166 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16167 ;;Total ram usage:        9 bytes
 16168 ;; Hardware stack levels used: 1
 16169 ;; Hardware stack levels required when called: 4
 16170 ;; This function calls:
 16171 ;;		_BMP280_Read16
 16172 ;;		_BMP280_Read8
 16173 ;;		_BMP280_Write
 16174 ;; This function is called by:
 16175 ;;		_main
 16176 ;; This function uses a non-reentrant model
 16177 ;;
 16178                           
 16179                           	psect	text65
 16180  003D8C                     __ptext65:
 16181                           	callstack 0
 16182  003D8C                     _BMP280_begin:
 16183                           	callstack 26
 16184                           
 16185                           ;incstack = 0
 16186                           ;BMP280_begin@mode stored from wreg
 16187  003D8C  6E0D               	movwf	BMP280_begin@mode^0,c
 16188  003D8E                     
 16189                           ;bmp280_lib.c: 59: _Bool BMP280_begin(uint8_t mode,;bmp280_lib.c: 60:                   
      +                          uint8_t T_sampling ,;bmp280_lib.c: 61:                   uint8_t P_sampling ,;bmp280_lib
      +                          .c: 62:                   uint8_t filter ,;bmp280_lib.c: 63:                   uint8_t s
      +                          tandby );bmp280_lib.c: 64: {;bmp280_lib.c: 66:     if(BMP280_Read8(0xD0) != 0x58)
 16190  003D8E  0ED0               	movlw	208
 16191  003D90  ECA8  F02B         	call	_BMP280_Read8
 16192  003D94  0A58               	xorlw	88
 16193  003D96  B4D8               	btfsc	status,2,c
 16194  003D98  EFD0  F01E         	goto	u6161
 16195  003D9C  EFD2  F01E         	goto	u6160
 16196  003DA0                     u6161:
 16197  003DA0  EFD5  F01E         	goto	l5945
 16198  003DA4                     u6160:
 16199  003DA4                     
 16200                           ;bmp280_lib.c: 67:       return 0;
 16201  003DA4  0E00               	movlw	0
 16202  003DA6  EF67  F01F         	goto	l335
 16203  003DAA                     l5945:
 16204                           
 16205                           ;bmp280_lib.c: 70:     BMP280_Write(0xE0, 0xB6);
 16206  003DAA  0EB6               	movlw	182
 16207  003DAC  6E02               	movwf	BMP280_Write@_data^0,c
 16208  003DAE  0EE0               	movlw	224
 16209  003DB0  EC4F  F02C         	call	_BMP280_Write
 16210  003DB4                     l5947:
 16211                           
 16212                           ;bmp280_lib.c: 71:     _delay((unsigned long)((100)*(20000000L/4000.0)));
 16213  003DB4  0E03               	movlw	3
 16214  003DB6  6E0C               	movwf	(??_BMP280_begin+1)^0,c
 16215  003DB8  0E8A               	movlw	138
 16216  003DBA  6E0B               	movwf	??_BMP280_begin^0,c
 16217  003DBC  0E56               	movlw	86
 16218  003DBE                     u6927:
 16219  003DBE  2EE8               	decfsz	wreg,f,c
 16220  003DC0  D7FE               	bra	u6927
 16221  003DC2  2E0B               	decfsz	??_BMP280_begin^0,f,c
 16222  003DC4  D7FC               	bra	u6927
 16223  003DC6  2E0C               	decfsz	(??_BMP280_begin+1)^0,f,c
 16224  003DC8  D7FA               	bra	u6927
 16225  003DCA                     
 16226                           ;bmp280_lib.c: 74:     while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
 16227  003DCA  0EF3               	movlw	243
 16228  003DCC  ECA8  F02B         	call	_BMP280_Read8
 16229  003DD0  6E0B               	movwf	??_BMP280_begin^0,c
 16230  003DD2  B00B               	btfsc	??_BMP280_begin^0,0,c
 16231  003DD4  EFEE  F01E         	goto	u6171
 16232  003DD8  EFF0  F01E         	goto	u6170
 16233  003DDC                     u6171:
 16234  003DDC  EFDA  F01E         	goto	l5947
 16235  003DE0                     u6170:
 16236  003DE0                     
 16237                           ;bmp280_lib.c: 77:     BMP280_calib.dig_T1 = BMP280_Read16(0x88);
 16238  003DE0  0E88               	movlw	136
 16239  003DE2  ECE2  F02A         	call	_BMP280_Read16
 16240  003DE6  C002  F11A         	movff	?_BMP280_Read16,_BMP280_calib
 16241  003DEA  C003  F11B         	movff	?_BMP280_Read16+1,_BMP280_calib+1
 16242                           
 16243                           ;bmp280_lib.c: 78:     BMP280_calib.dig_T2 = (int16_t)BMP280_Read16(0x8A);
 16244  003DEE  0E8A               	movlw	138
 16245  003DF0  ECE2  F02A         	call	_BMP280_Read16
 16246  003DF4  C002  F11C         	movff	?_BMP280_Read16,_BMP280_calib+2
 16247  003DF8  C003  F11D         	movff	?_BMP280_Read16+1,_BMP280_calib+3
 16248                           
 16249                           ;bmp280_lib.c: 79:     BMP280_calib.dig_T3 = (int16_t)BMP280_Read16(0x8C);
 16250  003DFC  0E8C               	movlw	140
 16251  003DFE  ECE2  F02A         	call	_BMP280_Read16
 16252  003E02  C002  F11E         	movff	?_BMP280_Read16,_BMP280_calib+4
 16253  003E06  C003  F11F         	movff	?_BMP280_Read16+1,_BMP280_calib+5
 16254                           
 16255                           ;bmp280_lib.c: 81:     BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
 16256  003E0A  0E8E               	movlw	142
 16257  003E0C  ECE2  F02A         	call	_BMP280_Read16
 16258  003E10  C002  F120         	movff	?_BMP280_Read16,_BMP280_calib+6
 16259  003E14  C003  F121         	movff	?_BMP280_Read16+1,_BMP280_calib+7
 16260                           
 16261                           ;bmp280_lib.c: 82:     BMP280_calib.dig_P2 = (int16_t)BMP280_Read16(0x90);
 16262  003E18  0E90               	movlw	144
 16263  003E1A  ECE2  F02A         	call	_BMP280_Read16
 16264  003E1E  C002  F122         	movff	?_BMP280_Read16,_BMP280_calib+8
 16265  003E22  C003  F123         	movff	?_BMP280_Read16+1,_BMP280_calib+9
 16266                           
 16267                           ;bmp280_lib.c: 83:     BMP280_calib.dig_P3 = (int16_t)BMP280_Read16(0x92);
 16268  003E26  0E92               	movlw	146
 16269  003E28  ECE2  F02A         	call	_BMP280_Read16
 16270  003E2C  C002  F124         	movff	?_BMP280_Read16,_BMP280_calib+10
 16271  003E30  C003  F125         	movff	?_BMP280_Read16+1,_BMP280_calib+11
 16272                           
 16273                           ;bmp280_lib.c: 84:     BMP280_calib.dig_P4 = (int16_t)BMP280_Read16(0x94);
 16274  003E34  0E94               	movlw	148
 16275  003E36  ECE2  F02A         	call	_BMP280_Read16
 16276  003E3A  C002  F126         	movff	?_BMP280_Read16,_BMP280_calib+12
 16277  003E3E  C003  F127         	movff	?_BMP280_Read16+1,_BMP280_calib+13
 16278                           
 16279                           ;bmp280_lib.c: 85:     BMP280_calib.dig_P5 = (int16_t)BMP280_Read16(0x96);
 16280  003E42  0E96               	movlw	150
 16281  003E44  ECE2  F02A         	call	_BMP280_Read16
 16282  003E48  C002  F128         	movff	?_BMP280_Read16,_BMP280_calib+14
 16283  003E4C  C003  F129         	movff	?_BMP280_Read16+1,_BMP280_calib+15
 16284                           
 16285                           ;bmp280_lib.c: 86:     BMP280_calib.dig_P6 = (int16_t)BMP280_Read16(0x98);
 16286  003E50  0E98               	movlw	152
 16287  003E52  ECE2  F02A         	call	_BMP280_Read16
 16288  003E56  C002  F12A         	movff	?_BMP280_Read16,_BMP280_calib+16
 16289  003E5A  C003  F12B         	movff	?_BMP280_Read16+1,_BMP280_calib+17
 16290                           
 16291                           ;bmp280_lib.c: 87:     BMP280_calib.dig_P7 = (int16_t)BMP280_Read16(0x9A);
 16292  003E5E  0E9A               	movlw	154
 16293  003E60  ECE2  F02A         	call	_BMP280_Read16
 16294  003E64  C002  F12C         	movff	?_BMP280_Read16,_BMP280_calib+18
 16295  003E68  C003  F12D         	movff	?_BMP280_Read16+1,_BMP280_calib+19
 16296                           
 16297                           ;bmp280_lib.c: 88:     BMP280_calib.dig_P8 = (int16_t)BMP280_Read16(0x9C);
 16298  003E6C  0E9C               	movlw	156
 16299  003E6E  ECE2  F02A         	call	_BMP280_Read16
 16300  003E72  C002  F12E         	movff	?_BMP280_Read16,_BMP280_calib+20
 16301  003E76  C003  F12F         	movff	?_BMP280_Read16+1,_BMP280_calib+21
 16302                           
 16303                           ;bmp280_lib.c: 89:     BMP280_calib.dig_P9 = (int16_t)BMP280_Read16(0x9E);
 16304  003E7A  0E9E               	movlw	158
 16305  003E7C  ECE2  F02A         	call	_BMP280_Read16
 16306  003E80  C002  F130         	movff	?_BMP280_Read16,_BMP280_calib+22
 16307  003E84  C003  F131         	movff	?_BMP280_Read16+1,_BMP280_calib+23
 16308  003E88                     
 16309                           ;bmp280_lib.c: 92:     uint8_t _ctrl_meas, _config;;bmp280_lib.c: 93:     _config = ((st
      +                          andby << 5) | (filter << 2)) & 0xFC;
 16310  003E88  C009  F00B         	movff	BMP280_begin@filter,??_BMP280_begin
 16311  003E8C  90D8               	bcf	status,0,c
 16312  003E8E  360B               	rlcf	??_BMP280_begin^0,f,c
 16313  003E90  90D8               	bcf	status,0,c
 16314  003E92  360B               	rlcf	??_BMP280_begin^0,f,c
 16315  003E94  380A               	swapf	BMP280_begin@standby^0,w,c
 16316  003E96  46E8               	rlncf	wreg,f,c
 16317  003E98  0BE0               	andlw	224
 16318  003E9A  100B               	iorwf	??_BMP280_begin^0,w,c
 16319  003E9C  0BFC               	andlw	252
 16320  003E9E  6E0F               	movwf	BMP280_begin@_config^0,c
 16321  003EA0                     
 16322                           ;bmp280_lib.c: 94:     _ctrl_meas = (uint8_t)(T_sampling << 5) | (uint8_t)(P_sampling <<
      +                           2) | (uint8_t)mode;
 16323  003EA0  C008  F00B         	movff	BMP280_begin@P_sampling,??_BMP280_begin
 16324  003EA4  90D8               	bcf	status,0,c
 16325  003EA6  360B               	rlcf	??_BMP280_begin^0,f,c
 16326  003EA8  90D8               	bcf	status,0,c
 16327  003EAA  360B               	rlcf	??_BMP280_begin^0,f,c
 16328  003EAC  3807               	swapf	BMP280_begin@T_sampling^0,w,c
 16329  003EAE  46E8               	rlncf	wreg,f,c
 16330  003EB0  0BE0               	andlw	224
 16331  003EB2  100B               	iorwf	??_BMP280_begin^0,w,c
 16332  003EB4  100D               	iorwf	BMP280_begin@mode^0,w,c
 16333  003EB6  6E0E               	movwf	BMP280_begin@_ctrl_meas^0,c
 16334                           
 16335                           ;bmp280_lib.c: 96:     BMP280_Write(0xF5, _config);
 16336  003EB8  C00F  F002         	movff	BMP280_begin@_config,BMP280_Write@_data
 16337  003EBC  0EF5               	movlw	245
 16338  003EBE  EC4F  F02C         	call	_BMP280_Write
 16339                           
 16340                           ;bmp280_lib.c: 97:     BMP280_Write(0xF4, _ctrl_meas);
 16341  003EC2  C00E  F002         	movff	BMP280_begin@_ctrl_meas,BMP280_Write@_data
 16342  003EC6  0EF4               	movlw	244
 16343  003EC8  EC4F  F02C         	call	_BMP280_Write
 16344  003ECC                     
 16345                           ;bmp280_lib.c: 99:     return 1;
 16346  003ECC  0E01               	movlw	1
 16347  003ECE                     l335:
 16348  003ECE  0012               	return		;funcret
 16349  003ED0                     __end_of_BMP280_begin:
 16350                           	callstack 0
 16351                           
 16352 ;; *************** function _BMP280_Write *****************
 16353 ;; Defined at:
 16354 ;;		line 8 in file "bmp280_lib.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;  reg_addr        1    wreg     unsigned char 
 16357 ;;  _data           1    1[COMRAM] unsigned char 
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;  reg_addr        1    2[COMRAM] unsigned char 
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1    wreg      void 
 16362 ;; Registers used:
 16363 ;;		wreg, status,2, cstack
 16364 ;; Tracked objects:
 16365 ;;		On entry : 0/0
 16366 ;;		On exit  : 0/0
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16369 ;;      Params:         1       0       0       0       0       0       0       0       0
 16370 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16372 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16373 ;;Total ram usage:        2 bytes
 16374 ;; Hardware stack levels used: 1
 16375 ;; Hardware stack levels required when called: 3
 16376 ;; This function calls:
 16377 ;;		_I2C_Tx_data
 16378 ;;		_I2C_start
 16379 ;;		_I2C_stop
 16380 ;; This function is called by:
 16381 ;;		_BMP280_begin
 16382 ;; This function uses a non-reentrant model
 16383 ;;
 16384                           
 16385                           	psect	text66
 16386  00589E                     __ptext66:
 16387                           	callstack 0
 16388  00589E                     _BMP280_Write:
 16389                           	callstack 26
 16390                           
 16391                           ;incstack = 0
 16392                           ;BMP280_Write@reg_addr stored from wreg
 16393  00589E  6E03               	movwf	BMP280_Write@reg_addr^0,c
 16394  0058A0                     
 16395                           ;bmp280_lib.c: 8: void BMP280_Write(uint8_t reg_addr, uint8_t _data);bmp280_lib.c: 9: {;
      +                          bmp280_lib.c: 10:     I2C_start();
 16396  0058A0  ECA4  F02C         	call	_I2C_start	;wreg free
 16397  0058A4                     
 16398                           ;bmp280_lib.c: 11:     I2C_Tx_data(0xEC);
 16399  0058A4  0EEC               	movlw	236
 16400  0058A6  ECC1  F02B         	call	_I2C_Tx_data
 16401  0058AA                     
 16402                           ;bmp280_lib.c: 12:     I2C_Tx_data(reg_addr);
 16403  0058AA  5003               	movf	BMP280_Write@reg_addr^0,w,c
 16404  0058AC  ECC1  F02B         	call	_I2C_Tx_data
 16405  0058B0                     
 16406                           ;bmp280_lib.c: 13:     I2C_Tx_data(_data);
 16407  0058B0  5002               	movf	BMP280_Write@_data^0,w,c
 16408  0058B2  ECC1  F02B         	call	_I2C_Tx_data
 16409  0058B6                     
 16410                           ;bmp280_lib.c: 14:     I2C_stop();
 16411  0058B6  EC83  F02C         	call	_I2C_stop	;wreg free
 16412  0058BA  0012               	return		;funcret
 16413  0058BC                     __end_of_BMP280_Write:
 16414                           	callstack 0
 16415                           
 16416 ;; *************** function _BMP280_Read8 *****************
 16417 ;; Defined at:
 16418 ;;		line 18 in file "bmp280_lib.c"
 16419 ;; Parameters:    Size  Location     Type
 16420 ;;  reg_addr        1    wreg     unsigned char 
 16421 ;; Auto vars:     Size  Location     Type
 16422 ;;  reg_addr        1    1[COMRAM] unsigned char 
 16423 ;;  ret             1    2[COMRAM] unsigned char 
 16424 ;; Return value:  Size  Location     Type
 16425 ;;                  1    wreg      unsigned char 
 16426 ;; Registers used:
 16427 ;;		wreg, status,2, cstack
 16428 ;; Tracked objects:
 16429 ;;		On entry : 0/0
 16430 ;;		On exit  : 0/0
 16431 ;;		Unchanged: 0/0
 16432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16433 ;;      Params:         0       0       0       0       0       0       0       0       0
 16434 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16436 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16437 ;;Total ram usage:        2 bytes
 16438 ;; Hardware stack levels used: 1
 16439 ;; Hardware stack levels required when called: 3
 16440 ;; This function calls:
 16441 ;;		_I2C_Rx_data
 16442 ;;		_I2C_Rx_nack
 16443 ;;		_I2C_Tx_data
 16444 ;;		_I2C_start
 16445 ;;		_I2C_stop
 16446 ;; This function is called by:
 16447 ;;		_BMP280_begin
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           	psect	text67
 16452  005750                     __ptext67:
 16453                           	callstack 0
 16454  005750                     _BMP280_Read8:
 16455                           	callstack 26
 16456                           
 16457                           ;incstack = 0
 16458                           ;BMP280_Read8@reg_addr stored from wreg
 16459  005750  6E02               	movwf	BMP280_Read8@reg_addr^0,c
 16460  005752                     
 16461                           ;bmp280_lib.c: 18: uint8_t BMP280_Read8(uint8_t reg_addr);bmp280_lib.c: 19: {;bmp280_lib
      +                          .c: 20:     uint8_t ret;;bmp280_lib.c: 22:     I2C_start();
 16462  005752  ECA4  F02C         	call	_I2C_start	;wreg free
 16463  005756                     
 16464                           ;bmp280_lib.c: 23:     I2C_Tx_data(0xEC);
 16465  005756  0EEC               	movlw	236
 16466  005758  ECC1  F02B         	call	_I2C_Tx_data
 16467  00575C                     
 16468                           ;bmp280_lib.c: 24:     I2C_Tx_data(reg_addr);
 16469  00575C  5002               	movf	BMP280_Read8@reg_addr^0,w,c
 16470  00575E  ECC1  F02B         	call	_I2C_Tx_data
 16471  005762                     
 16472                           ;bmp280_lib.c: 25:     I2C_stop();
 16473  005762  EC83  F02C         	call	_I2C_stop	;wreg free
 16474  005766                     
 16475                           ;bmp280_lib.c: 26:     I2C_start();
 16476  005766  ECA4  F02C         	call	_I2C_start	;wreg free
 16477  00576A                     
 16478                           ;bmp280_lib.c: 27:     I2C_Tx_data(0xEC | 1);
 16479  00576A  0EED               	movlw	237
 16480  00576C  ECC1  F02B         	call	_I2C_Tx_data
 16481  005770                     
 16482                           ;bmp280_lib.c: 28:     ret = I2C_Rx_data();
 16483  005770  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 16484  005774  6E03               	movwf	BMP280_Read8@ret^0,c
 16485                           
 16486                           ;bmp280_lib.c: 29:     I2C_Rx_nack();
 16487  005776  EC8E  F02C         	call	_I2C_Rx_nack	;wreg free
 16488                           
 16489                           ;bmp280_lib.c: 30:     I2C_stop();
 16490  00577A  EC83  F02C         	call	_I2C_stop	;wreg free
 16491  00577E                     
 16492                           ;bmp280_lib.c: 31:     return ret;
 16493  00577E  5003               	movf	BMP280_Read8@ret^0,w,c
 16494  005780  0012               	return		;funcret
 16495  005782                     __end_of_BMP280_Read8:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _BMP280_Read16 *****************
 16499 ;; Defined at:
 16500 ;;		line 35 in file "bmp280_lib.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  reg_addr        1    wreg     unsigned char 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  reg_addr        1    3[COMRAM] unsigned char 
 16505 ;;  ret             2    4[COMRAM] struct .
 16506 ;; Return value:  Size  Location     Type
 16507 ;;                  2    1[COMRAM] unsigned short 
 16508 ;; Registers used:
 16509 ;;		wreg, status,2, cstack
 16510 ;; Tracked objects:
 16511 ;;		On entry : 0/0
 16512 ;;		On exit  : 0/0
 16513 ;;		Unchanged: 0/0
 16514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16515 ;;      Params:         2       0       0       0       0       0       0       0       0
 16516 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16517 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16518 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16519 ;;Total ram usage:        5 bytes
 16520 ;; Hardware stack levels used: 1
 16521 ;; Hardware stack levels required when called: 3
 16522 ;; This function calls:
 16523 ;;		_I2C_Rx_ack
 16524 ;;		_I2C_Rx_data
 16525 ;;		_I2C_Rx_nack
 16526 ;;		_I2C_Tx_data
 16527 ;;		_I2C_start
 16528 ;;		_I2C_stop
 16529 ;; This function is called by:
 16530 ;;		_BMP280_begin
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text68
 16535  0055C4                     __ptext68:
 16536                           	callstack 0
 16537  0055C4                     _BMP280_Read16:
 16538                           	callstack 26
 16539                           
 16540                           ;incstack = 0
 16541                           ;BMP280_Read16@reg_addr stored from wreg
 16542  0055C4  6E04               	movwf	BMP280_Read16@reg_addr^0,c
 16543  0055C6                     
 16544                           ;bmp280_lib.c: 35: uint16_t BMP280_Read16(uint8_t reg_addr);bmp280_lib.c: 36: {;bmp280_l
      +                          ib.c: 41:     } ret;;bmp280_lib.c: 43:     I2C_start();
 16545  0055C6  ECA4  F02C         	call	_I2C_start	;wreg free
 16546  0055CA                     
 16547                           ;bmp280_lib.c: 44:     I2C_Tx_data(0xEC);
 16548  0055CA  0EEC               	movlw	236
 16549  0055CC  ECC1  F02B         	call	_I2C_Tx_data
 16550  0055D0                     
 16551                           ;bmp280_lib.c: 45:     I2C_Tx_data(reg_addr);
 16552  0055D0  5004               	movf	BMP280_Read16@reg_addr^0,w,c
 16553  0055D2  ECC1  F02B         	call	_I2C_Tx_data
 16554  0055D6                     
 16555                           ;bmp280_lib.c: 46:     I2C_stop();
 16556  0055D6  EC83  F02C         	call	_I2C_stop	;wreg free
 16557  0055DA                     
 16558                           ;bmp280_lib.c: 47:     I2C_start();
 16559  0055DA  ECA4  F02C         	call	_I2C_start	;wreg free
 16560  0055DE                     
 16561                           ;bmp280_lib.c: 48:     I2C_Tx_data(0xEC | 1);
 16562  0055DE  0EED               	movlw	237
 16563  0055E0  ECC1  F02B         	call	_I2C_Tx_data
 16564  0055E4                     
 16565                           ;bmp280_lib.c: 49:     ret.b[0] = I2C_Rx_data();
 16566  0055E4  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 16567  0055E8  6E05               	movwf	BMP280_Read16@ret^0,c
 16568                           
 16569                           ;bmp280_lib.c: 50:     I2C_Rx_ack();
 16570  0055EA  EC6C  F02C         	call	_I2C_Rx_ack	;wreg free
 16571  0055EE                     
 16572                           ;bmp280_lib.c: 51:     ret.b[1] = I2C_Rx_data();
 16573  0055EE  EC99  F02C         	call	_I2C_Rx_data	;wreg free
 16574  0055F2  6E06               	movwf	(BMP280_Read16@ret+1)^0,c
 16575  0055F4                     
 16576                           ;bmp280_lib.c: 52:     I2C_Rx_nack();
 16577  0055F4  EC8E  F02C         	call	_I2C_Rx_nack	;wreg free
 16578  0055F8                     
 16579                           ;bmp280_lib.c: 53:     I2C_stop();
 16580  0055F8  EC83  F02C         	call	_I2C_stop	;wreg free
 16581  0055FC                     
 16582                           ;bmp280_lib.c: 55:     return(ret.w);
 16583  0055FC  C005  F002         	movff	BMP280_Read16@ret,?_BMP280_Read16
 16584  005600  C006  F003         	movff	BMP280_Read16@ret+1,?_BMP280_Read16+1
 16585  005604  0012               	return		;funcret
 16586  005606                     __end_of_BMP280_Read16:
 16587                           	callstack 0
 16588                           
 16589 ;; *************** function _I2C_start *****************
 16590 ;; Defined at:
 16591 ;;		line 25 in file "i2c_lib.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		None
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16605 ;;      Params:         0       0       0       0       0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16608 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16609 ;;Total ram usage:        0 bytes
 16610 ;; Hardware stack levels used: 1
 16611 ;; Hardware stack levels required when called: 1
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_I2C_INA_write
 16616 ;;		_I2C_INA_read
 16617 ;;		_BMP280_Write
 16618 ;;		_BMP280_Read8
 16619 ;;		_BMP280_Read16
 16620 ;;		_BMP280_Update
 16621 ;;		_Expander_Write
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text69
 16626  005948                     __ptext69:
 16627                           	callstack 0
 16628  005948                     _I2C_start:
 16629                           	callstack 27
 16630  005948                     
 16631                           ;i2c_lib.c: 26:     SSPCON2bits.SEN = 1;
 16632  005948  80C5               	bsf	197,0,c	;volatile
 16633  00594A                     l66:
 16634  00594A  A69E               	btfss	158,3,c	;volatile
 16635  00594C  EFAA  F02C         	goto	u3791
 16636  005950  EFAC  F02C         	goto	u3790
 16637  005954                     u3791:
 16638  005954  EFA5  F02C         	goto	l66
 16639  005958                     u3790:
 16640  005958  0012               	return		;funcret
 16641  00595A                     __end_of_I2C_start:
 16642                           	callstack 0
 16643                           
 16644 ;; *************** function _I2C_Tx_data *****************
 16645 ;; Defined at:
 16646 ;;		line 57 in file "i2c_lib.c"
 16647 ;; Parameters:    Size  Location     Type
 16648 ;;  data            1    wreg     unsigned char 
 16649 ;; Auto vars:     Size  Location     Type
 16650 ;;  data            1    0[COMRAM] unsigned char 
 16651 ;; Return value:  Size  Location     Type
 16652 ;;                  1    wreg      void 
 16653 ;; Registers used:
 16654 ;;		wreg, cstack
 16655 ;; Tracked objects:
 16656 ;;		On entry : 0/0
 16657 ;;		On exit  : 0/0
 16658 ;;		Unchanged: 0/0
 16659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16660 ;;      Params:         0       0       0       0       0       0       0       0       0
 16661 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16663 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16664 ;;Total ram usage:        1 bytes
 16665 ;; Hardware stack levels used: 1
 16666 ;; Hardware stack levels required when called: 2
 16667 ;; This function calls:
 16668 ;;		_I2C_stop
 16669 ;; This function is called by:
 16670 ;;		_I2C_INA_write
 16671 ;;		_I2C_INA_read
 16672 ;;		_BMP280_Write
 16673 ;;		_BMP280_Read8
 16674 ;;		_BMP280_Read16
 16675 ;;		_BMP280_Update
 16676 ;;		_Expander_Write
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text70
 16681  005782                     __ptext70:
 16682                           	callstack 0
 16683  005782                     _I2C_Tx_data:
 16684                           	callstack 26
 16685                           
 16686                           ;incstack = 0
 16687                           ;I2C_Tx_data@data stored from wreg
 16688  005782  6E01               	movwf	I2C_Tx_data@data^0,c
 16689  005784                     
 16690                           ;i2c_lib.c: 58:     SSPBUF = data;
 16691  005784  C001  FFC9         	movff	I2C_Tx_data@data,4041	;volatile
 16692  005788                     
 16693                           ;i2c_lib.c: 59:     PIR1bits.SSPIF = 0;
 16694  005788  969E               	bcf	158,3,c	;volatile
 16695  00578A                     l96:
 16696  00578A  A69E               	btfss	158,3,c	;volatile
 16697  00578C  EFCA  F02B         	goto	u3801
 16698  005790  EFCC  F02B         	goto	u3800
 16699  005794                     u3801:
 16700  005794  EFC5  F02B         	goto	l96
 16701  005798                     u3800:
 16702  005798                     
 16703                           ;i2c_lib.c: 62:     if(SSPCON2bits.ACKSTAT == 1)
 16704  005798  ACC5               	btfss	197,6,c	;volatile
 16705  00579A  EFD1  F02B         	goto	u3811
 16706  00579E  EFD3  F02B         	goto	u3810
 16707  0057A2                     u3811:
 16708  0057A2  EFD5  F02B         	goto	l100
 16709  0057A6                     u3810:
 16710  0057A6                     
 16711                           ;i2c_lib.c: 63:       I2C_stop();
 16712  0057A6  EC83  F02C         	call	_I2C_stop	;wreg free
 16713  0057AA                     l100:
 16714  0057AA  0012               	return		;funcret
 16715  0057AC                     __end_of_I2C_Tx_data:
 16716                           	callstack 0
 16717                           
 16718 ;; *************** function _I2C_stop *****************
 16719 ;; Defined at:
 16720 ;;		line 30 in file "i2c_lib.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;		None
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;		None
 16725 ;; Return value:  Size  Location     Type
 16726 ;;                  1    wreg      void 
 16727 ;; Registers used:
 16728 ;;		None
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16734 ;;      Params:         0       0       0       0       0       0       0       0       0
 16735 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16737 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16738 ;;Total ram usage:        0 bytes
 16739 ;; Hardware stack levels used: 1
 16740 ;; Hardware stack levels required when called: 1
 16741 ;; This function calls:
 16742 ;;		Nothing
 16743 ;; This function is called by:
 16744 ;;		_I2C_Tx_data
 16745 ;;		_I2C_INA_write
 16746 ;;		_I2C_INA_read
 16747 ;;		_BMP280_Write
 16748 ;;		_BMP280_Read8
 16749 ;;		_BMP280_Read16
 16750 ;;		_BMP280_Update
 16751 ;;		_Expander_Write
 16752 ;; This function uses a non-reentrant model
 16753 ;;
 16754                           
 16755                           	psect	text71
 16756  005906                     __ptext71:
 16757                           	callstack 0
 16758  005906                     _I2C_stop:
 16759                           	callstack 27
 16760  005906                     
 16761                           ;i2c_lib.c: 31:     PIR1bits.SSPIF = 0;
 16762  005906  969E               	bcf	158,3,c	;volatile
 16763                           
 16764                           ;i2c_lib.c: 32:     SSPCON2bits.PEN = 1;
 16765  005908  84C5               	bsf	197,2,c	;volatile
 16766  00590A                     l72:
 16767  00590A  A69E               	btfss	158,3,c	;volatile
 16768  00590C  EF8A  F02C         	goto	u3351
 16769  005910  EF8C  F02C         	goto	u3350
 16770  005914                     u3351:
 16771  005914  EF85  F02C         	goto	l72
 16772  005918                     u3350:
 16773  005918                     
 16774                           ;i2c_lib.c: 34:     PIR1bits.SSPIF = 0;
 16775  005918  969E               	bcf	158,3,c	;volatile
 16776  00591A  0012               	return		;funcret
 16777  00591C                     __end_of_I2C_stop:
 16778                           	callstack 0
 16779                           
 16780 ;; *************** function _I2C_Rx_nack *****************
 16781 ;; Defined at:
 16782 ;;		line 50 in file "i2c_lib.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;		None
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;		None
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  1    wreg      void 
 16789 ;; Registers used:
 16790 ;;		None
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16796 ;;      Params:         0       0       0       0       0       0       0       0       0
 16797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16799 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16800 ;;Total ram usage:        0 bytes
 16801 ;; Hardware stack levels used: 1
 16802 ;; Hardware stack levels required when called: 1
 16803 ;; This function calls:
 16804 ;;		Nothing
 16805 ;; This function is called by:
 16806 ;;		_I2C_INA_read
 16807 ;;		_BMP280_Read8
 16808 ;;		_BMP280_Read16
 16809 ;;		_BMP280_Update
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           	psect	text72
 16814  00591C                     __ptext72:
 16815                           	callstack 0
 16816  00591C                     _I2C_Rx_nack:
 16817                           	callstack 27
 16818  00591C                     
 16819                           ;i2c_lib.c: 51:     SSPCON2bits.ACKDT = 1;
 16820  00591C  8AC5               	bsf	197,5,c	;volatile
 16821                           
 16822                           ;i2c_lib.c: 52:     PIR1bits.SSPIF = 0;
 16823  00591E  969E               	bcf	158,3,c	;volatile
 16824                           
 16825                           ;i2c_lib.c: 53:     SSPCON2bits.ACKEN = 1;
 16826  005920  88C5               	bsf	197,4,c	;volatile
 16827  005922                     l90:
 16828  005922  A69E               	btfss	158,3,c	;volatile
 16829  005924  EF96  F02C         	goto	u5541
 16830  005928  EF98  F02C         	goto	u5540
 16831  00592C                     u5541:
 16832  00592C  EF91  F02C         	goto	l90
 16833  005930                     u5540:
 16834  005930  0012               	return		;funcret
 16835  005932                     __end_of_I2C_Rx_nack:
 16836                           	callstack 0
 16837                           
 16838 ;; *************** function _I2C_Rx_data *****************
 16839 ;; Defined at:
 16840 ;;		line 66 in file "i2c_lib.c"
 16841 ;; Parameters:    Size  Location     Type
 16842 ;;		None
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;		None
 16845 ;; Return value:  Size  Location     Type
 16846 ;;                  1    wreg      unsigned char 
 16847 ;; Registers used:
 16848 ;;		wreg, status,2
 16849 ;; Tracked objects:
 16850 ;;		On entry : 0/0
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16854 ;;      Params:         0       0       0       0       0       0       0       0       0
 16855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16857 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16858 ;;Total ram usage:        0 bytes
 16859 ;; Hardware stack levels used: 1
 16860 ;; Hardware stack levels required when called: 1
 16861 ;; This function calls:
 16862 ;;		Nothing
 16863 ;; This function is called by:
 16864 ;;		_I2C_INA_read
 16865 ;;		_BMP280_Read8
 16866 ;;		_BMP280_Read16
 16867 ;;		_BMP280_Update
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           	psect	text73
 16872  005932                     __ptext73:
 16873                           	callstack 0
 16874  005932                     _I2C_Rx_data:
 16875                           	callstack 27
 16876  005932                     
 16877                           ;i2c_lib.c: 67:     SSPCON2bits.RCEN = 1;
 16878  005932  86C5               	bsf	197,3,c	;volatile
 16879                           
 16880                           ;i2c_lib.c: 68:     PIR1bits.SSPIF = 0;
 16881  005934  969E               	bcf	158,3,c	;volatile
 16882  005936                     l103:
 16883  005936  A69E               	btfss	158,3,c	;volatile
 16884  005938  EFA0  F02C         	goto	u5551
 16885  00593C  EFA2  F02C         	goto	u5550
 16886  005940                     u5551:
 16887  005940  EF9B  F02C         	goto	l103
 16888  005944                     u5550:
 16889  005944                     
 16890                           ;i2c_lib.c: 70:     return SSPBUF;
 16891  005944  50C9               	movf	201,w,c	;volatile
 16892  005946  0012               	return		;funcret
 16893  005948                     __end_of_I2C_Rx_data:
 16894                           	callstack 0
 16895                           
 16896 ;; *************** function _I2C_Rx_ack *****************
 16897 ;; Defined at:
 16898 ;;		line 42 in file "i2c_lib.c"
 16899 ;; Parameters:    Size  Location     Type
 16900 ;;		None
 16901 ;; Auto vars:     Size  Location     Type
 16902 ;;		None
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  1    wreg      void 
 16905 ;; Registers used:
 16906 ;;		None
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16912 ;;      Params:         0       0       0       0       0       0       0       0       0
 16913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16915 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16916 ;;Total ram usage:        0 bytes
 16917 ;; Hardware stack levels used: 1
 16918 ;; Hardware stack levels required when called: 1
 16919 ;; This function calls:
 16920 ;;		Nothing
 16921 ;; This function is called by:
 16922 ;;		_I2C_INA_read
 16923 ;;		_BMP280_Read16
 16924 ;;		_BMP280_Update
 16925 ;; This function uses a non-reentrant model
 16926 ;;
 16927                           
 16928                           	psect	text74
 16929  0058D8                     __ptext74:
 16930                           	callstack 0
 16931  0058D8                     _I2C_Rx_ack:
 16932                           	callstack 27
 16933  0058D8                     
 16934                           ;i2c_lib.c: 43:     SSPCON2bits.ACKDT = 0;
 16935  0058D8  9AC5               	bcf	197,5,c	;volatile
 16936                           
 16937                           ;i2c_lib.c: 44:     PIR1bits.SSPIF = 0;
 16938  0058DA  969E               	bcf	158,3,c	;volatile
 16939                           
 16940                           ;i2c_lib.c: 45:     SSPCON2bits.ACKEN = 1;
 16941  0058DC  88C5               	bsf	197,4,c	;volatile
 16942  0058DE                     l84:
 16943  0058DE  A69E               	btfss	158,3,c	;volatile
 16944  0058E0  EF74  F02C         	goto	u5531
 16945  0058E4  EF76  F02C         	goto	u5530
 16946  0058E8                     u5531:
 16947  0058E8  EF6F  F02C         	goto	l84
 16948  0058EC                     u5530:
 16949  0058EC                     
 16950                           ;i2c_lib.c: 47:     PIR1bits.SSPIF = 0;
 16951  0058EC  969E               	bcf	158,3,c	;volatile
 16952  0058EE  0012               	return		;funcret
 16953  0058F0                     __end_of_I2C_Rx_ack:
 16954                           	callstack 0
 16955                           
 16956 ;; *************** function _ISR1 *****************
 16957 ;; Defined at:
 16958 ;;		line 260 in file "main.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;		None
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  1    wreg      void 
 16965 ;; Registers used:
 16966 ;;		wreg, status,2
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/0
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16972 ;;      Params:         0       0       0       0       0       0       0       0       0
 16973 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16975 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16976 ;;Total ram usage:        0 bytes
 16977 ;; Hardware stack levels used: 1
 16978 ;; This function calls:
 16979 ;;		Nothing
 16980 ;; This function is called by:
 16981 ;;		Interrupt level 2
 16982 ;; This function uses a non-reentrant model
 16983 ;;
 16984                           
 16985                           	psect	intcode
 16986  000008                     __pintcode:
 16987                           	callstack 0
 16988  000008                     _ISR1:
 16989                           	callstack 22
 16990                           
 16991                           ;incstack = 0
 16992  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16993  00000A  EDB5  F02C         	call	int_func,f	;refresh shadow registers
 16994                           
 16995                           	psect	intcode_body
 16996  00596A                     __pintcode_body:
 16997                           	callstack 22
 16998  00596A                     int_func:
 16999                           	callstack 22
 17000  00596A  0006               	pop		; remove dummy address from shadow register refresh
 17001  00596C                     
 17002                           ;main.c: 261:     boton = 1;
 17003  00596C  0E01               	movlw	1
 17004  00596E  0100               	movlb	0	; () banked
 17005  005970  6FEE               	movwf	_boton& (0+255),b
 17006  005972                     
 17007                           ; BSR set to: 0
 17008                           ;main.c: 262:     INTCON3bits.INT2IF = 0;
 17009  005972  92F0               	bcf	240,1,c	;volatile
 17010  005974                     
 17011                           ; BSR set to: 0
 17012  005974  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17013  005976  0011               	retfie		f
 17014  005978                     __end_of_ISR1:
 17015                           	callstack 0
 17016                           
 17017                           	psect	rparam
 17018  0000                     
 17019                           	psect	temp
 17020  00005F                     btemp:
 17021                           	callstack 0
 17022  00005F                     	ds	1
 17023  0000                     int$flags	set	btemp
 17024  0000                     wtemp8	set	btemp+1
 17025  0000                     ttemp5	set	btemp+1
 17026  0000                     ttemp6	set	btemp+4
 17027  0000                     ttemp7	set	btemp+8
 17028                           
 17029                           	psect	idloc
 17030                           
 17031                           ;Config register IDLOC0 @ 0x200000
 17032                           ;	unspecified, using default values
 17033  200000                     	org	2097152
 17034  200000  FF                 	db	255
 17035                           
 17036                           ;Config register IDLOC1 @ 0x200001
 17037                           ;	unspecified, using default values
 17038  200001                     	org	2097153
 17039  200001  FF                 	db	255
 17040                           
 17041                           ;Config register IDLOC2 @ 0x200002
 17042                           ;	unspecified, using default values
 17043  200002                     	org	2097154
 17044  200002  FF                 	db	255
 17045                           
 17046                           ;Config register IDLOC3 @ 0x200003
 17047                           ;	unspecified, using default values
 17048  200003                     	org	2097155
 17049  200003  FF                 	db	255
 17050                           
 17051                           ;Config register IDLOC4 @ 0x200004
 17052                           ;	unspecified, using default values
 17053  200004                     	org	2097156
 17054  200004  FF                 	db	255
 17055                           
 17056                           ;Config register IDLOC5 @ 0x200005
 17057                           ;	unspecified, using default values
 17058  200005                     	org	2097157
 17059  200005  FF                 	db	255
 17060                           
 17061                           ;Config register IDLOC6 @ 0x200006
 17062                           ;	unspecified, using default values
 17063  200006                     	org	2097158
 17064  200006  FF                 	db	255
 17065                           
 17066                           ;Config register IDLOC7 @ 0x200007
 17067                           ;	unspecified, using default values
 17068  200007                     	org	2097159
 17069  200007  FF                 	db	255
 17070                           
 17071                           	psect	config
 17072                           
 17073                           ;Config register CONFIG1L @ 0x300000
 17074                           ;	PLL Prescaler Selection bits
 17075                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 17076                           ;	System Clock Postscaler Selection bits
 17077                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 17078                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 17079                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 17080  300000                     	org	3145728
 17081  300000  00                 	db	0
 17082                           
 17083                           ;Config register CONFIG1H @ 0x300001
 17084                           ;	Oscillator Selection bits
 17085                           ;	FOSC = HS, HS oscillator (HS)
 17086                           ;	Fail-Safe Clock Monitor Enable bit
 17087                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17088                           ;	Internal/External Oscillator Switchover bit
 17089                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17090  300001                     	org	3145729
 17091  300001  0C                 	db	12
 17092                           
 17093                           ;Config register CONFIG2L @ 0x300002
 17094                           ;	Power-up Timer Enable bit
 17095                           ;	PWRT = ON, PWRT enabled
 17096                           ;	Brown-out Reset Enable bits
 17097                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 17098                           ;	Brown-out Reset Voltage bits
 17099                           ;	BORV = 3, Minimum setting 2.05V
 17100                           ;	USB Voltage Regulator Enable bit
 17101                           ;	VREGEN = OFF, USB voltage regulator disabled
 17102  300002                     	org	3145730
 17103  300002  1E                 	db	30
 17104                           
 17105                           ;Config register CONFIG2H @ 0x300003
 17106                           ;	Watchdog Timer Enable bit
 17107                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17108                           ;	Watchdog Timer Postscale Select bits
 17109                           ;	WDTPS = 32768, 1:32768
 17110  300003                     	org	3145731
 17111  300003  1E                 	db	30
 17112                           
 17113                           ; Padding undefined space
 17114  300004                     	org	3145732
 17115  300004  FF                 	db	255
 17116                           
 17117                           ;Config register CONFIG3H @ 0x300005
 17118                           ;	CCP2 MUX bit
 17119                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 17120                           ;	PORTB A/D Enable bit
 17121                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 17122                           ;	Low-Power Timer 1 Oscillator Enable bit
 17123                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 17124                           ;	MCLR Pin Enable bit
 17125                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 17126  300005                     	org	3145733
 17127  300005  01                 	db	1
 17128                           
 17129                           ;Config register CONFIG4L @ 0x300006
 17130                           ;	Stack Full/Underflow Reset Enable bit
 17131                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17132                           ;	Single-Supply ICSP Enable bit
 17133                           ;	LVP = OFF, Single-Supply ICSP disabled
 17134                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 17135                           ;	ICPRT = OFF, ICPORT disabled
 17136                           ;	Extended Instruction Set Enable bit
 17137                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17138                           ;	Background Debugger Enable bit
 17139                           ;	DEBUG = 0x1, unprogrammed default
 17140  300006                     	org	3145734
 17141  300006  81                 	db	129
 17142                           
 17143                           ; Padding undefined space
 17144  300007                     	org	3145735
 17145  300007  FF                 	db	255
 17146                           
 17147                           ;Config register CONFIG5L @ 0x300008
 17148                           ;	Code Protection bit
 17149                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 17150                           ;	Code Protection bit
 17151                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 17152                           ;	Code Protection bit
 17153                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 17154                           ;	Code Protection bit
 17155                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 17156  300008                     	org	3145736
 17157  300008  0F                 	db	15
 17158                           
 17159                           ;Config register CONFIG5H @ 0x300009
 17160                           ;	Boot Block Code Protection bit
 17161                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 17162                           ;	Data EEPROM Code Protection bit
 17163                           ;	CPD = OFF, Data EEPROM is not code-protected
 17164  300009                     	org	3145737
 17165  300009  C0                 	db	192
 17166                           
 17167                           ;Config register CONFIG6L @ 0x30000A
 17168                           ;	Write Protection bit
 17169                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 17170                           ;	Write Protection bit
 17171                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 17172                           ;	Write Protection bit
 17173                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 17174                           ;	Write Protection bit
 17175                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 17176  30000A                     	org	3145738
 17177  30000A  0F                 	db	15
 17178                           
 17179                           ;Config register CONFIG6H @ 0x30000B
 17180                           ;	Configuration Register Write Protection bit
 17181                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 17182                           ;	Boot Block Write Protection bit
 17183                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 17184                           ;	Data EEPROM Write Protection bit
 17185                           ;	WRTD = OFF, Data EEPROM is not write-protected
 17186  30000B                     	org	3145739
 17187  30000B  E0                 	db	224
 17188                           
 17189                           ;Config register CONFIG7L @ 0x30000C
 17190                           ;	Table Read Protection bit
 17191                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 17192                           ;	Table Read Protection bit
 17193                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 17194                           ;	Table Read Protection bit
 17195                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 17196                           ;	Table Read Protection bit
 17197                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 17198  30000C                     	org	3145740
 17199  30000C  0F                 	db	15
 17200                           
 17201                           ;Config register CONFIG7H @ 0x30000D
 17202                           ;	Boot Block Table Read Protection bit
 17203                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 17204  30000D                     	org	3145741
 17205  30000D  40                 	db	64
 17206                           tosu	equ	0xFFF
 17207                           tosh	equ	0xFFE
 17208                           tosl	equ	0xFFD
 17209                           stkptr	equ	0xFFC
 17210                           pclatu	equ	0xFFB
 17211                           pclath	equ	0xFFA
 17212                           pcl	equ	0xFF9
 17213                           tblptru	equ	0xFF8
 17214                           tblptrh	equ	0xFF7
 17215                           tblptrl	equ	0xFF6
 17216                           tablat	equ	0xFF5
 17217                           prodh	equ	0xFF4
 17218                           prodl	equ	0xFF3
 17219                           indf0	equ	0xFEF
 17220                           postinc0	equ	0xFEE
 17221                           postdec0	equ	0xFED
 17222                           preinc0	equ	0xFEC
 17223                           plusw0	equ	0xFEB
 17224                           fsr0h	equ	0xFEA
 17225                           fsr0l	equ	0xFE9
 17226                           wreg	equ	0xFE8
 17227                           indf1	equ	0xFE7
 17228                           postinc1	equ	0xFE6
 17229                           postdec1	equ	0xFE5
 17230                           preinc1	equ	0xFE4
 17231                           plusw1	equ	0xFE3
 17232                           fsr1h	equ	0xFE2
 17233                           fsr1l	equ	0xFE1
 17234                           bsr	equ	0xFE0
 17235                           indf2	equ	0xFDF
 17236                           postinc2	equ	0xFDE
 17237                           postdec2	equ	0xFDD
 17238                           preinc2	equ	0xFDC
 17239                           plusw2	equ	0xFDB
 17240                           fsr2h	equ	0xFDA
 17241                           fsr2l	equ	0xFD9
 17242                           status	equ	0xFD8

Data Sizes:
    Strings     781
    Constant    12
    Data        29
    BSS         313
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     95     160
    BANK1           256      0     197
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GPSRead_gga@stream	PTR unsigned char  size(2) Largest target is 1
		 -> stream(BANK0[1]), 

    GPSRead_rmc@stream	PTR unsigned char  size(2) Largest target is 1
		 -> stream(BANK0[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_59(CODE[4]), STR_54(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_59(CODE[4]), STR_54(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 36
		 -> vfpfcnvrt@ct(COMRAM[3]), STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), 
		 -> STR_31(CODE[10]), STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), 
		 -> STR_23(CODE[23]), STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), 
		 -> STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), 
		 -> STR_14(CODE[28]), STR_12(CODE[14]), STR_11(CODE[11]), STR_1(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 36
		 -> vfpfcnvrt@ct(COMRAM[3]), STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), 
		 -> STR_31(CODE[10]), STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), 
		 -> STR_23(CODE[23]), STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), 
		 -> STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), 
		 -> STR_14(CODE[28]), STR_12(CODE[14]), STR_11(CODE[11]), STR_1(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), 
		 -> BMP280_calib(BANK1[24]), description(BANK1[20]), satel(BANK1[4]), alt(BANK1[10]), 
		 -> course(BANK1[8]), speed(BANK1[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), 
		 -> BMP280_calib(BANK1[24]), description(BANK1[20]), satel(BANK1[4]), alt(BANK1[10]), 
		 -> course(BANK1[8]), speed(BANK1[8]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_49(CODE[4]), STR_48(CODE[4]), STR_45(CODE[4]), STR_44(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_49(CODE[4]), STR_48(CODE[4]), STR_45(CODE[4]), STR_44(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> gps_gga(CODE[6]), gps_rmc(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 7
		 -> nmea_log(BANK1[7]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[21]), 
		 -> STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), STR_14(CODE[28]), 
		 -> STR_11(CODE[11]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), STR_31(CODE[10]), 
		 -> STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), STR_23(CODE[23]), 
		 -> STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[21]), 
		 -> STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), STR_14(CODE[28]), 
		 -> STR_12(CODE[14]), STR_11(CODE[11]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), STR_31(CODE[10]), 
		 -> STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), STR_23(CODE[23]), 
		 -> STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[21]), 
		 -> STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), STR_14(CODE[28]), 
		 -> STR_12(CODE[14]), STR_11(CODE[11]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), STR_31(CODE[10]), 
		 -> STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), STR_23(CODE[23]), 
		 -> STR_21(CODE[22]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[21]), 
		 -> STR_17(CODE[36]), STR_16(CODE[34]), STR_15(CODE[28]), STR_14(CODE[28]), 
		 -> STR_12(CODE[14]), STR_11(CODE[11]), STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), BMP280_calib(BANK1[24]), description(BANK1[20]), 
		 -> satel(BANK1[4]), alt(BANK1[10]), course(BANK1[8]), speed(BANK1[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), BMP280_calib(BANK1[24]), description(BANK1[20]), 
		 -> satel(BANK1[4]), alt(BANK1[10]), course(BANK1[8]), speed(BANK1[8]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), BMP280_calib(BANK1[24]), 
		 -> description(BANK1[20]), satel(BANK1[4]), alt(BANK1[10]), course(BANK1[8]), 
		 -> speed(BANK1[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> NULL(NULL[0]), sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_37(CODE[16]), STR_35(CODE[12]), STR_33(CODE[12]), STR_31(CODE[10]), 
		 -> STR_29(CODE[26]), STR_27(CODE[25]), STR_25(CODE[23]), STR_23(CODE[23]), 
		 -> STR_12(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 18
		 -> lcd_text(BANK1[18]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1975$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1975$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 20
		 -> lcd_text(BANK1[18]), description(BANK1[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> lcd_text(BANK1[18]), description(BANK1[20]), 

    memcpy@s1	PTR const void  size(2) Largest target is 17
		 -> STR_36(CODE[17]), STR_34(CODE[8]), STR_32(CODE[17]), STR_30(CODE[17]), 
		 -> STR_28(CODE[17]), STR_26(CODE[17]), STR_24(CODE[17]), STR_22(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_36(CODE[17]), STR_34(CODE[8]), STR_32(CODE[17]), STR_30(CODE[17]), 
		 -> STR_28(CODE[17]), STR_26(CODE[17]), STR_24(CODE[17]), STR_22(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_39(CODE[17]), STR_38(CODE[17]), lcd_text(BANK1[18]), description(BANK1[20]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), 

    GPSRead_gga@alt	PTR unsigned char  size(2) Largest target is 10
		 -> alt(BANK1[10]), 

    GPSRead_gga@satel	PTR unsigned char  size(2) Largest target is 4
		 -> satel(BANK1[4]), 

    GPSRead_gga@nmea_log	PTR unsigned char  size(2) Largest target is 7
		 -> nmea_log(BANK1[7]), 

    GPSRead_rmc@date	PTR unsigned char  size(2) Largest target is 7
		 -> date(BANK1[7]), 

    GPSRead_rmc@course	PTR unsigned char  size(2) Largest target is 8
		 -> course(BANK1[8]), 

    GPSRead_rmc@speed	PTR unsigned char  size(2) Largest target is 8
		 -> speed(BANK1[8]), 

    GPSRead_rmc@lon	PTR unsigned char  size(2) Largest target is 13
		 -> lon(BANK1[13]), 

    GPSRead_rmc@lat	PTR unsigned char  size(2) Largest target is 12
		 -> lat(BANK1[12]), 

    GPSRead_rmc@time	PTR unsigned char  size(2) Largest target is 12
		 -> time(BANK1[12]), 

    GPSRead_rmc@nmea_log	PTR unsigned char  size(2) Largest target is 7
		 -> nmea_log(BANK1[7]), 

    dht11_check_humidity@ptr_h	PTR unsigned char  size(2) Largest target is 19
		 -> humidity(BANK1[19]), 

    read_data_dht11@dht_data	PTR unsigned char  size(2) Largest target is 1
		 -> CheckSum(BANK0[1]), T_Byte2(BANK0[1]), T_Byte1(BANK0[1]), RH_Byte2(BANK0[1]), 
		 -> RH_Byte1(BANK0[1]), 

    BMP280_readPressure@pres	PTR unsigned long  size(2) Largest target is 4
		 -> pres(BANK0[4]), 

    BMP280_readTemperature@temp	PTR long  size(2) Largest target is 4
		 -> temp(BANK0[4]), 

    sp__memcpy	PTR void  size(2) Largest target is 20
		 -> lcd_text(BANK1[18]), description(BANK1[20]), 

    ptr_h	PTR unsigned char  size(2) Largest target is 19
		 -> humidity(BANK1[19]), 

    UART_Print@data	PTR unsigned char  size(2) Largest target is 30
		 -> STR_43(CODE[30]), STR_42(CODE[18]), STR_41(CODE[12]), STR_40(CODE[5]), 
		 -> STR_13(CODE[3]), STR_5(CODE[21]), STR_4(CODE[19]), humidity(BANK1[19]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace
    _ina219Init->_I2C_INA_write
    _I2C_INA_write->_I2C_Tx_data
    _ina219GetPower_mW->___flmul
    _ina219GetCurrent_mA->___flmul
    _ina219GetBusVoltage_V->___flmul
    ___flmul->___xxtofl
    _I2C_INA_read->_I2C_Tx_data
    _dht11_check_humidity->___awdiv
    _UART_Print->_putch
    _USART_Init->___aldiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2C_Tx_data
    _GPSRead_rmc->_strcmp
    _GPSRead_gga->_strcmp
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Tx_data
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Read16
    _BMP280_Write->_I2C_Tx_data
    _BMP280_Read8->_I2C_Tx_data
    _BMP280_Read16->_I2C_Tx_data

Critical Paths under _ISR1 in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  123638
                                             93 BANK0      2     2      0
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                        _GPSRead_gga
                        _GPSRead_rmc
                    _I2C_master_init
                          _LCD_Begin
                           _LCD_Goto
                          _LCD_Print
                         _UART_Print
                         _USART_Init
                            ___fldiv
                           ___xxtofl
               _dht11_check_humidity
              _ina219GetBusVoltage_V
                _ina219GetCurrent_mA
                  _ina219GetPower_mW
                         _ina219Init
                     _int_ext_enable
                             _memcpy
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             37    15     22   38670
                                             58 BANK0     35    13     22
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24     4     20   37917
                                             58 BANK0     22     2     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37093
                                             50 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   36485
                                             71 COMRAM    22    16      6
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2617
                                             10 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   25000
                                             59 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5109
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2169
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2123
                                             10 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1768
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1218
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              11     5      6    3107
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _int_ext_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ina219Init                                           2     2      0     263
                      _I2C_INA_write
 ---------------------------------------------------------------------------------
 (2) _I2C_INA_write                                        3     1      2     240
                                              1 COMRAM     3     1      2
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _ina219GetPower_mW                                    4     0      4    3858
                                             39 COMRAM     4     0      4
                       _I2C_INA_read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ina219GetCurrent_mA                                  4     0      4    3858
                                             39 COMRAM     4     0      4
                       _I2C_INA_read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ina219GetBusVoltage_V                                6     2      4    3858
                                             39 COMRAM     6     2      4
                       _I2C_INA_read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3112
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_INA_read                                         5     3      2      44
                                              1 COMRAM     5     3      2
                         _I2C_Rx_ack
                        _I2C_Rx_data
                        _I2C_Rx_nack
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _dht11_check_humidity                                 4     2      2    2536
                                              8 COMRAM     4     2      2
                         _UART_Print
                            ___awdiv
                            ___awmod
               _check_response_dht11
                    _read_data_dht11
                 _start_signal_dht11
 ---------------------------------------------------------------------------------
 (2) _start_signal_dht11                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _read_data_dht11                                      7     5      2     492
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _check_response_dht11                                 4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2     720
                                              1 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    4221
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2    2069
                                              3 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1    2133
                                              5 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     265
                                              5 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     199
                                              3 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     111
                                              2 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              1 COMRAM     1     1      0
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _I2C_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPSRead_rmc                                         18     2     16    1200
                                              5 COMRAM    18     2     16
                              _getch
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _GPSRead_gga                                         10     2      8     808
                                              5 COMRAM    10     2      8
                              _getch
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     416
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              18    16      2    6953
                                             26 COMRAM    18    16      2
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0     188
                                              1 COMRAM     8     8      0
                         _I2C_Rx_ack
                        _I2C_Rx_data
                        _I2C_Rx_nack
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 26    24      2    7277
                                             26 COMRAM    26    24      2
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2498
                                             14 COMRAM    12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    4100
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4     912
                                              6 COMRAM     9     5      4
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         2     1      1     294
                                              1 COMRAM     2     1      1
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         2     2      0      67
                                              1 COMRAM     2     2      0
                        _I2C_Rx_data
                        _I2C_Rx_nack
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        5     3      2      91
                                              1 COMRAM     5     3      2
                         _I2C_Rx_ack
                        _I2C_Rx_data
                        _I2C_Rx_nack
                        _I2C_Tx_data
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Tx_data                                          1     1      0      22
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Rx_nack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Rx_data                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Rx_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Read16
       _I2C_Rx_ack
       _I2C_Rx_data
       _I2C_Rx_nack
       _I2C_Tx_data
         _I2C_stop
       _I2C_start
       _I2C_stop
     _BMP280_Read8
       _I2C_Rx_data
       _I2C_Rx_nack
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
     _BMP280_Write
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Rx_ack
       _I2C_Rx_data
       _I2C_Rx_nack
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
     ___aldiv
     ___lmul
   _GPSRead_gga
     _getch
     _strcmp
   _GPSRead_rmc
     _getch
     _strcmp
   _I2C_master_init
   _LCD_Begin
     _Expander_Write
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _UART_Print
     _putch
   _USART_Init
     ___aldiv
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _dht11_check_humidity
     _UART_Print
     ___awdiv
     ___awmod
     _check_response_dht11
     _read_data_dht11
     _start_signal_dht11
   _ina219GetBusVoltage_V
     _I2C_INA_read
       _I2C_Rx_ack
       _I2C_Rx_data
       _I2C_Rx_nack
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _ina219GetCurrent_mA
     _I2C_INA_read
     ___flmul
     ___xxtofl
   _ina219GetPower_mW
     _I2C_INA_read
     ___flmul
     ___xxtofl
   _ina219Init
     _I2C_INA_write
       _I2C_Tx_data
       _I2C_start
       _I2C_stop
   _int_ext_enable
   _memcpy
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
   _sprintf
     _vfprintf

 _ISR1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C5       7       77.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     5F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRll         20      0       0      28        0.0%
BITBIGSFRhhhhhl     1F      0       0      21        0.0%
BITBIGSFRlh         11      0       0      27        0.0%
BITBIGSFRhhll       11      0       0      24        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      25        0.0%
BITBIGSFRhlll        9      0       0      26        0.0%
BITBIGSFRhhlh        3      0       0      23        0.0%
BITBIGSFRhhhl        3      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     213      29        0.0%
DATA                 0      0     213       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 07 12:53:51 2023

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _i 00EF  
                             _j 00ED                               _p 00BF                    ___fldiv@sign 001F  
                   _SSPSTATbits 000FC7     __end_of_ina219GetCurrent_mA 5292                              l23 5016  
                            l32 57FA                              l34 5808                              l26 58F2  
                            l42 4FA6                              l36 581C                              l29 5904  
                            l63 587E                              l72 590A                              l90 5922  
                            l74 5918                              l66 594A                              l75 591A  
                            l84 58DE                              l93 5930                              l69 5958  
                            l86 58EC                              l87 58EE                              l96 578A  
                            l98 5798                              _RS 07F0                    ___awdiv@sign 0006  
                            _ch 005E             ___wmul@multiplicand 0003                             l100 57AA  
                           l103 5936                             l106 5946                             l212 00E8  
                           l213 00E8                             l225 02BA                             l331 5604  
                           l403 442C                             l227 02EA                             l500 589C  
                           l228 031A                             l325 58BA                             l341 48C6  
                           l350 1D60                             l335 3ECE                             l503 563E  
                           l407 4512                             l328 5780                             l344 33EA  
                           l408 4472                             l424 3D8A                             l530 46FE  
                           l282 574E                             l291 5290                             l348 1F62  
                           l509 54F2                             l381 585E                             l285 52F4  
                           l518 515A                             l390 47E2                             l294 522A  
                           l527 4CA8                             l279 583E                             l551 5968  
                           l464 37B4                             l392 477A                             l384 470A  
                           l288 4F2E                             l633 4208                             l481 40FC  
                           l554 57F8                             l581 4E96                             l565 51B4  
                           l813 4E02                             l566 51C4                             l824 4412  
                           l819 43CC                             l851 430E                             l588 4EA6  
                           l828 56AE                             l785 4BF2                             l798 4D58  
                           _alt 017D                             _lat 0165                             _pad 4A6A  
                           _lon 0158                    ___awmod@sign 0006                             wreg 000FE8  
                  ___flmul@aexp 0020                    ___flmul@bexp 0021                    ___flmul@sign 001B  
                  ___flmul@temp 0026                    ___flmul@prod 0022               ??_read_data_dht11 0003  
               __end_of_LCD_Cmd 54F4          BMP280_begin@P_sampling 0008                    ___fltol@exp1 000A  
                          l1212 3968                            l1300 499E                            l1108 28C4  
                          l1124 557E                            l1141 2F92                            l1109 28B2  
                          l1150 307A                            l1223 3900                            l1231 54A8  
                          l1216 38A4                            l1136 316E                            l1209 380C  
                          l1138 2FCE                            l1082 26DA                            l1410 3AEE  
                          l1147 3014                            l1091 29AA                            l1083 26C8  
                          l1172 2DD4                            l1084 268E                            l1332 1006  
                          l1316 1856                            l1149 308C                            l1405 3A9C  
                          l1406 3AE6                            l1238 5404                            l1175 2C66  
                          l1511 5676                            l1431 234A                            l1168 2A70  
                          l1360 1446                            l1185 2D96                            l1177 2CDE  
                          l1505 5456                            l1425 24EA                            l1178 2CCC  
                          l1282 4AF2                            l1099 27F4                            l1284 4B2E  
                          l1444 534E                            l1445 5356                            l1541 57D2  
                          l1526 4A68                            l1534 55C2                            l1295 492E  
                          l1455 4610                            l1279 4AB0                            l1481 3C44  
                          l4201 25B4                            l1561 571C                            l5001 0CD0  
                          l1298 4970                            l1490 3540                            l1394 39EA  
                          l4211 25F0                            l4203 25BC                            l1555 53B2  
                          l5011 0CFE                            l5003 0CE2                            l1396 39F2  
                          l1549 5086                            l4301 281A                            l4221 2604  
                          l4213 25F4                            l4205 25CC                            l5101 10AE  
                          l5021 0D56                            l5005 0CEE                            l5013 0D04  
                          l1565 3FE8                            l1478 3C3C                            l4143 58F2  
                          l4151 49C4                            l4311 2848                            l4231 2618  
                          l4223 2608                            l4215 25F8                            l4207 25DE  
                          l1487 35FC                            l1575 5530                            l5111 10F2  
                          l5103 10C0                            l5023 0D74                            l5031 0DC0  
                          l5007 0CF6                            l4161 5906                            l6001 5104  
                          l4145 5900                            l1497 56E6                            l4153 49CE  
                          l4401 2DD6                            l4313 2856                            l4305 282E  
                          l4321 2874                            l4233 261C                            l4225 260C  
                          l4217 25FC                            l4209 25EC                            l4241 262C  
                          l5201 159A                            l5121 113C                            l5113 110A  
                          l5105 10CE                            l5041 0E30                            l5025 0D8E  
                          l5009 0CFA                            l1578 5538                            l6003 5110  
                          l4155 49EC                            l4147 49A0                            l4411 2E12  
                          l4403 2DE2                            l4315 285E                            l4307 2838  
                          l4323 2882                            l4251 269C                            l4243 2630  
                          l4235 2620                            l4227 2610                            l4219 2600  
                          l4171 2518                            l4163 24EC                            l5211 1638  
                          l5203 159E                            l5123 1150                            l5131 1246  
                          l5115 111C                            l5107 10D2                            l5051 0E68  
                          l5027 0D98                            l5019 0D2A                            l6005 511C  
                          l6021 4C6C                            l6013 4BF4                            l6101 3C76  
                          l4157 4A22                            l4149 49B2                            l4501 3044  
                          l4421 2E42                            l4413 2E22                            l4405 2DF0  
                          l4333 28D4                            l4341 292A                            l4325 2886  
                          l4317 2862                            l4309 2846                            l4261 26C6  
                          l4253 26A8                            l4245 265A                            l4237 2624  
                          l4229 2614                            l4181 2552                            l4173 2528  
                          l4165 24F8                            l5221 1696                            l5205 15A4  
                          l5213 163C                            l5141 1312                            l5133 1264  
                          l5125 11B4                            l5109 10E4                            l5117 1124  
                          l5061 0F32                            l5037 0DE6                            l5301 39BA  
                          l6007 5128                            l6015 4BF8                            l6111 3CEE  
                          l6103 3C90                            l6023 4EA8                            l4511 30B6  
                          l4503 3072                            l4431 2E78                            l4423 2E48  
                          l4415 2E24                            l4407 2DF2                            l4351 297C  
                          l4343 293A                            l4335 28E0                            l4327 2894  
                          l4319 2872                            l4271 271C                            l4263 26E8  
                          l4255 26AC                            l4247 2676                            l4239 2628  
                          l4191 2580                            l4183 2558                            l4175 2538  
                          l4167 2506                            l5231 16D4                            l5223 16A6  
                          l5215 165A                            l5207 15FC                            l5151 13C2  
                          l5143 1322                            l5135 1298                            l5127 120C  
                          l5119 112C                            l5071 0FB4                            l5063 0F66  
                          l5055 0E9E                            l5039 0E12                            l5311 3A2E  
                          l5303 39C8                            l6201 3FF0                            l6121 35FE  
                          l5401 5628                            l6017 4C00                            l6113 3D20  
                          l6105 3CAA                            l4601 2B42                            l6025 4EB6  
                          l6033 522C                            l6041 51C6                            l4521 312E  
                          l4513 30E0                            l4441 2EB8                            l4433 2E88  
                          l4425 2E56                            l4409 2E02                            l4417 2E2C  
                          l4361 299A                            l4353 2982                            l4345 294A  
                          l4337 28EE                            l4329 28AA                            l4281 2756  
                          l4273 272A                            l4265 26F8                            l4257 26BA  
                          l4249 2686                            l4193 2582                            l4185 256A  
                          l4177 253A                            l4169 2508                            l5241 170A  
                          l5233 16E4                            l5225 16AA                            l5217 1676  
                          l5209 1630                            l5161 1432                            l5153 13F6  
                          l5145 1332                            l5137 12CA                            l5129 1240  
                          l5073 0FC6                            l5081 1012                            l5065 0F6E  
                          l5057 0ED2                            l5049 0E4E                            l5321 3A7E  
                          l5313 3A4C                            l6051 3174                            l6211 4022  
                          l6203 4002                            l6131 3630                            l6123 3604  
                          l5403 562E                            l6019 4C6A                            l6115 3D6C  
                          l6107 3CC4                            l4611 2BA4                            l4603 2B52  
                          l6027 4ED8                            l6035 523A                            l6043 51D4  
                          l5331 3AF0                            l4531 3164                            l4523 314A  
                          l4507 309C                            l4515 30E4                            l4443 2EC8  
                          l4451 2EE8                            l4435 2E8A                            l4427 2E58  
                          l4419 2E3C                            l4355 2984                            l4347 296A  
                          l4339 2928                            l4291 27C2                            l4283 2758  
                          l4275 2738                            l4259 26BC                            l4195 2592  
                          l4187 256C                            l4179 2542                            l4371 55A2  
                          l5251 1766                            l5243 1716                            l5235 16EC  
                          l5227 16BA                            l5219 1688                            l5171 14E8  
                          l5163 143E                            l5155 140A                            l5147 1366  
                          l5139 12E0                            l5091 1052                            l5075 0FD8  
                          l5059 0ED8                            l5067 0FA0                            l5315 3A58  
                          l5307 3A16                            l5411 1F96                            l6061 3382  
                          l6053 31FA                            l6213 4034                            l6205 4008  
                          l6141 3652                            l6133 3636                            l6125 3616  
                          l5405 5636                            l4701 4BA6                            l6109 3CDE  
                          l6117 3D7C                            l4621 2C4C                            l4613 2BC0  
                          l4605 2B6C                            l4541 29B8                            l6029 4F1E  
                          l6037 5280                            l6045 521A                            l5341 3B5E  
                          l5333 3B04                            l4525 314E                            l4517 30FE  
                          l4509 30A8                            l4461 2F26                            l4453 2EF8  
                          l4445 2ED0                            l4429 2E68                            l4437 2E92  
                          l4357 298A                            l4349 296E                            l4293 27C4  
                          l4285 2762                            l4277 2744                            l4269 270C  
                          l4197 25A2                            l4189 2572                            l4365 5580  
                          l4373 56E8                            l5261 17B0                            l5245 171C  
                          l5253 176C                            l5237 16FA                            l5229 16CC  
                          l5181 1530                            l5173 14FA                            l5165 1462  
                          l5149 13BC                            l5157 140E                            l5093 1088  
                          l5077 0FE0                            l5069 0FB0                            l5325 3AB0  
                          l5317 3A76                            l5309 3A2A                            l5501 247A  
                          l5421 1FE6                            l5413 1FA8                            l6301 007C  
                          ?_pad 0012                            l4391 5788                            l6071 1A9A  
                          l6055 322E                            l6231 408C                            l6223 4068  
                          l6151 3698                            l6135 3648                            l6127 361C  
                          l4703 4BBC                            l4711 4BD2                            l6119 3D88  
                          l4631 2C88                            l4623 2C56                            l4615 2BEA  
                          l4607 2B7C                            l4551 29F8                            l4543 29C6  
                          l5343 3B66                            l4527 315C                            l4519 3114  
                          l4471 2F6E                            l4463 2F36                            l4455 2EF8  
                          l4447 2ED4                            l4439 2EA2                            l4359 2998  
                          l4295 27D4                            l4279 2748                            l4287 2768  
                          l4199 25B2                            l4367 558C                            l4375 56F4  
                          l4383 5640                            l5263 17BC                            l5255 177E  
                          l5247 1742                            l5239 1702                            l5191 1566  
                          l5183 1540                            l5175 1508                            l5167 14C6  
                          l5159 141E                            l5095 1090                            l5087 1024  
                          l5079 0FFA                            l5327 3AC4                            l5319 3A7A  
                          l5503 248E                            l5431 2072                            l5423 200A  
                          l5415 1FAC                            l5407 1F64                            l6311 00EC  
                          l6303 0096                            l4393 57A6                            l5601 576A  
                          l6081 1CDA                            l6073 1AF8                            l6065 1858  
                          l6057 32D6                            l6049 3170                            l5521 57FA  
                          l6233 409C                            l6241 40B6                            l6225 406E  
                          l6217 403A                            l6209 401C                            l6161 36DA  
                          l6153 36AA                            l6145 367C                            l4713 4BE2  
                          l4705 4BC4                            l4721 4CAE                            l4641 2CFA  
                          l4633 2C96                            l4625 2C64                            l4617 2C20  
                          l4609 2B98                            l4561 2A28                            l4553 29FE  
                          l4545 29C8                            l5353 3BD8                            l5345 3B6E  
                          l5337 3B08                            l4529 3162                            l4481 2FBC  
                          l4473 2F82                            l4465 2F46                            l4289 278E  
                          l4297 27E4                            l4801 420A                            l4369 559E  
                          l4377 56F8                            l5281 1830                            l5273 17E0  
                          l5265 17C4                            l5257 1798                            l5249 175E  
                          l5193 156A                            l5185 1544                            l5169 14D6  
                          l5177 1510                            l5089 1036                            l5097 1094  
                          l5329 3AC8                            l5441 2120                            l5425 2044  
                          l5417 1FD0                            l5433 20B0                            l5409 1F88  
                          l5513 24B4                            l6401 0538                            l6321 015E  
                          l6313 0120                            l6305 009A                            l4387 5948  
                          l5611 55CA                            l5603 5770                            l6091 1F4A  
                          l6083 1CEE                            l6075 1C24                            l6067 1912  
                          l6059 3368                            l5523 5816                            l6235 40A2  
                          l6227 4080                            l6243 40E2                            l6219 403E  
                          l6155 36BC                            l6147 3682                            l6139 364E  
                          l5531 4F38                            l4715 4BEA                            l4707 4BC6  
                          l4731 4CDE                            l4723 4CBC                            l4651 2D64  
                          l4643 2D08                            l4635 2CC4                            l4627 2C76  
                          l4619 2C2E                            l4571 2A60                            l4563 2A2A  
                          l4555 2A0E                            l4547 29D8                            l4539 29AC  
                          l4395 57D4                            l5355 3C0E                            l5347 3BA2  
                          l5339 3B24                            l4491 3004                            l4483 2FCC  
                          l4475 2F90                            l4467 2F56                            l4459 2F0C  
                          l4299 280A                            l4811 4260                            l4803 4220  
                          l4379 5710                            l5283 1836                            l5275 180C  
                          l5267 17D4                            l5259 179E                            l5195 1570  
                          l5187 154A                            l5179 1522                            l5099 109C  
                          l5291 397C                            l5371 3F14                            l5363 3ED0  
                          l5515 24D8                            l5507 249A                            l5451 21C2  
                          l5443 2150                            l5435 20D0                            l5427 2064  
                          l5419 1FD8                            l6411 056E                            l6331 0196  
                          l6323 0168                            l6315 0124                            l6307 00B4  
                          l4389 5784                            l5621 55E4                            l5613 55D0  
                          l5605 577E                            l6085 1D28                            l6069 1970  
                          l5525 581A                            l6245 40F4                            l6229 4084  
                          l6173 3716                            l6165 36EE                            l6157 36C4  
                          l6149 3694                            l5533 4F68                            l4709 4BCC  
                          l4741 4D24                            l4733 4CF0                            l4725 4CC4  
                          l5701 4788                            l4661 2DBA                            l4653 2D7E  
                          l4645 2D32                            l4629 2C84                            l4581 2AB0  
                          l4573 2A80                            l4565 2A3A                            l4557 2A14  
                          l4549 29E8                            l5541 572A                            l6261 547A  
                          l4397 57F0                            l5357 3C20                            l4493 3012  
                          l4485 2FDE                            l4477 2F9C                            l4469 2F5E  
                          l4813 4270                            l5277 1818                            l5269 17DA  
                          l5189 1556                            l5197 1576                            l5293 3984  
                          l5373 3F44                            l5365 3EFA                            l5509 24A8  
                          l5453 21D4                            l5445 2174                            l5437 20E0  
                          l6501 092E                            l6421 059E                            l6413 0578  
                          l6405 054C                            l6341 01F8                            l6333 01A2  
                          l6325 0174                            l6317 013E                            l6309 00DA  
                          l5383 58D8                            l5623 55EE                            l5615 55D6  
                          l6087 1DF6                            l6079 1C40                            l6159 36D4  
                          l6183 373E                            l6191 37B2                            l5535 4F6A  
                          l4751 4D50                            l4743 4D2C                            l4735 4CF8  
                          l4727 4CC8                            l4719 4CAA                            l5711 47E0  
                          l5703 47B2                            l6095 3C46                            l5551 5294  
                          l4655 2D9A                            l4663 2DC0                            l4639 2CEE  
                          l4647 2D36                            l4591 2B00                            l4583 2ABA  
                          l4575 2A90                            l4567 2A4A                            l4559 2A1A  
                          l5543 572E                            l6263 547E                            l4487 2FF4  
                          l4495 3024                            l4479 2FBA                            l4671 554A  
                          l4823 429A                            l4815 4274                            l4807 4234  
                          l4911 3484                            l4903 33EC                            l5279 1820  
                          l5199 1588                            l5295 3996                            l5375 3F60  
                          l5471 22E6                            l5455 21EA                            l5463 2254  
                          l5447 21A6                            l5439 2110                            l6271 53C6  
                          l6511 09C4                            l6503 0946                            l6423 05BA  
                          l6415 0584                            l6407 0568                            l6351 02A0  
                          l6343 0204                            l6335 01BC                            l6327 017E  
                          l6319 0144               ?_LCD_Write_Nibble 0001                            l5385 591C  
                          l5625 55F4                            l5617 55DA                            l5609 55C6  
                          l5801 4E84                            l6089 1E54                            l5641 47F8  
                          l5633 47E4                            l6249 40FA                            l6177 372A  
                          l6169 3702                            l6185 379A                            l5393 5608  
                          l5529 4F30                            l4681 4B4A                            l4745 4D32  
                          l4737 4D00                            l4729 4CD6                            l6097 3C4A  
                          l5561 52B8                            l5553 5298                            l4665 2DC4  
                          l4657 2DAA                            l4649 2D50                            l4593 2B0C  
                          l4585 2AD0                            l4569 2A5A                            l5545 5734  
                          l5537 5720                            l6265 548A                            l6257 5458  
                          l4497 3032                            l4489 2FFA                            l4761 4DC6  
                          l4841 42FE                            l4833 42C2                            l4825 42A4  
                          l4817 4282                            l4809 425E                            l4921 35A0  
                          l4905 340C                            l5297 399E                            l5289 396A  
                          l5377 3F72                            l5369 3F06                            l5481 2382  
                          l5473 231A                            l5465 2282                            l5457 21F8  
                          l6273 53CE                            l6521 0A24                            l6513 09DA  
                          l6505 0962                            l6441 05F8                            l6433 05D8  
                          l6417 058A                            l6361 032A                            l6353 02A6  
                          l6345 0210                            l6337 01D0                            l6329 018A  
                          l6281 0012                            l5387 5932                            l5627 55F8  
                          l5619 55DE                            l5811 4110                            l5803 4E86  
                          l5651 4810                            l5643 47FC                            l5635 47E8  
                          l6187 37AC                            l5395 5612                            l4691 4B70  
                          l4683 4B4E                            l4675 4B30                            l4739 4D0E  
                          l4747 4D38                            l5731 446A                            l5723 4424  
                          l5715 4414                            l6099 3C5C                            l5571 52D6  
                          l5563 52BC                            l5555 529E                            l4659 2DB8  
                          l4595 2B1A                            l4587 2ADC                            l4579 2AA4  
                          l5547 573A                            l5539 5726                            l6259 546C  
                          l6267 548E                            l4931 56B0                            l4499 3036  
                          l4763 4DD6                            l4755 4D5A                            l4771 4310  
                          l4835 42CE                            l4827 42AE                            l4923 35B4  
                          l4915 34F4                            l4907 3462                            l4851 4A9C  
                          l5299 39B2                            l5379 3FB0                            l5491 2400  
                          l5483 23B8                            l5459 2228                            l6275 53D6  
                          l6531 0A8C                            l6523 0A42                            l6515 09F2  
                          l6507 096C                            l6451 06BE                            l6443 0604  
                          l6435 05E8                            l6427 05C0                            l6363 034A  
                          l6347 021C                            l6339 01E4                            l6291 0026  
                          l6283 001A                            l5389 5944                            l5629 55FC  
                          l5581 58A0                            l5821 4146                            l5813 4120  
                          l5805 4E90                            l5661 4864                            l5653 4816  
                          l5645 4800                            l5637 47EC                            l5397 561A  
                          l4693 4B82                            l4685 4B5C                            l4677 4B34  
                          l4749 4D48                            l5741 44AE                            l5733 4480  
                          l5725 443A                            l5717 4420                            l5573 52DA  
                          l5565 52C2                            l5557 52A4                            l4597 2B26  
                          l4589 2AF4                            l5549 5742                            l4941 544C  
                          l4765 4DFA                            l4757 4D88                            l4781 439A  
                          l4773 433E                            l4669 553A                            l4837 42DE  
                          l4925 35DC                            l4917 3530                            l4909 3476  
                          l4861 4B02                            l4853 4AA8                            l4845 4A6A  
                          l5493 2428                            l5485 23DC                            l5469 22A8  
                          l5901 530C                            l6277 53F2                            l6269 53B4  
                          l6541 0AEE                            l6533 0A96                            l6525 0A4C  
                          l6517 0A0E                            l6509 0978                            l6461 075A  
                          l6453 0702                            l6429 05C4                            l6445 061C  
                          l6381 04A2                            l6365 0394                            l6357 02CA  
                          l6373 041E                            l6349 026E                            l6293 0030  
                          l6285 001C                            l5591 5752                            l5583 58A4  
                          l5831 418E                            l5823 4156                            l5815 4124  
                          l5807 40FE                            l5671 487E                            l5663 486A  
                          l5655 481A                            l5647 4806                            l5639 47F2  
                          l6199 3FEA                            l4951 588E                            l5399 5620  
                          l5911 500A                            l4695 4B8A                            l4687 4B64  
                          l4679 4B42                            l5743 44D8                            l5727 4464  
                          l5575 52DE                            l5567 52CA                            l5559 52A8  
                          l4599 2B36                            l4943 5450                            l4935 5406  
                          l4767 4E00                            l4759 4D98                            l4783 43AC  
                          l4775 434E                            l4839 42EE                            l4871 4572  
                          l4927 35EC                            l4919 3564                            l4863 4B16  
                          l4855 4ABC                            l4847 4A7A                            l5487 23E8  
                          l5479 235E                            l5903 5332                            l6551 0B48  
                          l6543 0B0A                            l6535 0AA2                            l6527 0A58  
                          l6519 0A18                            l6471 07D8                            l6463 076C  
                          l6455 0718                            l6447 064E                            l6439 05EE  
                          l6383 04AE                            l6391 0502                            l6367 03B4  
                          l6359 02FA                            l6375 0460                            l6295 004A  
                          l6287 0022                            l5593 5756                            l5585 58AA  
                          l5841 41D2                            l5833 4198                            l5825 416C  
                          l5817 4132                            l5809 4102                            l5673 4882  
                          l5665 486E                            l5657 4820                            l5649 480C  
                          l5761 5064                            l5753 5018                            l6721 40CC  
                          l4953 5898                            l5921 5014                            l5913 500C  
                          l5905 4FA8                            l4697 4B92                            l4689 4B68  
                          l5745 44FE                            l5681 5854                            l5577 52EC  
                          l5569 52CE                            l4937 540A                            l4961 48F4  
                          l4785 43BA                            l4777 437C                            l4793 5678  
                          l4881 45C4                            l4873 459A                            l4857 4AD0  
                          l4849 4A8E                            l5489 23F0                            l5497 2448  
                          l6561 0BBC                            l6553 0B54                            l6545 0B14  
                          l6537 0ACA                            l6529 0A70                            l6481 082C  
                          l6473 07E2                            l6465 0788                            l6457 072E  
                          l6449 0680                            l6385 04D4                            l6377 0486  
                          l6713 0432                            l6369 03FE                            l6297 005E  
                          l6289 0024                            l5595 575C                            l5587 58B0  
                          l5835 41B6                            l5827 4174                            l5843 41D8  
                          l5819 4142                            l5675 4886                            l5667 4874  
                          l5659 4824                            l5755 501C                            l5923 5860  
                          l4947 5882                            l5771 54D2                            l5915 500E  
                          l5907 4FAC                            l4699 4BA0                            l5691 4742  
                          l5747 4500                            l5683 585C                            l5851 37B8  
                          l5931 581E                            l4939 541E                            l6715 3B8C  
                          l4971 493A                            l4963 4902                            l4955 48C8  
                          l4787 440A                            l4779 438C                            l4795 568E  
                          l4875 45A6                            l4867 4514                            l4859 4AD4  
                          l4891 5368                            l5499 246C                            l6571 0C00  
                          l6563 0BC6                            l6555 0B6C                            l6547 0B20  
                          l6539 0AD6                            l6491 08BC                            l6483 0838  
                          l6475 07EE                            l6467 0792                            l6459 0744  
                          l6387 04DE                            l6379 0498                            l6395 050A  
                          l6299 0078                            l5597 5762                            l5589 58B6  
                          l5941 3DA4                            l5845 41E8                            l5837 41C6  
                          l5829 4180                            l5781 518A                            l5669 4878  
                          l5757 5024                            l5925 586A                            l4949 5886  
                          l5773 54E4                            l5765 54AC                            l6717 513C  
                          l5917 5010                            l5909 5008                            l5693 476C  
                          l5685 4700                            l5749 4510                            l5677 5840  
                          l5853 37C8                            l5933 5824                            l4973 494E  
                          l4965 4914                            l4957 48DC                            l4789 4410  
                          l4797 569E                            l4885 4608                            l4869 4534  
                          l4893 54F4                            l6573 0C0A                            l6565 0BD2  
                          l6557 0B88                            l6549 0B3E                            l6493 08C6  
                          l6485 0872                            l6477 0806                            l6469 079E  
                          l6397 0522                            l6389 04EA                            l5599 5766  
                          l5951 3DCA                            l5847 41F8                            l5839 41C8  
                          l5791 4E32                            l5783 5194                            l5775 515C  
                          l5759 504C                            l6719 3754                            l5927 5872  
                          l5767 54B0                            l5919 5012                            l5687 4708  
                          l5679 5844                            l5871 388E                            l5863 3846  
                          l5855 37D6                            l5935 5830                            l4975 4952  
                          l4959 48E8                            l4879 45B2                            l4991 0C7A  
                          l4983 0C4A                            l6575 0C16                            l6567 0BEA  
                          l6559 0B92                            l6495 08D2                            l6487 087C  
                          l6479 0822                            l6399 0534                            l5953 3DE0  
                          l5945 3DAA                            l5793 4E3E                            l5785 4E04  
                          l5777 516C                            l5929 5874                            l5769 54C2  
                          l5689 4718                            l5881 390E                            l5873 389A  
                          l5865 384E                            l5857 381C                            l5937 5830  
                          l4977 4980                            l4969 4926                            l4889 5358  
                          l4897 54F4                            l4993 0C9E                            l4985 0C54  
                          l6569 0BF4                            l6497 0918                            l6489 08A0  
                          l6577 0C1C                            l5955 3E88                            l5947 3DB4  
                          l5939 3D8E                            l5795 4E4C                            l5787 4E14  
                          l5779 517A                            l5971 4614                            l5699 4772  
                          l5891 3956                            l5883 3910                            l5875 38D6  
                          l5867 385A                            l5859 3832                            l4979 4992  
                          l4899 5522                            l4995 0CA8                            l4987 0C64  
                          l5963 57AC                            l6579 0C28                            l6499 0922  
                          l5957 3EA0                            l5797 4E56                            l5789 4E2A  
                          l5981 4662                            l5973 4618                            l5893 3958  
                          l5885 3914                            l5877 38E2                            l5869 388C  
                          l4997 0CB0                            l4989 0C72                            l5965 57B6  
                          l5959 3ECC                            l5799 4E74                            l5991 46B0  
                          l5983 4668                            l5975 461E                            l5887 3938  
                          l5879 38F0                            l4999 0CC2                            l5993 46CC  
                          l5985 467E                            l5977 463C                            l5889 3948  
                          l5969 595A                            l5897 52F6                            l5995 46E2  
                          l5987 468E                            l5979 464C                            l5899 52FE  
                          l5989 46AA                            l5997 50F4                            l5999 50F8  
                          STR_1 7F77                            STR_2 7F00                            STR_3 7F33  
                          STR_4 7E2E                            STR_5 7E04                    _I2C_INA_read 5292  
                          STR_6 7F11                            STR_7 7F44                            STR_8 7F22  
                          STR_9 7F55                            _CREN 007D5C                            u4000 309C  
                          u4001 3098                            u4010 30B6                            u4011 30B2  
                          u3300 5900                            u4100 2A4A                            u4020 30FE  
                          u3301 58FC                            u4101 2A46                            u4021 30FA  
                          u4110 2A80                            u3310 49B2                            u4030 312E  
                          u4111 2A7C                            u3311 49AE                            u4031 312A  
                          u4200 2D08                            u4120 2A90                            u3320 49C4  
                          u4040 315C                            u3400 2580                            u5000 1036  
                          u4201 2D04                            u4121 2A8C                            u3321 49C0  
                          u4041 3158                            u3401 257C                            u5001 1032  
                          u4210 2D50                            u4130 2C0A                            u4050 29C6  
                          u3330 49EC                            u3410 2592                            u5010 1052  
                          u4211 2D4C                            u4051 29C2                            u3331 49E8  
                          u3411 258E                            u5011 104E                            u4300 4CBC  
                          u4220 2D7E                            u4140 2C64                            u4060 29D8  
                          u3340 4A22                            u3500 26DA                            u3420 25A2  
                          u5100 12CA                            u5020 1088                            u4301 4CB8  
                          u4221 2D7A                            u4141 2C60                            u4061 29D4  
                          u3341 4A1E                            u3501 26D6                            u3421 259E  
                          u5101 12C6                            u5021 1084                            u3350 5918  
                          u4310 4CD6                            u4230 2DB8                            u4150 2C84  
                          u4070 29E8                            u3510 26E8                            u3430 25DE  
                          u5110 1312                            u5030 10AE                            u3351 5914  
                          u4311 4CD2                            u4231 2DB4                            u4151 2C80  
                          u4135 2C00                            u4071 29E4                            u3511 26E4  
                          u3431 25DA                            u5111 130E                            u5031 10AA  
                          u6000 4132                            u4240 4B42                            u4320 4CF0  
                          u4160 2C96                            u4080 2A28                            u4400 437C  
                          u3600 2846                            u3520 26F8                            u3440 25EC  
                          u3360 2506                            u5200 1522                            u5120 1322  
                          u5040 10C0                            u6001 412E                            u4241 4B3E  
                          u4321 4CEC                            u4161 2C92                            u4081 2A24  
                          u4401 4378                            u3601 2842                            u3521 26F4  
                          u3441 25E8                            u3361 2502                            u5201 151E  
                          u5121 131E                            u5041 10BC                            u6010 416C  
                          u4250 4B5C                            u4330 4D0E                            u4170 2CC4  
                          u4090 2A3A                            u4410 439A                            u3610 2856  
                          u3530 272A                            u3450 265A                            u3370 2518  
                          u5210 1530                            u5130 13BC                            u5050 10CE  
                          u6011 4168                            u4251 4B58                            u4331 4D0A  
                          u4171 2CC0                            u4091 2A36                            u4411 4396  
                          u3611 2852                            u3531 2726                            u3451 2656  
                          u3371 2514                            u5211 152C                            u5131 13B8  
                          u5051 10CA                            u6020 418E                            u4260 4B82  
                          u4340 4D24                            u4180 2CDA                            u6100 38F0  
                          u4420 43BA                            u3700 293A                            u3620 2872  
                          u3540 2738                            u3460 2672                            u3380 2528  
                          u4500 42DE                            u5300 1798                            u5220 1588  
                          u5140 140A                            u5060 10E4                            u6021 418A  
                          u4261 4B7E                            u4341 4D20                            u4181 2CD6  
                          u6101 38EC                            u4421 43B6                            u3701 2936  
                          u3621 286E                            u3541 2734                            u3461 266C  
                          u3381 2524                            u4501 42DA                            u5301 1794  
                          u5221 1584                            u5141 1406                            u5061 10E0  
                          u6030 41B6                            u4270 4BA0                            u4350 4D48  
                          u4190 2CEE                            u6110 3900                            u4430 440A  
                          u3710 294A                            u3630 2882                            u3550 2756  
                          u3470 2674                            u3390 256A                            u4510 42EE  
                          u5310 17B0                            u5230 165A                            u5150 1432  
                          u5070 10F2                            u6031 41B2                            u4271 4B9C  
                          u4351 4D44                            u4191 2CEA                            u6111 38FC  
                          u4431 4406                            u3711 2946                            u3631 287E  
                          u3551 2752                            u3391 2566                            u4511 42EA  
                          u5311 17AC                            u5231 1656                            u5151 142E  
                          u5071 10EE                            u3800 5798                            u6040 41E8  
                          u6200 4C98                            u4280 4BBC                            u6120 390E  
                          u4360 4D88                            u4440 568E                            u3720 296A  
                          u3640 2894                            u3560 278E                            u3480 269C  
                          u4520 4A7A                            u5320 180C                            u5240 1676  
                          u5160 14D6                            u5080 111C                            u5400 3AAC  
                          u3801 5794                            u6041 41E4                            u4281 4BB8  
                          u6121 390A                            u4361 4D84                            u4441 568A  
                          u3721 2966                            u3641 2890                            u3561 278A  
                          u3481 2698                            u4521 4A76                            u5321 1808  
                          u5241 1672                            u5161 14D2                            u5081 1118  
                          u5401 3AA8                            _ISR1 0008                            u3810 57A6  
                          u6210 4CA8                            u4290 4BE2                            u6130 3948  
                          u6050 37C8                            u4370 4DC6                            u3730 297C  
                          u3650 28AA                            u3570 27D4                            u3490 26BA  
                          u4450 4220                            u4610 45FE                            u4530 4A9C  
                          u5250 1688                            u5170 14E8                            u5090 1264  
                          u5410 3AE6                            u3811 57A2                            u6211 4CA4  
                          u4291 4BDE                            u6131 3944                            u6051 37C4  
                          u4371 4DC2                            u3731 2978                            u3651 28A6  
                          u3571 27D0                            u3491 26B6                            u4451 421C  
                          u4611 45F8                            u4531 4A98                            u5251 1684  
                          u5171 14E4                            u5091 1260                            u5411 3AE2  
                          u5331 3974                            u6220 1C3C                            u6300 3C90  
                          u6140 3956                            u6060 37D6                            u5420 3B24  
                          u3900 2F6E                            u3820 2DF0                            u4380 4DFA  
                          u3740 2998                            u3660 28C0                            u3580 280A  
                          u4460 4254                            u4620 4600                            u4700 34F0  
                          u4540 4AF2                            u5260 1696                            u5180 14FA  
                          u5340 3996                            u5500 3F72                            u6221 1C38  
                          u6301 3C8C                            u6141 3952                            u6061 37D2  
                          u5421 3B20                            u3901 2F6A                            u3821 2DEC  
                          u4381 4DF6                            u3741 2994                            u3661 28BC  
                          u3581 2806                            u4605 45D6                            u4701 34EC  
                          u4541 4AEE                            u5261 1692                            u5181 14F6  
                          u5341 3992                            u5501 3F6E                            u6230 1CEE  
                          u6310 3CAA                            u6070 3832                            u5430 3B5A  
                          u3910 2F90                            u3830 2E02                            u4390 433E  
                          u3670 28D4                            u3590 281A                            u4470 4282  
                          u4710 3514                            u3750 55C2                            u4550 4B02  
                          u4630 53A0                            u5270 16CC                            u5190 1508  
                          u5350 39C8                            u5510 3FB0                            u6150 534E  
                          u6231 1CEA                            u6207 4C8E                            u6311 3CA6  
                          u6071 382E                            u5431 3B56                            u3911 2F8C  
                          u3831 2DFE                            u4391 433A                            u3671 28D0  
                          u3591 2816                            u4471 427E                            u3751 55BE  
                          u4551 4AFE                            u5271 16C8                            u5191 1504  
                          u5351 39C4                            u5511 3FAC                            u6151 534A  
                          u6160 3DA4                            u6240 1D80                            u6400 36BC  
                          u6320 3CC4                            u6080 3888                            u5440 3C0E  
                          u4800 48DC                            u3920 2FBA                            u3840 2E12  
                          u3680 28EE                            u4480 4296                            u4560 4554  
                          u4720 3530                            u3760 5710                            u4640 53B2  
                          u5280 16FA                            u5360 39E6                            u5520 3FD0  
                          u5600 20E0                            u6161 3DA0                            u6401 36B8  
                          u6321 3CC0                            u6081 3884                            u5441 3C0A  
                          u4801 48D8                            u3921 2FB6                            u3841 2E0E  
                          u3681 28EA                            u4481 4292                            u4465 424A  
                          u4721 352C                            u3761 570C                            u4641 53AE  
                          u5281 16F6                            u5361 39E2                            u5601 20DC  
                          u5530 58EC                            u6170 3DE0                            u6250 1DB6  
                          u6410 37AC                            u6330 3CDE                            u6090 38D2  
                          u5450 3C20                            u4810 4902                            u3930 2FDE  
                          u3850 2E56                            u3690 2928                            u4490 42BE  
                          u4570 4572                            u4730 3584                            u3770 5670  
                          u4650 5522                            u5290 177E                            u5370 3A12  
                          u5610 2120                            u5531 58E8                            u6171 3DDC  
                          u6411 37A8                            u6331 3CDA                            u6091 38CE  
                          u5451 3C1C                            u4811 48FE                            u3931 2FDA  
                          u3851 2E52                            u3691 2924                            u4491 42BA  
                          u4571 456E                            u4715 350A                            u3771 566A  
                          u4651 551E                            u5291 177A                            u5371 3A0E  
                          u5515 3FA0                            u5611 211C                            u5540 5930  
                          u6260 1DE0                            u5700 5808                            u6420 4002  
                          u6180 4C2C                            u6340 3D20                            u4820 4922  
                          u3940 2FF4                            u3860 2E68                            u4580 459A  
                          u4740 35A0                            u4660 3434                            u3780 5672  
                          u4900 0D56                            u5380 3A4C                            u5460 3EFA  
                          u5620 2174                            u6500 02A0                            u5541 592C  
                          u6245 1D76                            u5701 5804                            u6421 3FFE  
                          u6341 3D1C                            u4821 491E                            u3941 2FF0  
                          u3861 2E64                            u4581 4596                            u4565 454A  
                          u4741 359C                            u4637 5396                            u4901 0D52  
                          u5381 3A48                            u5517 3F96                            u5461 3EF6  
                          u5621 2170                            u6501 029C                            u5550 5944  
                          u3790 5958                            u6270 1E74                            u5710 5816  
                          u6430 4018                            u6350 3616                            u6190 4C5E  
                          u4830 4970                            u3950 3012                            u3870 2E78  
                          u4590 45C4                            u4750 35DC                            u4670 3462  
                          u4910 0DE6                            u5390 3A9C                            u5470 3F34  
                          u5630 21D4                            u6510 02B6                            u5551 5940  
                          u3791 5954                            u6255 1DAC                            u5711 5812  
                          u6431 4014                            u6351 3612                            u4831 496C  
                          u3951 300E                            u3871 2E74                            u4591 45C0  
                          u4751 35D8                            u4735 357A                            u4671 345E  
                          u4911 0DE2                            u5391 3A98                            u5527 3FC6  
                          u5631 21D0                            u6511 02B2                            u6440 4064  
                          u6360 362C                            u5720 4F64                            u5800 4788  
                          u6280 3C5C                            u4760 56E0                            u4840 4980  
                          u3960 3032                            u3880 2EB8                            u4680 3484  
                          u4920 0E12                            u5480 3F44                            u5640 2282  
                          u5560 1F88                            u6520 0498                            u6265 1DD6  
                          u6441 4060                            u6361 3628                            u5801 4784  
                          u6281 3C58                            u4761 56DA                            u4841 497C  
                          u3961 302E                            u3881 2EB4                            u4681 3480  
                          u4665 342A                            u4921 0E0E                            u5481 3F40  
                          u5641 227E                            u5561 1F84                            u6521 0494  
                          u6450 4080                            u6370 3678                            u5730 4F96  
                          u5810 47B2                            u6290 3C76                            u4770 56E2  
                          u3970 3044                            u3890 2EF8                            u4930 0E9A  
                          u4850 0C72                            u5490 3F60                            u5650 22E6  
                          u5570 1FD0                            u6530 0534                            u6275 1E6A  
                          u6451 407C                            u6371 3674                            u6187 4C22  
                          u5811 47AE                            u6291 3C72                            u3971 3040  
                          u3891 2EF4                            u4931 0E96                            u4851 0C6E  
                          u5491 3F5C                            u5651 22E2                            u5571 1FCC  
                          u6531 0530                            u5900 504C                            u6460 40F4  
                          u6380 3694                            u5740 4FA6                            u5820 47DC  
                          u4780 541E                            u3980 3072                            u4940 0F2E  
                          u4860 0CC2                            u5660 2382                            u5580 200A  
                          u6540 0548                            u5901 5048                            u6461 40F0  
                          u6381 3690                            u6197 4C54                            u5741 4FA2  
                          u5821 47D8                            u4781 541A                            u3981 306E  
                          u4941 0F2A                            u4861 0CBE                            u5477 3F2A  
                          u5661 237E                            u5581 2006                            u6541 0544  
                          u5750 4844                            u5910 5064                            u6390 36AA  
                          u5830 443A                            u6470 54A8                            u4790 544C  
                          u3990 3088                            u4950 0FA0                            u4870 0CD0  
                          u5670 23B8                            u5590 20B0                            u6550 059A  
                          u5911 5060                            u6391 36A6                            u5727 4F5A  
                          u5831 4436                            u6471 54A4                            u4791 5448  
                          u3991 3084                            u4695 3498                            u4951 0F9C  
                          u4871 0CCC                            u5671 23B4                            u5591 20AC  
                          u6551 0596                            u6607 0088                            u5760 48A6  
                          u5920 54D2                            u5840 4464                            u4696 34A2  
                          u4960 0FC6                            u4880 0CE2                            u5680 23DC  
                          u6560 05D4                            u6480 00DA                            u5921 54CE  
                          u5737 4F8C                            u5841 4460                            u4697 34B2  
                          u4961 0FC2                            u4881 0CDE                            u5681 23D8  
                          u6561 05D0                            u6481 00D6                            u6617 00A6  
                          u5930 54E4                            u5770 4718                            u5850 4480  
                          u4970 0FD8                            u4890 0D2A                            u5690 246C  
                          u6570 076C                            u6490 026E                            _OERR 007D59  
                          u5755 483A                            u5931 54E0                            u5771 4714  
                          u5851 447C                            u4971 0FD4                            u4891 0D26  
                          u5691 2468                            u6707 0894                            u6571 0768  
                          u6491 026A                            u6627 00F8                            u5940 517A  
                          u5780 4742                            u5860 44AA                            u4980 0FFA  
                          u5941 5176                            u5765 489C                            u5781 473E  
                          u5861 44A6                            u4981 0FF6                            u6717 093A  
                          u6637 0112                            u5950 51B4                            u5790 476C  
                          u5870 44D8                            u4990 1020                            u5951 51B0  
                          u5791 4768                            u5871 44D4                            u6807 5858  
                          u4991 101C                            u6727 09E6                            u6647 0130  
                          u5960 4E2A                            u5961 4E26                            u6817 4628  
                          u6737 0A64                            u6657 0150                            u5970 4E4C  
                          u5890 4510                            u5971 4E48                            u6907 54EA  
                          u6827 4642                            u5891 450C                            u6747 0AE2  
                          u6667 01AE                            u6587 003C                            u5980 4E74  
                          u5884 44EC                            u5981 4E70                            u6917 5638  
                          u6837 4658                            u5885 44E8                            u6757 0B60  
                          u6677 04F6                            u6597 006A                            u5990 4110  
                          u6927 3DBE                            u5991 410C                            u6847 466E  
                          u6767 0BDE                            u6687 0610                            u6857 4684  
                          u6777 0C34                            u6697 07FA                            u6867 469E  
                          u6787 52AE                            u6877 46BA                            u6797 584A  
                          u6887 46D6                            u6897 46F2              ??_LCD_Write_Nibble 0003  
                          _date 019E                            _dbuf 0200                            _atoi 3AF0  
                          _ctoa 48C8                            _main 0012                            _var1 00C7  
                          _var2 00C3                            _prec 00DF                            _temp 00F4  
                          _time 0171                            _pres 00F0                            _nout 00DB  
                          pad@i 0019                            pad@p 0016                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001B                            fsr2l 000FD9  
                          _stoa 396A                            btemp 005F                   ___fpclassifyf 4514  
                          prodh 000FF4                            prodl 000FF3                            start 000E  
              __end_of_I2C_stop 591C                 ___fldiv@new_exp 0020            I2C_INA_read@registro 0006  
                   _tx_variable 00D7                     LCD_Goto@col 0009                     LCD_Goto@row 0006  
                  ___param_bank 000000          BMP280_begin@T_sampling 0007                           ??_pad 0018  
                         ?_ISR1 0001                __end_of_LCD_Goto 515C                   ___fltol@sign1 0009  
               __end_of___aldiv 420A                           ?_atoi 0008                           ?_ctoa 000B  
               __end_of___fladd 29AC                           ?_main 0001                 __end_of___fldiv 3170  
               __end_of___awdiv 4BF4                 __end_of___flneg 56B0                           STR_10 7F66  
                         STR_11 7FCA                           STR_12 7F98                           STR_20 7E66  
                         STR_13 7E75                           STR_21 7DEE                           STR_22 7ECD  
                         STR_30 7EBC                           STR_14 7D71                           STR_31 7FD5  
                         STR_23 7DD7                           STR_15 7D55                           STR_40 7E14  
                         STR_32 7E9A                           STR_24 7E89                           STR_16 7D15  
                         STR_33 7FB2                           STR_41 7FA6                           STR_25 7DC0  
                         STR_17 7CF1                           STR_34 7FDF                           STR_26 7EAB  
                         STR_42 7E54                           STR_18 7E19                           STR_35 7FBE  
                         STR_19 7E41                           STR_27 7DA7                           STR_43 7D37  
                         STR_52 7FFB                           STR_44 7FE7                           STR_36 7EEF  
                         STR_28 7EDE                 __end_of___awmod 4D5A                           STR_45 7FEF  
                         STR_37 7F88                           STR_29 7D8D                           STR_54 7FFB  
                         STR_38 7E78                           STR_39 7E78                           STR_48 7FEB  
                         STR_57 7FF7                           STR_49 7FF3                           STR_59 7FF7  
               __end_of___flmul 2DD6                 __end_of___flsub 5580                 __end_of___fltol 4310  
                         ?_stoa 000B                 __end_of___lldiv 4EA8                 ___awdiv@divisor 0003  
                         i2l248 5974                 ___awdiv@counter 0005                           _RCREG 000FAE  
               BMP280_Read8@ret 0003                    vfpfcnvrt@fmt 004A                   _I2C_INA_write 571E  
                         _TMR1H 000FCF                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _PORTA 000F80            _dht11_check_humidity 3C46     _BMP280_readTemperature$2564 0029  
   _BMP280_readTemperature$2565 0025                           _TXREG 000FAD                    ?_GPSRead_gga 0006  
                  ?_GPSRead_rmc 0006             ___lmul@multiplicand 0013                     ?_UART_Print 0002  
                         _adc_P 0108                           _adc_T 00CF                           _flags 00E1  
                         _getch 57FA                           _boton 00EE                 __end_of_gps_gga 7CEB  
               __end_of_gps_rmc 7CF1                           _fputc 49A0                           _fputs 5580  
               __end_of_isdigit 56E8                           _satel 01A5                           _speed 018F  
                         atoi@n 0010                           pad@fp 0012                           _ptr_h 01B0  
                         atoi@s 0008                           _width 00DD                           ctoa@c 000D  
                         _split 00E9                           _putch 58F0                           ctoa@l 000F  
                         ctoa@w 0011                 __end_of_isspace 5458                 __end_of_isupper 5678  
                         tablat 000FF5                 I2C_Tx_data@data 0001                           plusw1 000FE3  
                         plusw2 000FDB                           stoa@i 0017                           stoa@l 001F  
                         stoa@p 001D                           stoa@s 000D                           stoa@w 0019  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8               __end_of_I2C_start 595A                           wtemp8 0060  
               __end_of_sprintf 5406                  ?___fpclassifyf 0001                 __end_of_tolower 553A  
               __end_of_strncmp 3FEA            _check_response_dht11 4700                    _BMP280_Read8 5750  
              ??_int_ext_enable 0001               _calibration_value 00E3                     ?_USART_Init 000F  
             ??_I2C_master_init 0001                    __end_of_ISR1 5978                    _BMP280_Write 589E  
                  _BMP280_calib 011A                    _BMP280_begin 3D8C                 __initialization 5088  
                  __end_of_atoi 3C46                    __end_of_ctoa 49A0                    __end_of_main 0C4A  
                  __end_of_stoa 3AF0                          ??_ISR1 0001                          ??_atoi 000A  
                        ??_ctoa 000E                          ??_main 00BD               __end_of_LCD_Begin 4700  
                        ??_stoa 000F                  ?_I2C_INA_write 0002                   __activetblptr 000002  
         ?_dht11_check_humidity 0009                       ??_LCD_Cmd 0004               __end_of_LCD_Print 4CAA  
        _BMP280_readTemperature 3170                BMP280_Read16@ret 0005                          ?_getch 0001  
                        ?_fputc 0002                          ?_fputs 000B                ___awdiv@dividend 0001  
                        ?_putch 0001                    ??_I2C_Rx_ack 0001                          i2l6587 596C  
                        i2l6589 5972                          _SSPADD 000FC8                          _SSPBUF 000FC9  
              __end_of___xxtofl 396A           ?_check_response_dht11 0001          BMP280_begin@_ctrl_meas 000E  
                  vfprintf@cfmt 0098                          ___flge 4310                          ___fleq 4D5A  
                        ___lmul 515C                       ??___aldiv 0009                       ??___fladd 0009  
                        ___wmul 57D4                       ??___fldiv 0017                       ??___awdiv 0005  
                     ??___flneg 0005                       ??___awmod 0005                       ??___flmul 0017  
                     ??___flsub 0030                       ??___fltol 0005                       ??___lldiv 0009  
                        _efgtoa 0C4A                          _floorf 33EC                          _course 0187  
                        _memcpy 5458                          _t_fine 00CB                          clear_0 50C0  
                        clear_1 50CC                          clear_2 50DC                ___awdiv@quotient 0007  
               ___awmod@divisor 0003                          _value1 00E5                          _value2 00D3  
                        isa$std 000001                 ___awmod@counter 0005                          _printf 57AC  
                        pad@buf 0014                          ctoa@fp 000B      __end_of_start_signal_dht11 5860  
                        _stream 00FD                          _strcmp 5018                          _strcpy 5358  
                        _strlen 56E8              __end_of_I2C_Rx_ack 58F0                          fputc@c 0002  
                        fputs@c 000F                          fputs@i 0010                          fputs@s 000B  
                     ??_isdigit 0003                 ___fpclassifyf@e 0009                 ___fpclassifyf@u 000B  
               ___fpclassifyf@x 0001                    __mediumconst 7CE4                       ??_isspace 0003  
                        tblptrh 000FF7                       ??_isupper 0003                          tblptrl 000FF6  
                        tblptru 000FF8                       ?_I2C_stop 0001                          stoa@cp 001B  
                        stoa@fp 000B                __end_of_vfprintf 5358                       ??_sprintf 005E  
                     ??_tolower 0009                       ??_strncmp 0007                LCD_Begin@address 0008  
                    ___flge@ff1 0028                      ___flge@ff2 002C                 ??___fpclassifyf 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    ___fleq@ff1 0001                      ___fleq@ff2 0005                      __accesstop 0060  
                 _BMP280_Read16 55C4         __end_of__initialization 50E4                       ?_LCD_Goto 0006  
                    ___flneg@f1 0001                   ___rparam_used 000001                   _BMP280_Update 47E4  
                    ___fltol@f1 0001                    _change_array 00EC           _ina219GetBusVoltage_V 4EA8  
                 _backlight_val 00FF                  __pcstackCOMRAM 0001                    __pidataBANK0 5978  
                  __pidataBANK1 58BC             _BMP280_readPressure 1858                   __end_of_getch 581E  
                 __end_of_fputc 4A6A                   __end_of_fputs 55C4                  LCD_Cmd@Command 0005  
                 __end_of_putch 5906                 ??_I2C_INA_write 0004                 _read_data_dht11 4414  
        ??_dht11_check_humidity 000B                      _ina219Init 581E                read_data_dht11@i 0007  
              BMP280_Update@ret 0006                      ??_I2C_stop 0001                         ??_getch 0001  
              GPSRead_gga@satel 0008            ?_BMP280_readPressure 001B                         ??_fputc 0006  
                       ??_fputs 000F                         ??_putch 0001                      __pbssBANK0 00BF  
                    __pbssBANK1 0100                      __pbssBANK2 0200                  ?_BMP280_Read16 0002  
        ??_check_response_dht11 0001                      ??_LCD_Goto 0007                  ?_BMP280_Update 0001  
       BMP280_readPressure@pres 001B                         ?___flge 0028                         ?___fleq 0001  
                       ?___lmul 000F                         ?___wmul 0001                         ?_efgtoa 003C  
                       ?_floorf 0028                         ?_memcpy 0001           I2C_INA_write@registro 0004  
                ___lmul@product 0017                         ?_printf 009A                         ?_strcmp 0001  
                       ?_strcpy 0001                         ?_strlen 0001                         _LCD_Cmd 54AA  
                 ??_I2C_Rx_data 0001                   ??_I2C_Rx_nack 0001                   ??_I2C_Tx_data 0001  
                     ?___xxtofl 0001                    ??_UART_Print 0004                BMP280_begin@mode 000D  
              GPSRead_rmc@speed 0010           ??_BMP280_readPressure 001D                         _SSPCON2 000FC5  
               _I2C_master_init 5860                         _T_Byte1 00FC                         _T_Byte2 00FB  
        ?_ina219GetBusVoltage_V 0028                    ??_USART_Init 0013                         __Hparam 0000  
          BMP280_Write@reg_addr 0003                         __Lparam 0000         __end_of_read_data_dht11 4514  
                     _I2C_start 5948             Expander_Write@value 0002                         ___aldiv 40FE  
                       ___fladd 24EC                         ___fldiv 2DD6              __end_of_UART_Print 4FA8  
                       ___awdiv 4B30                         ___flneg 5678                         ___awmod 4CAA  
                       ___flmul 29AC                         ___flsub 553A                         ___fltol 420A  
                       ___lldiv 4E04                       ?_vfprintf 0092                  USART_Init@BAUD 000F  
                       __pcinit 5088                         __ramtop 0800         ?_BMP280_readTemperature 001B  
                   ?_ina219Init 0001                         __ptext0 0012                         __ptext1 53B4  
                       __ptext2 57AC                         __ptext3 52F6                         __ptext4 1F64  
                       __ptext5 3ED0                         __ptext6 396A                         __ptext7 0C4A  
                       __ptext8 54F4                         __ptext9 5640               _ina219GetPower_mW 51C6  
                     _T1CONbits 000FCD                  _Expander_Write 5880                         _gps_gga 7CE5  
                       _gps_rmc 7CEB                         _isdigit 56B0                      ??___xxtofl 0005  
            ?_ina219GetPower_mW 0028                ___awmod@dividend 0001                     UART_Print@i 0006  
              ___aldiv@dividend 0001                  UART_Print@data 0002                         _isspace 5406  
                       _isupper 5640                         efgtoa@c 0042                         efgtoa@d 0072  
                       efgtoa@e 008A                         efgtoa@f 003E                         efgtoa@g 0086  
                       efgtoa@h 007C                         efgtoa@i 0084                         efgtoa@l 0080  
                       efgtoa@m 006C                         efgtoa@n 008C                         efgtoa@p 0076  
                       efgtoa@t 0066                         efgtoa@u 008E                         efgtoa@w 0078  
                     _LCD_Begin 4612             GPSRead_gga@nmea_log 000A                         atoi@neg 000E  
            __end_of_USART_Init 5018                 ??_BMP280_Read16 0004                       _LCD_Print 4BF4  
                       _sprintf 53B4                         _tolower 54F4                         _voltaje 0114  
                       _strncmp 3ED0                  __pintcode_body 596A            end_of_initialization 50E4  
           ??_ina219GetPower_mW 002C             __end_of_I2C_Rx_data 5948             __end_of_I2C_Rx_nack 5932  
                       floorf@e 0036                         floorf@m 0032                         floorf@u 0038  
                       floorf@x 0028             __end_of_I2C_Tx_data 57AC                 ??_BMP280_Update 0002  
         BMP280_Read16@reg_addr 0004                         memcpy@d 0007                         memcpy@n 0005  
                       memcpy@s 0009                         fputc@fp 0004                   __Lmediumconst 7CE4  
                       int_func 596A                         fputs@fp 000D              BMP280_begin@filter 0009  
               ___lldiv@divisor 0005                 ___lldiv@counter 000D                      ?_I2C_start 0001  
             __end_of_vfpfcnvrt 24EC                      efgtoa@mode 007B                      efgtoa@sign 0074  
                     _RCSTAbits 000FAB                ___aldiv@quotient 000B                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 005E  __end_of_BMP280_readTemperature 33EC  
             LCD_Write_Nibble@n 0003       __end_of_ina219GetPower_mW 522C                         strcmp@l 0001  
                       strcmp@r 0003                         strcpy@d 0009                         strlen@a 0003  
                       strcpy@s 0007                         strlen@s 0001          __end_of_Expander_Write 589E  
                     _PORTAbits 000F80         __end_of_I2C_master_init 5880                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                      ?_LCD_Begin 0001                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                      ?_LCD_Print 0004              _start_signal_dht11 5840  
                   ___flmul@grs 001C                       _TXSTAbits 000FAC             ?_start_signal_dht11 0001  
              ?_read_data_dht11 0001                _LCD_Write_Nibble 5606                      LCD_Print@i 0009  
                __end_of___flge 4414                  __end_of___fleq 4E04              I2C_INA_write@valor 0002  
                __end_of___lmul 51C6                     vfpfcnvrt@ap 004C                     vfpfcnvrt@cp 0052  
                   vfpfcnvrt@ct 005A                     vfpfcnvrt@fp 0048                  __end_of___wmul 57FA  
                __end_of_efgtoa 1858                 ?_Expander_Write 0001                  __end_of_floorf 35FE  
                __end_of_memcpy 54AA                   __pbitbssBANK0 07F0                      floorf@F526 0100  
                __end_of_printf 57D4                  __end_of_strcmp 5088            ??_start_signal_dht11 0001  
                __end_of_strcpy 53B4                  __end_of_strlen 571E                     _I2C_Rx_data 5932  
                   _I2C_Rx_nack 591C             start_initialization 5088                     _I2C_Tx_data 5782  
                   __end_of_pad 4B30                   ?_I2C_INA_read 0002           __end_of___fpclassifyf 4612  
           _ina219GetCurrent_mA 522C                     ??_I2C_start 0001                     vfprintf@fmt 0094  
                      ??___flge 0030                        ??___fleq 0009                        ??___lmul 0017  
                      ??___wmul 0005                        ??_efgtoa 0043                     __pdataBANK0 00FF  
                   __pdataBANK1 01A9                        ??_floorf 002C                        ??_memcpy 0007  
             GPSRead_gga@stream 000C                        ??_printf 005E                        ??_strcmp 0005  
                      ??_strcpy 0005                        ??_strlen 0003           __end_of_I2C_INA_write 5750  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LCD_Cmd 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                ?_I2C_master_init 0001  
                 ??_GPSRead_gga 000E            ?_ina219GetCurrent_mA 0028                   ??_GPSRead_rmc 0016  
                     ___flmul@a 0013                       ___flmul@b 000F                     __pbssCOMRAM 005E  
                     ___flsub@a 002C                       ___flsub@b 0028                   __pcstackBANK0 0060  
                   ??_LCD_Begin 0006                  ??_I2C_INA_read 0004                     ??_LCD_Print 0006  
       ??_ina219GetBusVoltage_V 002C                   ?_BMP280_Read8 0001                   ?_BMP280_Write 0002  
                   _efgtoa$2122 0062                     _efgtoa$2114 0060                     _efgtoa$2123 0064  
                 ?_BMP280_begin 0007               BMP280_Write@_data 0002                       __pintcode 0008  
                 __pmediumconst 7CE4                        ?___aldiv 0001                        ?___fladd 0001  
                      ?___fldiv 000F                        ?___awdiv 0001                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 000F                        ?___flsub 0028  
                      ?___fltol 0001                        ?___lldiv 0001                LCD_Print@LCD_Str 0004  
               GPSRead_rmc@date 0008                 GPSRead_rmc@time 0006                    ??_ina219Init 0005  
   __end_of_BMP280_readPressure 1F64           ??_ina219GetCurrent_mA 002C                        ?_isdigit 0001  
                     _corriente 0110                     _description 0132                        ?_isspace 0001  
                      ?_isupper 0001                        _I2C_stop 5906                        ?_sprintf 009A  
                      ?_tolower 0007                        ?_strncmp 0001             __end_of_GPSRead_gga 40FE  
           __end_of_GPSRead_rmc 37B6                 ___aldiv@divisor 0005                 ___aldiv@counter 0009  
                      _LCD_Goto 50F2                  ___wmul@product 0005                  ??_BMP280_Read8 0002  
                ??_BMP280_Write 0003                  ??_BMP280_begin 000B              __end_of_ina219Init 5840  
             GPSRead_rmc@course 0012                        _PIR1bits 000F9E                        _RCONbits 000FD0  
             GPSRead_rmc@stream 0014        _BMP280_readPressure$2566 0031        _BMP280_readPressure$2567 0025  
      _BMP280_readPressure$2568 0029        _BMP280_readPressure$2569 002D                       _vfpfcnvrt 1F64  
                      _RH_Byte1 00FA                        _RH_Byte2 00F9                  _int_ext_enable 595A  
                    _ADCON1bits 000FC1               ___wmul@multiplier 0001                        _CheckSum 00F8  
       read_data_dht11@dht_data 0001                    _isspace$2220 0007                      vfpfcnvrt@c 005D  
                    vfpfcnvrt@f 0056        __end_of_LCD_Write_Nibble 5640               ___lmul@multiplier 000F  
                   _INTCON2bits 000FF1                     _INTCON3bits 000FF0       dht11_check_humidity@ptr_h 0009  
                     copy_data0 509C           __end_of_BMP280_Read16 5606                      _I2C_Rx_ack 58D8  
                      _i2c_addr 00EB           __end_of_BMP280_Update 48C8                        __Hrparam 0000  
                     memcpy@tmp 000B                      vfprintf@ap 0096                        __Lrparam 0000  
                    vfprintf@fp 0092                ??_Expander_Write 0002          __end_of_int_ext_enable 596A  
          __end_of_I2C_INA_read 52F6                      ?_vfpfcnvrt 0048              ___fpclassifyf@F465 0104  
                GPSRead_gga@alt 0006                      sprintf@fmt 009C                    ?_I2C_Rx_data 0001  
                      ___xxtofl 37B6                    ?_I2C_Rx_nack 0001                    ?_I2C_Tx_data 0001  
                   _GPSRead_gga 3FEA                     _GPSRead_rmc 35FE                        __ptext10 5358  
                      __ptext11 4A6A                        __ptext20 4310                        __ptext12 56E8  
                      __ptext21 4D5A                        __ptext13 5580                        __ptext30 595A  
                      __ptext22 2DD6                        __ptext14 33EC                        __ptext31 581E  
                      __ptext23 48C8                        __ptext15 4514                        __ptext40 5840  
                      __ptext32 571E                        __ptext24 49A0                        __ptext16 420A  
                      __ptext41 4414                        __ptext33 51C6                        __ptext25 3AF0  
                      __ptext17 553A                        __ptext50 4612                        __ptext42 4700  
                      __ptext34 522C                        __ptext26 5406                        __ptext18 24EC  
                      __ptext51 54AA                        __ptext43 4CAA                        __ptext35 4EA8  
                      __ptext27 56B0                        __ptext19 5678                        __ptext60 47E4  
                      __ptext52 5606                        __ptext44 4B30                        __ptext36 37B6  
                      __ptext28 57D4                        __ptext61 1858                        __ptext53 5880  
                      __ptext45 4F30                        __ptext37 29AC                        __ptext29 5458  
                      __ptext70 5782                        __ptext62 515C                        __ptext54 5860  
                      __ptext46 58F0                        __ptext38 5292                        __ptext71 5906  
                      __ptext63 4E04                        __ptext55 35FE                        __ptext47 4FA8  
                      __ptext39 3C46                        __ptext72 591C                        __ptext64 40FE  
                      __ptext56 3FEA                        __ptext48 4BF4                        __ptext73 5932  
                      __ptext65 3D8C                        __ptext57 5018                        __ptext49 50F2  
                      __ptext74 58D8                        __ptext66 589E                        __ptext58 57FA  
                      __ptext67 5750                        __ptext59 3170                        __ptext68 55C4  
                      __ptext69 5948                  GPSRead_rmc@lat 000C                  GPSRead_rmc@lon 000E  
                      _lcd_text 0146      BMP280_readTemperature@temp 001B                      strcpy@dest 0001  
                      _nmea_log 0197                        _humidity 01B2                 _USART_Init$2563 0013  
                      efgtoa@fp 003C                        efgtoa@ne 006A                        efgtoa@pp 0068  
                      efgtoa@ou 006E                       stoa@F1169 01A9                        isa$xinst 000000  
                      _potencia 010C                        int$flags 005F                 ?_int_ext_enable 0001  
                    _INA_2bytes 00E7                        _vfprintf 52F6                       printf@fmt 009A  
          __end_of_BMP280_Read8 5782                       putch@data 0001                  _vfpfcnvrt$2156 0054  
                    _INTCONbits 000FF2            __end_of_BMP280_Write 58BC            __end_of_BMP280_begin 3ED0  
           BMP280_begin@_config 000F                        memcpy@d1 0001                        memcpy@s1 0003  
                      isdigit@c 0001                        intlevel2 0000                       sprintf@ap 00B0  
                   ?_I2C_Rx_ack 0001            BMP280_Read8@reg_addr 0002                        isspace@c 0001  
              ___lldiv@dividend 0001   __end_of_ina219GetBusVoltage_V 4F30    __end_of_dht11_check_humidity 3D8C  
           BMP280_begin@standby 000A                       strcpy@src 0003             GPSRead_rmc@nmea_log 000A  
                      isupper@c 0001        ??_BMP280_readTemperature 001D                       strncmp@_l 0001  
                     strncmp@_r 0003                     efgtoa@nmode 007A                        printf@ap 00AE  
                   ??_vfpfcnvrt 004E                        stoa@nuls 0010    __end_of_check_response_dht11 47E4  
                      sprintf@f 00B2                        tolower@c 0007                        sprintf@s 009A  
              ___lldiv@quotient 0009                      _TMR1_VALUE 0118                        strncmp@l 0008  
                      strncmp@n 0005                        strncmp@r 000A                      _UART_Print 4F30  
                  ___aldiv@sign 000A                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                 ___fladd@signs 000D                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                    _USART_Init 4FA8  
